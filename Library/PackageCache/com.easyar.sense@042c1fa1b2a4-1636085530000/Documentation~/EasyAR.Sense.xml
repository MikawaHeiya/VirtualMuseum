<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyAR.Sense</name>
    </assembly>
    <members>
        <member name="T:easyar.ObjectTargetParameters">
            <summary>
            <para xml:lang="en">
            ObjectTargetParameters represents the parameters to create a `ObjectTarget`_ .
            </para>
            <para xml:lang="zh">
            ObjectTargetParameters表示创建 `ObjectTarget`_ 所需要的参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.bufferDictionary">
            <summary>
            <para xml:lang="en">
            Gets `Buffer`_ dictionary.
            </para>
            <para xml:lang="zh">
            获取 `Buffer`_ 字典。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setBufferDictionary(easyar.BufferDictionary)">
            <summary>
            <para xml:lang="en">
            Sets `Buffer`_ dictionary. obj, mtl and jpg/png files shall be loaded into the dictionay, and be able to be located by relative or absolute paths.
            </para>
            <para xml:lang="zh">
            设置 `Buffer`_ 字典。需要将obj, mtl和jpg/png文件加载到这个字典中，并使得mtl和jpg/png能通过相对或绝对路径查找到。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.objPath">
            <summary>
            <para xml:lang="en">
            Gets obj file path.
            </para>
            <para xml:lang="zh">
            获取obj文件路径。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setObjPath(System.String)">
            <summary>
            <para xml:lang="en">
            Sets obj file path.
            </para>
            <para xml:lang="zh">
            设置obj文件路径。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.name">
            <summary>
            <para xml:lang="en">
            Gets target name. It can be used to distinguish targets.
            </para>
            <para xml:lang="zh">
            获取target名字。名字用来区分target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setName(System.String)">
            <summary>
            <para xml:lang="en">
            Sets target name.
            </para>
            <para xml:lang="zh">
            设置target名字。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.uid">
            <summary>
            <para xml:lang="en">
            Gets the target uid. You can set this uid in the json config as a method to distinguish from targets.
            </para>
            <para xml:lang="zh">
            获取target uid。可以在json配置中设置这个uid，在自己的代码中作为一种区分target的方法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setUid(System.String)">
            <summary>
            <para xml:lang="en">
            Sets target uid.
            </para>
            <para xml:lang="zh">
            设置target uid。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.meta">
            <summary>
            <para xml:lang="en">
            Gets meta data.
            </para>
            <para xml:lang="zh">
            获取meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setMeta(System.String)">
            <summary>
            <para xml:lang="en">
            Sets meta data。
            </para>
            <para xml:lang="zh">
            设置meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.scale">
            <summary>
            <para xml:lang="en">
            Gets the scale of model. The value is the physical scale divided by model coordinate system scale. The default value is 1. (Supposing the unit of model coordinate system is 1 meter.)
            </para>
            <para xml:lang="zh">
            模型的缩放比例。其值为模型在空间中的物理大小与在模型坐标系中的大小的比值，默认值为1。（假设模型坐标系中的标尺单位为米。）
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTargetParameters.setScale(System.Single)">
            <summary>
            <para xml:lang="en">
            Sets the scale of model. The value is the physical scale divided by model coordinate system scale. The default value is 1. (Supposing the unit of model coordinate system is 1 meter.)
            It is needed to set the model scale in rendering engine separately.
            </para>
            <para xml:lang="zh">
            设置模型的缩放比例。其值为模型在空间中的物理大小与在模型坐标系中的大小的比值，默认值为1（假设模型坐标系中的标尺单位为米）。
            还需要在渲染引擎中单独设置此模型缩放。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTarget">
            <summary>
            <para xml:lang="en">
            ObjectTarget represents 3d object targets that can be tracked by `ObjectTracker`_ .
            The size of ObjectTarget is determined by the `obj` file. You can change it by changing the object `scale`, which is default to 1.
            A ObjectTarget can be tracked by `ObjectTracker`_ after a successful load into the `ObjectTracker`_ using `ObjectTracker.loadTarget`_ .
            </para>
            <para xml:lang="zh">
            ObjectTarget表示3D object target，它可以被 `ObjectTracker`_ 所跟踪。
            ObjectTarget的大小由 `obj` 文件决定。可以通过修改 `scale` 达到修改size的目的。 `scale` 默认为1。
            ObjectTarget通过 `ObjectTracker.loadTarget`_ 成功载入 `ObjectTracker`_ 之后可以被 `ObjectTracker`_ 检测和跟踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.createFromParameters(easyar.ObjectTargetParameters)">
            <summary>
            <para xml:lang="en">
            Creates a target from parameters.
            </para>
            <para xml:lang="zh">
            从参数创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.createFromObjectFile(System.String,easyar.StorageType,System.String,System.String,System.String,System.Single)">
            <summary>
            <para xml:lang="en">
            Creats a target from obj, mtl and jpg/png files.
            </para>
            <para xml:lang="zh">
            从obj, mtl和jpg/png文件创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.scale">
            <summary>
            <para xml:lang="en">
            The scale of model. The value is the physical scale divided by model coordinate system scale. The default value is 1. (Supposing the unit of model coordinate system is 1 meter.)
            </para>
            <para xml:lang="zh">
            模型的缩放比例。其值为模型在空间中的物理大小与在模型坐标系中的大小的比值，默认值为1。（假设模型坐标系中的标尺单位为米）
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.boundingBox">
             <summary>
             <para xml:lang="en">
             The bounding box of object, it contains the 8 points of the box.
             Vertices&#39;s indices are defined and stored following the rule:
             ::
            
                   4-----7
                  /|    /|
                 5-----6 |    z
                 | |   | |    |
                 | 0---|-3    o---y
                 |/    |/    /
                 1-----2    x
             </para>
             <para xml:lang="zh">
             物体的包围盒，包括盒子的8个顶点。
             顶点索引定义如下：
             ::
            
                   4-----7
                  /|    /|
                 5-----6 |    z
                 | |   | |    |
                 | 0---|-3    o---y
                 |/    |/    /
                 1-----2    x
             </para>
             </summary>
        </member>
        <member name="M:easyar.ObjectTarget.setScale(System.Single)">
            <summary>
            <para xml:lang="en">
            Sets model target scale, this will overwrite the value set in the json file or the default value. The value is the physical scale divided by model coordinate system scale. The default value is 1. (Supposing the unit of model coordinate system is 1 meter.)
            It is needed to set the model scale in rendering engine separately.
            It also should been done before loading ObjectTarget into  `ObjectTracker`_ using `ObjectTracker.loadTarget`_.
            </para>
            <para xml:lang="zh">
            设置模型的缩放比例。设置之后会覆盖默认值以及在json文件中设的数值。其值为模型在空间中的物理大小与在模型坐标系中的大小的比值，默认值为1。（假设模型坐标系中的标尺单位为米）
            还需要在渲染引擎中单独设置此模型缩放。
            注意该设置需要在通过 `ObjectTracker.loadTarget`_ 载入 `ObjectTracker`_ 之前进行。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.runtimeID">
            <summary>
            <para xml:lang="en">
            Returns the target id. A target id is a integer number generated at runtime. This id is non-zero and increasing globally.
            </para>
            <para xml:lang="zh">
            获取target id。target id是运行时创建的整型数据，只有在成功的配置之后才是有效（非0）的。这个id是非0且全局递增的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.uid">
            <summary>
            <para xml:lang="en">
            Returns the target uid. A target uid is useful in cloud based algorithms. If no cloud is used, you can set this uid in the json config as a alternative method to distinguish from targets.
            </para>
            <para xml:lang="zh">
            获取target uid。ImageTarget的uid在云识别算法中使用。在没有接入云识别的时候，你可以在json配置中设置这个uid，在自己的代码中作为另一种区分target的方法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.name">
            <summary>
            <para xml:lang="en">
            Returns the target name. Name is used to distinguish targets in a json file.
            </para>
            <para xml:lang="zh">
            获取target名字。名字用来在json文件中区分target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.setName(System.String)">
            <summary>
            <para xml:lang="en">
            Set name. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置target名字。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.meta">
            <summary>
            <para xml:lang="en">
            Returns the meta data set by setMetaData. Or, in a cloud returned target, returns the meta data set in the cloud server.
            </para>
            <para xml:lang="zh">
            获取setMetaData所设置的meta data。或者在云识别返回的target中，获得服务器所设置的meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTarget.setMeta(System.String)">
            <summary>
            <para xml:lang="en">
            Set meta data. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置meta data。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTrackerResult">
            <summary>
            <para xml:lang="en">
            Result of `ObjectTracker`_ .
            </para>
            <para xml:lang="zh">
            `ObjectTracker`_ 的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTrackerResult.targetInstances">
            <summary>
            <para xml:lang="en">
            Returns the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            返回当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTrackerResult.setTargetInstances(System.Collections.Generic.List{easyar.TargetInstance})">
            <summary>
            <para xml:lang="en">
            Sets the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            设置当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTracker">
            <summary>
            <para xml:lang="en">
            ObjectTracker implements 3D object target detection and tracking.
            ObjectTracker occupies (1 + SimultaneousNum) buffers of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            After creation, you can call start/stop to enable/disable the track process. start and stop are very lightweight calls.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            ObjectTracker inputs `FeedbackFrame`_ from feedbackFrameSink. `FeedbackFrameSource`_ shall be connected to feedbackFrameSink for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            Before a `Target`_ can be tracked by ObjectTracker, you have to load it using loadTarget/unloadTarget. You can get load/unload results from callbacks passed into the interfaces.
            </para>
            <para xml:lang="zh">
            ObjectTracker实现了3D object target的检测和跟踪。
            ObjectTracker占用(1 + SimultaneousNum)个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            创建之后，可以调用start/stop来开始和停止运行，start/stop是非常轻量的调用。
            当不再需要该组件时，可以调用close对其进行关闭。close之后不应继续使用。
            ObjectTracker通过feedbackFrameSink输入 `FeedbackFrame`_ ，应将 `FeedbackFrameSource`_ 连接到feedbackFrameSink上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            在 `Target`_ 可以被ObjectTracker跟踪之前，你需要通过loadTarget/unloadTarget将它载入。可以通过传入接口的回调来获取load/unload的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true.
            </para>
            <para xml:lang="zh">
            返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.feedbackFrameSink">
            <summary>
            <para xml:lang="en">
            `FeedbackFrame`_ input port. The InputFrame member of FeedbackFrame must have raw image, timestamp, and camera parameters.
            </para>
            <para xml:lang="zh">
            `FeedbackFrame`_ 输入端口。FeedbackFrame中的InputFrame成员要求必须拥有图像、时间戳和camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.outputFrameSource">
            <summary>
            <para xml:lang="en">
            `OutputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `OutputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.start">
            <summary>
            <para xml:lang="en">
            Starts the track algorithm.
            </para>
            <para xml:lang="zh">
            开始跟踪算法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.stop">
            <summary>
            <para xml:lang="en">
            Stops the track algorithm. Call start to start the track again.
            </para>
            <para xml:lang="zh">
            暂停跟踪算法。调用start来重新启动跟踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.loadTarget(easyar.Target,easyar.CallbackScheduler,System.Action{easyar.Target,System.Boolean})">
            <summary>
            <para xml:lang="en">
            Load a `Target`_ into the tracker. A Target can only be tracked by tracker after a successful load.
            This method is an asynchronous method. A load operation may take some time to finish and detection of a new/lost target may take more time during the load. The track time after detection will not be affected. If you want to know the load result, you have to handle the callback data. The callback will be called from the thread specified by `CallbackScheduler`_ . It will not block the track thread or any other operations except other load/unload.
            </para>
            <para xml:lang="zh">
            加载一个 `Target`_ 进入tracker。 `Target`_ 只有在成功加载进入tracker之后才能被识别和跟踪。
            这个方法是异步方法。加载过程可能会需要一些时间来完成，这段时间内新的和丢失的target的检测可能会花比平时更多的时间，但是检测到之后的跟踪不受影响。如果你希望知道加载的结果，需要处理callback数据。callback将会在 `CallbackScheduler`_ 所指定的线程上被调用。跟踪线程和除了其它加载/卸载之外的操作都不会被阻塞。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.unloadTarget(easyar.Target,easyar.CallbackScheduler,System.Action{easyar.Target,System.Boolean})">
            <summary>
            <para xml:lang="en">
            Unload a `Target`_ from the tracker.
            This method is an asynchronous method. An unload operation may take some time to finish and detection of a new/lost target may take more time during the unload. If you want to know the unload result, you have to handle the callback data. The callback will be called from the thread specified by `CallbackScheduler`_ . It will not block the track thread or any other operations except other load/unload.
            </para>
            <para xml:lang="zh">
            从tracker中卸载 `Target`_ 。
            这个方法是异步方法。卸载过程可能会需要一些时间来完成，这段时间内新的和丢失的target的检测可能会花比平时更多的时间，但是检测到之后的跟踪不受影响。如果你希望知道卸载的结果，需要处理callback数据。callback将会在 `CallbackScheduler`_ 所指定的线程上被调用。跟踪线程和除了其它加载/卸载之外的操作都不会被阻塞。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.targets">
            <summary>
            <para xml:lang="en">
            Returns current loaded targets in the tracker. If an asynchronous load/unload is in progress, the returned value will not reflect the result until all load/unload finish.
            </para>
            <para xml:lang="zh">
            返回当前已经被加载进入tracker的target。如果异步的加载/卸载正在执行，在加载/卸载完成之前的返回值将不会反映这些加载/卸载的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.setSimultaneousNum(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets the max number of targets which will be the simultaneously tracked by the tracker. The default value is 1.
            </para>
            <para xml:lang="zh">
            设置最大可被tracker跟踪的目标个数。默认值为1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTracker.simultaneousNum">
            <summary>
            <para xml:lang="en">
            Gets the max number of targets which will be the simultaneously tracked by the tracker. The default value is 1.
            </para>
            <para xml:lang="zh">
            获取最大可被tracker跟踪的目标个数。默认值为1。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CalibrationDownloadStatus.Successful">
            <summary>
            <para xml:lang="en">
            Download successful.
            </para>
            <para xml:lang="zh">
            下载成功
            </para>
            </summary>
        </member>
        <member name="F:easyar.CalibrationDownloadStatus.NotModified">
            <summary>
            <para xml:lang="en">
            Data is already latest.
            </para>
            <para xml:lang="zh">
            数据已是最新版本
            </para>
            </summary>
        </member>
        <member name="F:easyar.CalibrationDownloadStatus.ConnectionError">
            <summary>
            <para xml:lang="en">
            Connection error
            </para>
            <para xml:lang="zh">
            连接错误
            </para>
            </summary>
        </member>
        <member name="F:easyar.CalibrationDownloadStatus.UnexpectedError">
            <summary>
            <para xml:lang="en">
            Unexpected error
            </para>
            <para xml:lang="zh">
            其他错误
            </para>
            </summary>
        </member>
        <member name="T:easyar.CalibrationDownloader">
            <summary>
            <para xml:lang="en">
            CalibrationDownloader is used for download and update of calibration data in MotionTracker. The calibration data will only take effect after reallocation of MotionTracker.
            </para>
            <para xml:lang="zh">
            CalibrationDownloader用于下载更新MotionTracker中使用的标定参数。下载后需要重新创建MotionTracker才会起作用。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.FoundMaps">
            <summary>
            <para xml:lang="en">
            Spatial maps are localized.
            </para>
            <para xml:lang="zh">
            定位到spatial map
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.MapsNotFound">
            <summary>
            <para xml:lang="en">
            No spatial maps are localized.
            </para>
            <para xml:lang="zh">
            没有定位到spatial map
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.ProtocolError">
            <summary>
            <para xml:lang="en">
            Protocol error
            </para>
            <para xml:lang="zh">
            协议错误
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.ExceptionCaught">
            <summary>
            <para xml:lang="en">
            Exception caught
            </para>
            <para xml:lang="zh">
            出现异常
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.RequestTimeout">
            <summary>
            <para xml:lang="en">
            Request time out (more than 1 minute)
            </para>
            <para xml:lang="zh">
            请求延时
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudLocalizeStatus.RequestIntervalTooLow">
            <summary>
            <para xml:lang="en">
            Request time interval is too low
            </para>
            <para xml:lang="zh">
            请求间隔过短
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizeStatus">
            <summary>
            <para xml:lang="en">
            Returns localization status.
            </para>
            <para xml:lang="zh">
            获得定位状态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedMapID">
            <summary>
            <para xml:lang="en">
            Returns ID of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图ID。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedMapName">
            <summary>
            <para xml:lang="en">
            Returns the name of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得地图名。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getPose">
            <summary>
            <para xml:lang="en">
            Returns the camera pose at the best correspond localized map coordinates.
            </para>
            <para xml:lang="zh">
            获得相机在最佳地图的坐标系中的姿态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getDeltaT">
            <summary>
            <para xml:lang="en">
            Returns the transform from local coordinates (if exists) to the best correspond map coordinates.
            </para>
            <para xml:lang="zh">
            获得最佳地图的坐标系相对于本地坐标系的补偿变换。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getAllLocalizedMapID">
            <summary>
            <para xml:lang="en">
            Returns ID of all localized maps.
            </para>
            <para xml:lang="zh">
            获得所有的定位地图ID。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getAllPose">
            <summary>
            <para xml:lang="en">
            Returns the camera pose at all localized map coordinates.
            </para>
            <para xml:lang="zh">
            获得相机在所有地图的坐标系中的姿态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getAllDeltaT">
            <summary>
            <para xml:lang="en">
            Returns the transform from local coordinates (if exists) to all map coordinates.
            </para>
            <para xml:lang="zh">
            获得所有地图的坐标系相对于本地坐标系的补偿变换。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getExtraInfo">
            <summary>
            <para xml:lang="en">
            Returns extra informations of the localization.
            </para>
            <para xml:lang="zh">
            获得额外信息。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getExceptionInfo">
            <summary>
            <para xml:lang="en">
            Returns detailed exception message.
            </para>
            <para xml:lang="zh">
            获得异常信息。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedBlockId">
            <summary>
            <para xml:lang="en">
            Returns the block id of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图的区块ID。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedBlockTimestamp">
            <summary>
            <para xml:lang="en">
            Returns the block timestamp of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图的区块时间戳。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedBlockLocation">
            <summary>
            <para xml:lang="en">
            Returns the block location of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图的区块绝对位置。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedClusterId">
            <summary>
            <para xml:lang="en">
            Returns the cluster id of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图所属簇的ID。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getLocalizedClusterLocation">
            <summary>
            <para xml:lang="en">
            Returns the cluster location of the best correspond localized map.
            </para>
            <para xml:lang="zh">
            获得最佳的定位地图所属簇的绝对位置。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getPoseInCluster">
            <summary>
            <para xml:lang="en">
            Returns the camera pose in the cluster which the best correspond localized map belongs to.
            </para>
            <para xml:lang="zh">
            获得相机在最佳地图所属簇中的姿态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getDeltaTForCluster">
            <summary>
            <para xml:lang="en">
            Returns the transform from local coordinates (if exists) to the best correspond map coordinates.
            </para>
            <para xml:lang="zh">
            获得最佳地图所属簇的坐标系相对于本地坐标系的补偿变换。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizeResult.getDeviceLocation">
            <summary>
            <para xml:lang="en">
            Returns the location of device.
            </para>
            <para xml:lang="zh">
            获得设备的绝对位置。
            </para>
            </summary>
        </member>
        <member name="T:easyar.CloudLocalizer">
            <summary>
            <para xml:lang="en">
            CloudLocalizer implements cloud based localization.
            </para>
            <para xml:lang="zh">
            CloudLocalizer实现了云定位功能。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizer.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true.
            </para>
            <para xml:lang="zh">
            返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizer.create(System.String,System.String,System.String,System.String)">
            <summary>
            <para xml:lang="en">
            Creates an instance and connects to the server.
            </para>
            <para xml:lang="zh">
            创建并连接服务器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizer.resolve(easyar.InputFrame,System.String,easyar.Optional{easyar.Vec3F},easyar.Optional{easyar.Vec3D},easyar.CallbackScheduler,System.Action{easyar.CloudLocalizeResult})">
            <summary>
            <para xml:lang="en">
            Send localization request.
            Send `InputFrame`_ to resolve a cloud localization. `InputFrame`_ should have at least image data and camera parameters.
            message input is a json string.
            acceleration is optional which is the readings from device accelerometer.
            location is optional which is the readings from device location manager.
            </para>
            <para xml:lang="zh">
            请求定位。
            输入`InputFrame`_进行云定位。`InputFrame`_必须包含图像以及相机参数。
            message为json格式字串。
            acceleration是可选项，用于传入设备加速度计的读数。
            location是可选项，用于传入设备位置读数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudLocalizer.close">
            <summary>
            <para xml:lang="en">
            Stops the localization and closes connection. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            停止定位并关闭连接。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizationStatus.UnknownError">
            <summary>
            <para xml:lang="en">
            Unknown error
            </para>
            <para xml:lang="zh">
            未知错误
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizationStatus.FoundTarget">
            <summary>
            <para xml:lang="en">
            A target is recognized.
            </para>
            <para xml:lang="zh">
            识别到target
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizationStatus.TargetNotFound">
            <summary>
            <para xml:lang="en">
            No target is recognized.
            </para>
            <para xml:lang="zh">
            未识别到target
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizationStatus.ReachedAccessLimit">
            <summary>
            <para xml:lang="en">
            Reached the access limit
            </para>
            <para xml:lang="zh">
            到达访问额度
            </para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizationStatus.RequestIntervalTooLow">
            <summary>
            <para xml:lang="en">
            Request interval too low
            </para>
            <para xml:lang="zh">
            请求间隔过低
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizationResult.getStatus">
            <summary>
            <para xml:lang="en">
            Returns recognition status.
            </para>
            <para xml:lang="zh">
            获得识别状态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizationResult.getTarget">
            <summary>
            <para xml:lang="en">
            Returns the recognized target when status is FoundTarget.
            </para>
            <para xml:lang="zh">
            在识别状态为FoundTarget时，获得识别到的target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizationResult.getUnknownErrorMessage">
            <summary>
            <para xml:lang="en">
            Returns the error message when status is UnknownError.
            </para>
            <para xml:lang="zh">
            在识别状态为UnknownError时，获得错误信息。
            </para>
            </summary>
        </member>
        <member name="T:easyar.CloudRecognizer">
            <summary>
            <para xml:lang="en">
            CloudRecognizer implements cloud recognition. It can only be used after created a recognition image library on the cloud. Please refer to EasyAR CRS documentation.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            Before using a CloudRecognizer, an `ImageTracker`_ must be setup and prepared. Any target returned from cloud should be manually put into the `ImageTracker`_ using `ImageTracker.loadTarget`_ if it need to be tracked. Then the target can be used as same as a local target after loaded into the tracker. When a target is recognized, you can get it from callback, and you should use target uid to distinguish different targets. The target runtimeID is dynamically created and cannot be used as unique identifier in the cloud situation.
            </para>
            <para xml:lang="zh">
            CloudRecognizer实现了云识别功能。云识别功能需要在云端创建云识别图库才能使用，请参考EasyAR CRS文档。
            当不再需要该组件时，可以调用close对其进行关闭。close之后不应继续使用。
            在使用CloudRecognizer之前，需要设置并准备好一个 `ImageTracker`_ 。任何返回的target在被track之前都应使用 `ImageTracker.loadTarget`_ 手动加载进入 `ImageTracker`_ 。加载之后，target的识别和跟踪即和本地target的使用相同。在一个target被识别到之后，你可以从回调中获取到，然后你应该使用target uid来区分不同的target。target runtimeID是动态生成的，不适用于作为云识别情况下的target的唯一区分。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizer.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true.
            </para>
            <para xml:lang="zh">
            返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizer.create(System.String,System.String,System.String,System.String)">
            <summary>
            <para xml:lang="en">
            Creates an instance and connects to the server.
            </para>
            <para xml:lang="zh">
            创建并连接服务器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizer.createByCloudSecret(System.String,System.String,System.String)">
            <summary>
            <para xml:lang="en">
            Creates an instance and connects to the server with Cloud Secret.
            </para>
            <para xml:lang="zh">
            使用Cloud Secret创建并连接服务器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizer.resolve(easyar.InputFrame,easyar.CallbackScheduler,System.Action{easyar.CloudRecognizationResult})">
            <summary>
            <para xml:lang="en">
            Send recognition request. The lowest available request interval is 300ms.
            </para>
            <para xml:lang="zh">
            请求识别。可用最低请求间隔为300ms。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizer.close">
            <summary>
            <para xml:lang="en">
            Stops the recognition and closes connection. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            停止识别并关闭连接。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Buffer">
            <summary>
            <para xml:lang="en">
            Buffer stores a raw byte array, which can be used to access image data.
            To access image data in Java API, get buffer from `Image`_ and copy to a Java byte array.
            You can always access image data since the first version of EasyAR Sense. Refer to `Image`_ .
            </para>
            <para xml:lang="zh">
            Buffer 存储了原始字节数组，可以用来访问图像数据。
            在Java API中可以从 `Image`_ 中获取buffer然后copy数据到Java字节数组。
            在EasyAR Sense的所有版本中，你都可以访问图像数据。参考 `Image`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.wrap(System.IntPtr,System.Int32,System.Action)">
            <summary>
            <para xml:lang="en">
            Wraps a raw memory block. When Buffer is released by all holders, deleter callback will be invoked to execute user-defined memory destruction. deleter must be thread-safe.
            </para>
            <para xml:lang="zh">
            包装一个指定长度的原始内存块。在Buffer被完全释放的时候，会调用deleter回调，执行用户自定义内存销毁行为。deleter必须是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.create(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates a Buffer of specified byte size.
            </para>
            <para xml:lang="zh">
            创建一个指定字节长度的Buffer。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.data">
            <summary>
            <para xml:lang="en">
            Returns raw data address.
            </para>
            <para xml:lang="zh">
            返回原始内存地址。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.size">
            <summary>
            <para xml:lang="en">
            Byte size of raw data.
            </para>
            <para xml:lang="zh">
            Buffer的字节长度。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.memoryCopy(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            <para xml:lang="en">
            Copies raw memory. It can be used in languages or platforms without complete support for memory operations.
            </para>
            <para xml:lang="zh">
            复制原始内存。主要用于内存操作不完善的语言或环境。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.tryCopyFrom(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para xml:lang="en">
            Tries to copy data from a raw memory address into Buffer. If copy succeeds, it returns true, or else it returns false. Possible failure causes includes: source or destination data range overflow.
            </para>
            <para xml:lang="zh">
            尝试从原始内存地址复制数据到Buffer中。如果复制成功，则返回true，否则返回false。失败的原因有：源数据范围或目标数据范围超出可用范围。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.tryCopyTo(System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            <para xml:lang="en">
            Tries to copy data from Buffer to user array. If copy succeeds, it returns true, or else it returns false. Possible failure causes includes: source or destination data range overflow.
            </para>
            <para xml:lang="zh">
            尝试从Buffer复制数据到原始内存地址中。如果复制成功，则返回true，否则返回false。失败的原因有：源数据范围或目标数据范围超出可用范围。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Buffer.partition(System.Int32,System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates a sub-buffer with a reference to the original Buffer. A Buffer will only be released after all its sub-buffers are released.
            </para>
            <para xml:lang="zh">
            创建一个子Buffer，并引用原Buffer。一个Buffer在所有子Buffer释放后才会释放。
            </para>
            </summary>
        </member>
        <member name="T:easyar.BufferDictionary">
            <summary>
            <para xml:lang="en">
            A mapping from file path to `Buffer`_ . It can be used to represent multiple files in the memory.
            </para>
            <para xml:lang="zh">
            一个从文件路径到 `Buffer`_ 的映射。用于表示多个放在内存中的文件。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.count">
            <summary>
            <para xml:lang="en">
            Current file count.
            </para>
            <para xml:lang="zh">
            当前文件数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.contains(System.String)">
            <summary>
            <para xml:lang="en">
            Checks if a specified path is in the dictionary.
            </para>
            <para xml:lang="zh">
            确定指定路径是否在字典中。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.tryGet(System.String)">
            <summary>
            <para xml:lang="en">
            Tries to get the corresponding `Buffer`_ for a specified path.
            </para>
            <para xml:lang="zh">
            尝试获得指定路径对应的 `Buffer`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.set(System.String,easyar.Buffer)">
            <summary>
            <para xml:lang="en">
            Sets `Buffer`_ for a specified path.
            </para>
            <para xml:lang="zh">
            设置指定路径对应的 `Buffer`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.remove(System.String)">
            <summary>
            <para xml:lang="en">
            Removes a specified path.
            </para>
            <para xml:lang="zh">
            移除指定的路径。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferDictionary.clear">
            <summary>
            <para xml:lang="en">
            Clears the dictionary.
            </para>
            <para xml:lang="zh">
            清空字典。
            </para>
            </summary>
        </member>
        <member name="T:easyar.BufferPool">
            <summary>
            <para xml:lang="en">
            BufferPool is a memory pool to reduce memory allocation time consumption for functionality like custom camera interoperability, which needs to allocate memory buffers of a fixed size repeatedly.
            </para>
            <para xml:lang="zh">
            BufferPool 实现了一个内存池，可用于自定义摄像头接入等需要反复分配相同大小内存的功能，降低内存分配耗时。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferPool.#ctor(System.Int32,System.Int32)">
            <summary>
            <para xml:lang="en">
            block_size is the byte size of each `Buffer`_ .
            capacity is the maximum count of `Buffer`_ .
            </para>
            <para xml:lang="zh">
            block_size为每个 `Buffer`_ 的字节大小。
            capacity为最大 `Buffer`_ 数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferPool.block_size">
            <summary>
            <para xml:lang="en">
            The byte size of each `Buffer`_ .
            </para>
            <para xml:lang="zh">
            每个 `Buffer`_ 的字节大小。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferPool.capacity">
            <summary>
            <para xml:lang="en">
            The maximum count of `Buffer`_ .
            </para>
            <para xml:lang="zh">
            最大 `Buffer`_ 数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferPool.size">
            <summary>
            <para xml:lang="en">
            Current acquired count of `Buffer`_ .
            </para>
            <para xml:lang="zh">
            当前外部获得的 `Buffer`_ 数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.BufferPool.tryAcquire">
            <summary>
            <para xml:lang="en">
            Tries to acquire a memory block. If current acquired count of `Buffer`_ does not reach maximum, a new `Buffer`_ is fetched or allocated, or else null is returned.
            </para>
            <para xml:lang="zh">
            尝试获得内存块。如果当前外部获得的 `Buffer`_ 数量没有达到最大 `Buffer`_ 数量，则取出或分配一个新的 `Buffer`_ ，否则返回空。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceType.Unknown">
            <summary>
            <para xml:lang="en">
            Unknown location
            </para>
            <para xml:lang="zh">
            未知位置
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceType.Back">
            <summary>
            <para xml:lang="en">
            Rear camera
            </para>
            <para xml:lang="zh">
            后置camera
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceType.Front">
            <summary>
            <para xml:lang="en">
            Front camera
            </para>
            <para xml:lang="zh">
            前置camera
            </para>
            </summary>
        </member>
        <member name="T:easyar.MotionTrackingStatus">
            <summary>
            <para xml:lang="en">
            MotionTrackingStatus describes the quality of device motion tracking.
            </para>
            <para xml:lang="zh">
            描述设备运动跟踪的质量。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackingStatus.NotTracking">
            <summary>
            <para xml:lang="en">
            Result is not available and should not to be used to render virtual objects or do 3D reconstruction. This value occurs temporarily after initializing, tracking lost or relocalizing.
            </para>
            <para xml:lang="zh">
            结果不可用，原因可能是正在初始化，跟踪丢失或者正在重定位。该状态不可以渲染物体或者做三维重建。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackingStatus.Limited">
            <summary>
            <para xml:lang="en">
            Tracking is available, but the quality of the result is not good enough. This value occurs temporarily due to weak texture or excessive movement. The result can be used to render virtual objects, but should generally not be used to do 3D reconstruction.
            </para>
            <para xml:lang="zh">
            跟踪是有效的，但是结果不太好，原因可能是当前区域纹理太弱或运动过快。建议用来渲染物体，但不建议做三维重建。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackingStatus.Tracking">
            <summary>
            <para xml:lang="en">
            Tracking with a good quality. The result can be used to render virtual objects or do 3D reconstruction.
            </para>
            <para xml:lang="zh">
            跟踪质量好，可以用来渲染物体或者做三维重建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.CameraParameters">
            <summary>
            <para xml:lang="en">
            Camera parameters, including image size, focal length, principal point, camera type and camera rotation against natural orientation.
            </para>
            <para xml:lang="zh">
            camera参数，包括图像大小、焦距、主点、camera类型和camera相对设备自然方向的旋转角度。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.size">
            <summary>
            <para xml:lang="en">
            Image size.
            </para>
            <para xml:lang="zh">
            图像大小。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.focalLength">
            <summary>
            <para xml:lang="en">
            Focal length, the distance from effective optical center to CCD plane, divided by unit pixel density in width and height directions. The unit is pixel.
            </para>
            <para xml:lang="zh">
            焦距。相机的等效光心到CCD平面的距离除以宽高两个方向的单位像素密度。单位为像素。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.principalPoint">
            <summary>
            <para xml:lang="en">
            Principal point, coordinates of the intersection point of principal axis on CCD plane against the left-top corner of the image. The unit is pixel.
            </para>
            <para xml:lang="zh">
            主点。相机的主光轴在CCD平面上的交点到图像左上角的像素坐标。单位为像素。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.cameraDeviceType">
            <summary>
            <para xml:lang="en">
            Camera device type. Default, back or front camera. On desktop devices, there are only default cameras. On mobile devices, there is a differentiation between back and front cameras.
            </para>
            <para xml:lang="zh">
            相机设备类型。默认camera、后置camera或前置camera。桌面设备均为默认camera，移动设备区分后置camera和前置camera。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.cameraOrientation">
            <summary>
            <para xml:lang="en">
            Camera rotation against device natural orientation.
            For Android phones and some Android tablets, this value is 90 degrees.
            For Android eye-wear and some Android tablets, this value is 0 degrees.
            For all current iOS devices, this value is 90 degrees.
            </para>
            <para xml:lang="zh">
            camera相对设备自然方向的旋转角度。
            Android手机和部分Android平板为90度。
            Android眼镜和部分Android平板为0度。
            现有iOS设备均为90度。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.createWithDefaultIntrinsics(easyar.Vec2I,easyar.CameraDeviceType,System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates CameraParameters with default camera intrinsics. Default intrinsics are calculated by image size, which is not very precise.
            </para>
            <para xml:lang="zh">
            以默认相机内参创建CameraParameters。默认相机内参（焦距、主点）根据图像大小自动计算，但并不是特别准确。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.getResized(easyar.Vec2I)">
            <summary>
            <para xml:lang="en">
            Get equivalent CameraParameters for a different camera image size.
            </para>
            <para xml:lang="zh">
            获取相机图像大小改变后的等效CameraParameters。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.imageOrientation(System.Int32)">
            <summary>
            <para xml:lang="en">
            Calculates the angle required to rotate the camera image clockwise to align it with the screen.
            screenRotation is the angle of rotation of displaying screen image against device natural orientation in clockwise in degrees.
            For iOS(UIInterfaceOrientationPortrait as natural orientation):
            * UIInterfaceOrientationPortrait: rotation = 0
            * UIInterfaceOrientationLandscapeRight: rotation = 90
            * UIInterfaceOrientationPortraitUpsideDown: rotation = 180
            * UIInterfaceOrientationLandscapeLeft: rotation = 270
            For Android:
            * Surface.ROTATION_0 = 0
            * Surface.ROTATION_90 = 90
            * Surface.ROTATION_180 = 180
            * Surface.ROTATION_270 = 270
            </para>
            <para xml:lang="zh">
            计算图像需要相对于屏幕进行顺时针旋转以和屏幕对齐所需要的角度。
            screenRotation为屏幕图像相对于自然方向顺时针旋转的角度。
            对于iOS，有
            * UIInterfaceOrientationPortrait: screenRotation = 0
            * UIInterfaceOrientationLandscapeRight: screenRotation = 90
            * UIInterfaceOrientationPortraitUpsideDown: screenRotation = 180
            * UIInterfaceOrientationLandscapeLeft: screenRotation = 270
            对于Android，有
            * Surface.ROTATION_0: screenRotation = 0
            * Surface.ROTATION_90: screenRotation = 90
            * Surface.ROTATION_180: screenRotation = 180
            * Surface.ROTATION_270: screenRotation = 270
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.imageHorizontalFlip(System.Boolean)">
            <summary>
            <para xml:lang="en">
            Calculates whether the image needed to be flipped horizontally. The image is rotated, then flipped in rendering. When cameraDeviceType is front, a flip is automatically applied. Pass manualHorizontalFlip with true to add a manual flip.
            </para>
            <para xml:lang="zh">
            计算图像是否需要左右翻转。图像渲染时，先进行旋转，再进行翻转。当cameraDeviceType为前置摄像头时，会自动进行翻转，可在此基础上，传入manualHorizontalFlip再叠加一次手动翻转。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.projection(System.Single,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <para xml:lang="en">
            Calculates the perspective projection matrix needed by virtual object rendering. The projection transforms points from camera coordinate system to clip coordinate system ([-1, 1]^4). The form of perspective projection matrix is the same as OpenGL, that matrix multiply column vector of homogeneous coordinates of point on the right, ant not like Direct3D, that matrix multiply row vector of homogeneous coordinates of point on the left. But data arrangement is row-major, not like OpenGL&#39;s column-major. Clip coordinate system and normalized device coordinate system are defined as the same as OpenGL&#39;s default.
            </para>
            <para xml:lang="zh">
            计算渲染虚拟物体所需要的透视投影矩阵，将camera坐标系下的点变换到剪裁坐标系（[-1, 1]^4）中。透视投影矩阵的形式和OpenGL相同，为矩阵右边乘以点的齐次坐标的列向量，而非Direct3D的矩阵左边乘以点的齐次坐标的列向量。但数据的排列方式为row-major，与OpenGL的column-major相反。剪裁坐标系和单位化设备坐标系的定义与OpenGL默认相同。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.imageProjection(System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <para xml:lang="en">
            Calculates the orthogonal projection matrix needed by camera background rendering. The projection transforms points from image quad coordinate system ([-1, 1]^2) to clip coordinate system ([-1, 1]^4), with the undefined two dimensions unchanged. The form of orthogonal projection matrix is the same as OpenGL, that matrix multiply column vector of homogeneous coordinates of point on the right, ant not like Direct3D, that matrix multiply row vector of homogeneous coordinates of point on the left. But data arrangement is row-major, not like OpenGL&#39;s column-major. Clip coordinate system and normalized device coordinate system are defined as the same as OpenGL&#39;s default.
            </para>
            <para xml:lang="zh">
            计算渲染摄像机背景图像所需要的正交投影矩阵，将图像矩形坐标系下（[-1, 1]^2）的点变换到剪裁坐标系（[-1, 1]^4）中，未定义的两维保持不变。正交投影矩阵的形式和OpenGL相同，为矩阵右边乘以点的齐次坐标，而非Direct3D的矩阵左边乘以点的齐次坐标。但数据的排列方式为row-major，与OpenGL的column-major相反。剪裁坐标系和单位化设备坐标系的定义与OpenGL默认相同。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.screenCoordinatesFromImageCoordinates(System.Single,System.Int32,System.Boolean,System.Boolean,easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Transforms points from image coordinate system ([0, 1]^2) to screen coordinate system ([0, 1]^2). Both coordinate system is x-left, y-down, with origin at left-top.
            </para>
            <para xml:lang="zh">
            从图像坐标系（[0, 1]^2）变换到屏幕坐标系（[0, 1]^2），两个坐标系均x朝右、y朝下，原点在左上角。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.imageCoordinatesFromScreenCoordinates(System.Single,System.Int32,System.Boolean,System.Boolean,easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Transforms points from screen coordinate system ([0, 1]^2) to image coordinate system ([0, 1]^2). Both coordinate system is x-left, y-down, with origin at left-top.
            </para>
            <para xml:lang="zh">
            从屏幕坐标系（[0, 1]^2）变换到图像坐标系（[0, 1]^2），两个坐标系均x朝右、y朝下，原点在左上角。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraParameters.equalsTo(easyar.CameraParameters)">
            <summary>
            <para xml:lang="en">
            Checks if two groups of parameters are equal.
            </para>
            <para xml:lang="zh">
            判断两组参数是否相等。
            </para>
            </summary>
        </member>
        <member name="T:easyar.PixelFormat">
            <summary>
            <para xml:lang="en">
            PixelFormat represents the format of image pixel data. All formats follow the pixel direction from left to right and from top to bottom.
            </para>
            <para xml:lang="zh">
            PixelFormat表示图像像素格式。所有格式的像素方向均为从左到右，从上到下的。
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.Unknown">
            <summary>
            <para xml:lang="en">
            Unknown
            </para>
            <para xml:lang="zh">
            未知
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.Gray">
            <summary>
            <para xml:lang="en">
            256 shades grayscale
            </para>
            <para xml:lang="zh">
            256阶灰度
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.YUV_NV21">
            <summary>
            <para xml:lang="en">
            YUV_NV21
            </para>
            <para xml:lang="zh">
            YUV_NV21
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.YUV_NV12">
            <summary>
            <para xml:lang="en">
            YUV_NV12
            </para>
            <para xml:lang="zh">
            YUV_NV12
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.YUV_I420">
            <summary>
            <para xml:lang="en">
            YUV_I420
            </para>
            <para xml:lang="zh">
            YUV_I420
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.YUV_YV12">
            <summary>
            <para xml:lang="en">
            YUV_YV12
            </para>
            <para xml:lang="zh">
            YUV_YV12
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.RGB888">
            <summary>
            <para xml:lang="en">
            RGB888
            </para>
            <para xml:lang="zh">
            RGB888
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.BGR888">
            <summary>
            <para xml:lang="en">
            BGR888
            </para>
            <para xml:lang="zh">
            BGR888
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.RGBA8888">
            <summary>
            <para xml:lang="en">
            RGBA8888
            </para>
            <para xml:lang="zh">
            RGBA8888
            </para>
            </summary>
        </member>
        <member name="F:easyar.PixelFormat.BGRA8888">
            <summary>
            <para xml:lang="en">
            BGRA8888
            </para>
            <para xml:lang="zh">
            BGRA8888
            </para>
            </summary>
        </member>
        <member name="T:easyar.Image">
             <summary>
             <para xml:lang="en">
             Image stores an image data and represents an image in memory.
             Image raw data can be accessed as byte array. The width/height/etc information are also accessible.
             You can always access image data since the first version of EasyAR Sense.
            
             You can do this in iOS
             ::
            
                 #import &lt;easyar/buffer.oc.h&gt;
                 #import &lt;easyar/image.oc.h&gt;
            
                 easyar_OutputFrame * outputFrame = [outputFrameBuffer peek];
                 if (outputFrame != nil) {
                     easyar_Image * i = [[outputFrame inputFrame] image];
                     easyar_Buffer * b = [i buffer];
                     char * bytes = calloc([b size], 1);
                     memcpy(bytes, [b data], [b size]);
                     // use bytes here
                     free(bytes);
                 }
            
             Or in Android
             ::
            
                 import cn.easyar.*;
            
                 OutputFrame outputFrame = outputFrameBuffer.peek();
                 if (outputFrame != null) {
                     InputFrame inputFrame = outputFrame.inputFrame();
                     Image i = inputFrame.image();
                     Buffer b = i.buffer();
                     byte[] bytes = new byte[b.size()];
                     b.copyToByteArray(0, bytes, 0, bytes.length);
                     // use bytes here
                     b.dispose();
                     i.dispose();
                     inputFrame.dispose();
                     outputFrame.dispose();
                 }
             </para>
             <para xml:lang="zh">
             Image存储了图像数据，用来表示内存中的图像。
             Image以字节数组的方式提供了对原始数据的访问，同时也提供了访问width/height等信息的接口。
             在EasyAR Sense的所有版本中，你都可以访问图像数据。
            
             在iOS中可以这样访问
             ::
            
                 #import &lt;easyar/buffer.oc.h&gt;
                 #import &lt;easyar/image.oc.h&gt;
            
                 easyar_OutputFrame * outputFrame = [outputFrameBuffer peek];
                 if (outputFrame != nil) {
                     easyar_Image * i = [[outputFrame inputFrame] image];
                     easyar_Buffer * b = [i buffer];
                     char * bytes = calloc([b size], 1);
                     memcpy(bytes, [b data], [b size]);
                     // use bytes here
                     free(bytes);
                 }
            
             在Android里面，
             ::
            
                 import cn.easyar.*;
            
                 OutputFrame outputFrame = outputFrameBuffer.peek();
                 if (outputFrame != null) {
                     InputFrame inputFrame = outputFrame.inputFrame();
                     Image i = inputFrame.image();
                     Buffer b = i.buffer();
                     byte[] bytes = new byte[b.size()];
                     b.copyToByteArray(0, bytes, 0, bytes.length);
                     // use bytes here
                     b.dispose();
                     i.dispose();
                     inputFrame.dispose();
                     outputFrame.dispose();
                 }
             </para>
             </summary>
        </member>
        <member name="M:easyar.Image.buffer">
            <summary>
            <para xml:lang="en">
            Returns buffer inside image. It can be used to access internal data of image. The content of `Buffer`_ shall not be modified, as they may be accessed from other threads.
            </para>
            <para xml:lang="zh">
            返回图像中的数据buffer。可以使用 `Buffer`_ API访问内部数据。不应对获得的数据 `Buffer`_ 的内容进行修改，因为这些内容可能在其他线程被使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Image.format">
            <summary>
            <para xml:lang="en">
            Returns image format.
            </para>
            <para xml:lang="zh">
            返回图像格式。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Image.width">
            <summary>
            <para xml:lang="en">
            Returns image width.
            </para>
            <para xml:lang="zh">
            返回图像宽度。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Image.height">
            <summary>
            <para xml:lang="en">
            Returns image height.
            </para>
            <para xml:lang="zh">
            返回图像高度。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Matrix44F">
            <summary>
            <para xml:lang="en">
            Square matrix of 4. The data arrangement is row-major.
            </para>
            <para xml:lang="zh">
            四阶方阵。数据的排列方式为row-major。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Matrix44F.data">
            <summary>
            <para xml:lang="en">
            The raw data of matrix.
            </para>
            <para xml:lang="zh">
            矩阵的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Matrix33F">
            <summary>
            <para xml:lang="en">
            Square matrix of 3. The data arrangement is row-major.
            </para>
            <para xml:lang="zh">
            三阶方阵。数据的排列方式为row-major。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Matrix33F.data">
            <summary>
            <para xml:lang="en">
            The raw data of matrix.
            </para>
            <para xml:lang="zh">
            矩阵的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec3D">
            <summary>
            <para xml:lang="en">
            3 dimensional vector of double.
            </para>
            <para xml:lang="zh">
            三维double向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec3D.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec4F">
            <summary>
            <para xml:lang="en">
            4 dimensional vector of float.
            </para>
            <para xml:lang="zh">
            四维float向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec4F.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec3F">
            <summary>
            <para xml:lang="en">
            3 dimensional vector of float.
            </para>
            <para xml:lang="zh">
            三维float向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec3F.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec2F">
            <summary>
            <para xml:lang="en">
            2 dimensional vector of float.
            </para>
            <para xml:lang="zh">
            二维float向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec2F.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec4I">
            <summary>
            <para xml:lang="en">
            4 dimensional vector of int.
            </para>
            <para xml:lang="zh">
            四维int向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec4I.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Vec2I">
            <summary>
            <para xml:lang="en">
            2 dimensional vector of int.
            </para>
            <para xml:lang="zh">
            二维int向量。
            </para>
            </summary>
        </member>
        <member name="P:easyar.Vec2I.data">
            <summary>
            <para xml:lang="en">
            The raw data of vector.
            </para>
            <para xml:lang="zh">
            向量的原始数据数组。
            </para>
            </summary>
        </member>
        <member name="T:easyar.DenseSpatialMap">
            <summary>
            <para xml:lang="en">
            DenseSpatialMap is used to reconstruct the environment accurately and densely. The reconstructed model is represented by `triangle mesh`, which is denoted simply by `mesh`.
            DenseSpatialMap occupies 1 buffers of camera.
            </para>
            <para xml:lang="zh">
            DenseSpatialMap用来对环境进行精确的三维稠密重建，其重建的模型用三角网格表示，称为mesh。
            DenseSpatialMap占用1个camera的buffer。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns True when the device supports dense reconstruction, otherwise returns False.
            </para>
            <para xml:lang="zh">
            当设备支持稠密重建功能时返回True，否则返回False。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.inputFrameSink">
            <summary>
            <para xml:lang="en">
            Input port for input frame. For DenseSpatialMap to work, the inputFrame must include image and it&#39;s camera parameters and spatial information (cameraTransform and trackingStatus). See also `InputFrameSink`_ .
            </para>
            <para xml:lang="zh">
            输入帧输入端口。DenseSpatialMap输入帧必须包含图像和对应的camera参数、空间信息（cameraTransform和trackingStatus）。参考 `InputFrameSink`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.create">
            <summary>
            <para xml:lang="en">
            Create `DenseSpatialMap`_ object.
            </para>
            <para xml:lang="zh">
            创建`DenseSpatialMap`_对象。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.start">
            <summary>
            <para xml:lang="en">
            Start or continue runninng `DenseSpatialMap`_ algorithm.
            </para>
            <para xml:lang="zh">
            开始重建或从暂停中恢复，继续重建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.stop">
            <summary>
            <para xml:lang="en">
            Pause the reconstruction algorithm. Call `start` to resume reconstruction.
            </para>
            <para xml:lang="zh">
            暂停重建过程。调用start来继续重建过程。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.close">
            <summary>
            <para xml:lang="en">
            Close `DenseSpatialMap`_ algorithm.
            </para>
            <para xml:lang="zh">
            关闭重建过程。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.getMesh">
            <summary>
            <para xml:lang="en">
            Get the mesh management object of type `SceneMesh`_ . The contents will automatically update after calling the `DenseSpatialMap.updateSceneMesh`_ function.
            </para>
            <para xml:lang="zh">
            获取 `SceneMesh`_ 类型的mesh管理对象。其中的内容会在调用`DenseSpatialMap.updateSceneMesh`_ 函数之后自动更新。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DenseSpatialMap.updateSceneMesh(System.Boolean)">
            <summary>
            <para xml:lang="en">
            Get the lastest updated mesh and save it to the `SceneMesh`_ object obtained by `DenseSpatialMap.getMesh`_ .
            The parameter `updateMeshAll` indicates whether to perform a `full update` or an `incremental update`. When `updateMeshAll` is True, `full update` is performed. All meshes are saved to `SceneMesh`_ . When `updateMeshAll` is False, `incremental update` is performed, and only the most recently updated mesh is saved to `SceneMesh`_ .
            `Full update` will take extra time and memory space, causing performance degradation.
            </para>
            <para xml:lang="zh">
            获取最近更新的mesh，保存到由`DenseSpatialMap.getMesh`_ 得到的 `SceneMesh`_ 对象中。
            参数updateMeshAll指明是进行full update还是incremental update。当updateMeshAll为True时进行full update，所有的mesh都会保存到`SceneMesh`_ 中；当updateMeshAll为False时进行incremental update，只保存最近更新的mesh到`SceneMesh`_ 中。
            进行full update将占用额外的时间和内存空间，导致性能下降。
            </para>
            </summary>
        </member>
        <member name="T:easyar.BlockInfo">
             <summary>
             <para xml:lang="en">
             The dense reconstructed model is represented by triangle mesh, or simply denoted as mesh. Because mesh updates frequently, in order to ensure efficiency, the mesh of the whole reconstruction model is divided into many mesh blocks. A mesh block is composed of a cube about 1 meter long, with attributes such as vertices and indices.
            
             BlockInfo is used to describe the content of a mesh block. (x, y, z) is the index of mesh block, the coordinates of a mesh block&#39;s origin in world coordinate system can be obtained by  multiplying (x, y, z) by the physical size of mesh block. You may filter the part you want to display in advance by the mesh block&#39;s world coordinates for the sake of saving rendering time.
             </para>
             <para xml:lang="zh">
             稠密重建得到的模型使用三角网格表示，称为mesh。由于mesh会进行频繁的更新，为了保证效率，整个重建模型的mesh被分割成了非常多的mesh block。一个mesh block由一个边长大概1米的立方体组成，其中有vertex和index等元素。
            
             BlockInfo用来描述一个mesh block的内容。其中(x,y,z)是mesh block的索引，将(x,y,z)乘上每个mesh block的物理尺寸可以获得这个mesh block的原点在世界坐标系中的坐标。可以通过mesh block在世界中的位置对需要显示的部分进行提前过滤，以节省渲染需要的时间。
             </para>
             </summary>
        </member>
        <member name="F:easyar.BlockInfo.x">
            <summary>
            <para xml:lang="en">
            x in index (x, y, z) of mesh block.
            </para>
            <para xml:lang="zh">
            mesh block的索引(x,y,z)中的x。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.y">
            <summary>
            <para xml:lang="en">
            y in index (x, y, z) of mesh block.
            </para>
            <para xml:lang="zh">
            mesh block的索引(x,y,z)中的y。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.z">
            <summary>
            <para xml:lang="en">
            z in index (x, y, z) of mesh block.
            </para>
            <para xml:lang="zh">
            mesh block的索引(x,y,z)中的z。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.numOfVertex">
            <summary>
            <para xml:lang="en">
            Number of vertices in a mesh block.
            </para>
            <para xml:lang="zh">
            一个mesh block中所拥有的顶点的数目。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.startPointOfVertex">
            <summary>
            <para xml:lang="en">
            startPointOfVertex is the starting position of the vertex data stored in the vertex buffer, indicating from where the stored vertices belong to current mesh block. It is not equal to the number of bytes of the offset from the beginning of vertex buffer. The offset is startPointOfVertex*3*4 bytes.
            </para>
            <para xml:lang="zh">
            顶点数据在vertex buffer中存放的起始位置，表示从第几个顶点开始是属于当前这个mesh block的。不等于偏移量的字节数，起始位置的偏移为startPointOfVertex*3*4个字节。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.numOfIndex">
            <summary>
            <para xml:lang="en">
            The number of indices in a mesh block. Each of three consecutive vertices form a triangle.
            </para>
            <para xml:lang="zh">
            一个mesh block中所拥有的索引的数目，每连续3个顶点构成一个三角面。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.startPointOfIndex">
            <summary>
            <para xml:lang="en">
            Similar to startPointOfVertex. startPointOfIndex is the starting position of the index data stored in the index buffer, indicating from where the stored indices belong to current mesh block. It is not equal to the number of bytes of the offset from the beginning of index buffer. The offset is startPointOfIndex*3*4 bytes.
            </para>
            <para xml:lang="zh">
            与startPointOfVertex类似。索引数据在index buffer中存放的起始位置，表示从第几个索引开始是属于当前这个mesh block的。不等于偏移量的字节数，起始位置的偏移为startPointOfIndex*3*4个字节。
            </para>
            </summary>
        </member>
        <member name="F:easyar.BlockInfo.version">
            <summary>
            <para xml:lang="en">
            Version represents how many times the mesh block has updated. The larger the version, the newer the block. If the version of a mesh block increases after calling `DenseSpatialMap.updateSceneMesh`_ , it indicates that the mash block has changed.
            </para>
            <para xml:lang="zh">
            当前mesh block更新的次数，version越大表示更新的次数更多。如果调用`DenseSpatialMap.updateSceneMesh`_ 后一个mesh block的version变大了，说明其中的内容发生了变化。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SceneMesh">
            <summary>
            <para xml:lang="en">
            SceneMesh is used to manage and preserve the results of `DenseSpatialMap`_.
            There are two kinds of meshes saved in SceneMesh, one is the mesh of the whole reconstructed scene, hereinafter referred to as `meshAll`, the other is the recently updated mesh, hereinafter referred to as `meshUpdated`. `meshAll` is a whole mesh, including all vertex data and index data, etc. `meshUpdated` is composed of several `mesh block` s, each `mesh block` is a cube, which contains the mesh formed by the object surface in the corresponding cube space.
            `meshAll` is available only when the `DenseSpatialMap.updateSceneMesh`_ method is called specifying that all meshes need to be updated. If `meshAll` has been updated previously and not updated in recent times, the data in `meshAll` is remain the same.
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNumOfVertexAll">
            <summary>
            <para xml:lang="en">
            Get the number of vertices in `meshAll`.
            </para>
            <para xml:lang="zh">
            获取meshAll中顶点的数目。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNumOfIndexAll">
            <summary>
            <para xml:lang="en">
            Get the number of indices in `meshAll`. Since every 3 indices form a triangle, the returned value should be a multiple of 3.
            </para>
            <para xml:lang="zh">
            获取meshAll中索引的数目。由于每3个索引构成一个三角面，返回的数值应该是3的整数倍。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getVerticesAll">
            <summary>
            <para xml:lang="en">
            Get the position component of the vertices in `meshAll` (in the world coordinate system). The position of a vertex is described by three coordinates (x, y, z) in meters. The position data are stored tightly in `Buffer`_ by `x1, y1, z1, x2, y2, z2, ...` Each component is of `float` type.
            </para>
            <para xml:lang="zh">
            获取meshAll中的顶点的位置数据（世界坐标系下）。一个顶点的位置由(x,y,z)三个坐标描述，单位是米。位置数据在Buffer中是按照x1,y1,z1,x2,y2,z2,...紧密排列的。每个分量都是float类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNormalsAll">
            <summary>
            <para xml:lang="en">
            Get the normal component of vertices in `meshAll`. The normal of a vertex is described by three components (nx, ny, nz). The normal is normalized, that is, the length is 1. Normal data are stored tightly in `Buffer`_ by `nx1, ny1, nz1, nx2, ny2, nz2,....` Each component is of `float` type.
            </para>
            <para xml:lang="zh">
            获取meshAll中的顶点的法向量数据。一个顶点的法向量由(nx,ny,nz)三个分量描述，该法向量是归一化后的结果，即模长为1。法向量数据在Buffer中是按照nx1,ny1,nz1,nx2,ny2,nz2,...紧密排列的。每个分量都是float类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getIndicesAll">
            <summary>
            <para xml:lang="en">
            Get the index data in `meshAll`. Each triangle is composed of three indices (ix, iy, iz). Indices are stored tightly in `Buffer`_ by `ix1, iy1, iz1, ix2, iy2, iz2,...` Each component is of `int32` type.
            </para>
            <para xml:lang="zh">
            获取meshAll中的索引数据。每一个三角面由(ix,iy,iz)三个索引构成。索引数据在Buffer中是按照ix1,iy1,iz1,ix2,iy2,iz2,...紧密排列的。每个分量都是int32类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNumOfVertexIncremental">
            <summary>
            <para xml:lang="en">
            Get the number of vertices in `meshUpdated`.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中顶点的数目。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNumOfIndexIncremental">
            <summary>
            <para xml:lang="en">
            Get the number of indices in `meshUpdated`. Since every 3 indices form a triangle, the returned value should be a multiple of 3.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中索引的数目。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getVerticesIncremental">
            <summary>
            <para xml:lang="en">
            Get the position component of the vertices in `meshUpdated` (in the world coordinate system). The position of a vertex is described by three coordinates (x, y, z) in meters. The position data are stored tightly in `Buffer`_ by `x1, y1, z1, x2, y2, z2, ...` Each component is of `float` type.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中的顶点的位置数据（世界坐标系下）。一个顶点的位置由(x,y,z)三个坐标描述，单位是米。顶点数据在Buffer中是按照x1,y1,z1,x2,y2,z2,...紧密排列的。每个分量都是float类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getNormalsIncremental">
            <summary>
            <para xml:lang="en">
            Get the normal component of vertices in `meshUpdated`. The normal of a vertex is described by three components (nx, ny, nz). The normal is normalized, that is, the length is 1. Normal data are stored tightly in `Buffer`_ by `nx1, ny1, nz1, nx2, ny2, nz2,....` Each component is of `float` type.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中的顶点的法向量数据（世界坐标系下）。一个顶点的法向量由(nx,ny,nz)三个分量描述，该法向量是归一化后的结果，即模长为1。法向量数据在Buffer中是按照nx1,ny1,nz1,nx2,ny2,nz2,...紧密排列的。每个分量都是float类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getIndicesIncremental">
            <summary>
            <para xml:lang="en">
            Get the index data in `meshUpdated`. Each triangle is composed of three indices (ix, iy, iz). Indices are stored tightly in `Buffer`_ by `ix1, iy1, iz1, ix2, iy2, iz2,...` Each component is of `int32` type.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中的所有三角面的索引。每一个三角面由(ix,iy,iz)三个索引构成。索引数据在Buffer中是按照ix1,iy1,iz1,ix2,iy2,iz2,...紧密排列的。每个分量都是int32类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getBlocksInfoIncremental">
            <summary>
            <para xml:lang="en">
            Gets the description object of `mesh block` in `meshUpdate`. The return value is an array of `BlockInfo`_ elements, each of which is a detailed description of a `mesh block`.
            </para>
            <para xml:lang="zh">
            获取meshUpdated中的mesh block的描述对象。返回值是一个由 BlockInfo 构成的数组，其中每一个元素是对一个mesh block的信息的详细描述。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SceneMesh.getBlockDimensionInMeters">
            <summary>
            <para xml:lang="en">
            Get the edge length of a `mesh block` in meters.
            </para>
            <para xml:lang="zh">
            获取一个mesh block的边长，单位是米。
            </para>
            </summary>
        </member>
        <member name="T:easyar.AccelerometerResult">
             <summary>
             <para xml:lang="en">
             Accelerometer reading.
            
             The positive direction of x-axis is from the device center to its right side of the screen.
             The positive direction of y-axis is from the device center to its top side of the screen.
             The positive direction of z-axis is from the device center perpendicular to the screen outward.
            
             The unit of x, y, z is m/s^2.
             The unit of timestamp is second.
             </para>
             <para xml:lang="zh">
             加速度计读数。
            
             x轴正方向从设备中心指向屏幕右部。
             y轴正方向从设备中心指向屏幕上部。
             z轴正方向从设备中心垂直屏幕向外。
            
             x, y, z单位为m/s^2。
             timestamp单位为秒。
             </para>
             </summary>
        </member>
        <member name="T:easyar.Accelerometer">
            <summary>
            <para xml:lang="en">
            Accelerometer calls the accelerometer provided by the operating system, and outputs `AccelerometerResult`_ .
            When it is not needed anymore, call close function to close it. It shall not be used after calling close.
            It is not recommended to open the accelerometer multiple times simultaneously, which may cause failure on open or cause precision downgrade.
            </para>
            <para xml:lang="zh">
            Accelerometer调用了系统提供的加速度计，输出 `AccelerometerResult`_ 。
            当不再需要该设备时，可以调用close对其进行关闭。close之后不应继续使用。
            不建议同时打开多次加速度计，可能会无法使用或精度下降。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Accelerometer.isAvailable">
            <summary>
            <para xml:lang="en">
            Checks if the component is available. It returns true only on Android or iOS with supported hardware. On other operating systems, it is not supported.
            </para>
            <para xml:lang="zh">
            检查是否可用。只在Android或iOS上且硬件支持时返回true。其他操作系统暂不支持。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Accelerometer.open">
            <summary>
            <para xml:lang="en">
            Opens the device. Sampling period is defined by implementation. If failed, it will return false.
            </para>
            <para xml:lang="zh">
            打开设备。采样周期由内部实现所确定。如果打开失败，返回false。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Accelerometer.openWithSamplingPeriod(System.Int32)">
            <summary>
            <para xml:lang="en">
            Opens the device with a specific sampling period. Sampling period is limited by hardware and may not reach the specified value. If failed, it will return false.
            </para>
            <para xml:lang="zh">
            以特定采样周期打开设备。采样周期会受到硬件限制而可能无法达到指定值。如果打开失败，返回false。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Accelerometer.close">
            <summary>
            <para xml:lang="en">
            Closes. It shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭设备。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Accelerometer.getCurrentResult">
            <summary>
            <para xml:lang="en">
            Gets the most recent result. If there is no result, it returns empty.
            </para>
            <para xml:lang="zh">
            获取当前的最新结果。如果结果尚未获取到，返回空。
            </para>
            </summary>
        </member>
        <member name="F:easyar.ARCoreCameraDeviceFocusMode.Auto">
            <summary>
            <para xml:lang="en">
            Auto focus mode
            </para>
            <para xml:lang="zh">
            自动对焦模式
            </para>
            </summary>
        </member>
        <member name="F:easyar.ARCoreCameraDeviceFocusMode.Fixed">
            <summary>
            <para xml:lang="en">
            Fixed focus mode
            </para>
            <para xml:lang="zh">
            固定对焦模式
            </para>
            </summary>
        </member>
        <member name="T:easyar.ARCoreCameraDevice">
            <summary>
            <para xml:lang="en">
            ARCoreCameraDevice implements a camera device based on ARCore, which outputs `InputFrame`_  (including image, camera parameters, timestamp, 6DOF location, and tracking status).
            Loading of libarcore_sdk_c.so with java.lang.System.loadLibrary is required.
            After creation, start/stop can be invoked to start or stop video stream capture.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            ARCoreCameraDevice outputs `InputFrame`_ from inputFrameSource. inputFrameSource shall be connected to `InputFrameSink`_ for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            bufferCapacity is the capacity of `InputFrame`_ buffer. If the count of `InputFrame`_ which has been output from the device and have not been released is more than this number, the device will not output new `InputFrame`_ , until previous `InputFrame`_ have been released. This may cause screen stuck. Refer to `Overview &lt;Overview.html&gt;`__ .
            Caution: Currently, ARCore(v1.13.0) has memory leaks on creating and destroying sessions. Repeated creations and destructions will cause an increasing and non-reclaimable memory footprint.
            </para>
            <para xml:lang="zh">
            ARCoreCameraDevice实现了一个基于ARCore的camera设备，输出 `InputFrame`_ （包含图像、摄像机参数、时间戳、6DOF位置信息和跟踪状态）。
            使用时需要先使用java.lang.System.loadLibrary加载libarcore_sdk_c.so。
            创建之后，可以调用start/stop来开始和停止采集视频流数据。
            当不再需要该设备时，可以调用close对其进行关闭。close之后不应继续使用。
            ARCoreCameraDevice通过inputFrameSource输出 `InputFrame`_ ，应将inputFrameSource连接到 `InputFrameSink`_ 上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            bufferCapacity表示 `InputFrame`_ 缓冲的容量，如果有超过此数量的 `InputFrame`_ 从该设备中输出并且没有被释放，该设备将不再输出新的 `InputFrame`_ ，直到之前的 `InputFrame`_ 被释放。这可能造成画面卡住等问题。参考 `概览 &lt;Overview.html&gt;`__ 。
            注意：当前ARCore(v1.13.0)的实现在创建和销毁session时存在内存泄漏，多次创建和销毁会导致内存占用不断增长且销毁后也不释放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.isAvailable">
            <summary>
            <para xml:lang="en">
            Checks if the component is available. It returns true only on Android when ARCore is installed.
            If called with libarcore_sdk_c.so not loaded, it returns false.
            Notice: If ARCore is not supported on the device but ARCore apk is installed via side-loading, it will return true, but ARCore will not function properly.
            </para>
            <para xml:lang="zh">
            检查是否可用。只在Android系统上并安装了ARCore时返回true。
            在没有加载libarcore_sdk_c.so时调用会返回false。
            注意：如果设备不支持ARCore，但却通过旁加载方式安装了ARCore的apk，则该函数会返回true，但ARCore不能正常使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.bufferCapacity">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ buffer capacity. The default is 8.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 缓冲的容量，默认值为8。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.setBufferCapacity(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets `InputFrame`_ buffer capacity.
            </para>
            <para xml:lang="zh">
            设置 `InputFrame`_ 缓冲的容量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.inputFrameSource">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.setFocusMode(easyar.ARCoreCameraDeviceFocusMode)">
            <summary>
            <para xml:lang="en">
            Sets focus mode to focusMode. Call before start.
            </para>
            <para xml:lang="zh">
            设置对焦模式为focusMode。在start之前调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.start">
            <summary>
            <para xml:lang="en">
            Starts video stream capture.
            </para>
            <para xml:lang="zh">
            开始采集视频流数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.stop">
            <summary>
            <para xml:lang="en">
            Stops video stream capture.
            </para>
            <para xml:lang="zh">
            停止采集视频流数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreCameraDevice.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="F:easyar.ARKitCameraDeviceFocusMode.Auto">
            <summary>
            <para xml:lang="en">
            Auto focus mode
            </para>
            <para xml:lang="zh">
            自动对焦模式
            </para>
            </summary>
        </member>
        <member name="F:easyar.ARKitCameraDeviceFocusMode.Fixed">
            <summary>
            <para xml:lang="en">
            Fixed focus mode
            </para>
            <para xml:lang="zh">
            固定对焦模式
            </para>
            </summary>
        </member>
        <member name="T:easyar.ARKitCameraDevice">
            <summary>
            <para xml:lang="en">
            ARKitCameraDevice implements a camera device based on ARKit, which outputs `InputFrame`_ (including image, camera parameters, timestamp, 6DOF location, and tracking status).
            After creation, start/stop can be invoked to start or stop data collection.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            ARKitCameraDevice outputs `InputFrame`_ from inputFrameSource. inputFrameSource shall be connected to `InputFrameSink`_ for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            bufferCapacity is the capacity of `InputFrame`_ buffer. If the count of `InputFrame`_ which has been output from the device and have not been released is more than this number, the device will not output new `InputFrame`_ , until previous `InputFrame`_ have been released. This may cause screen stuck. Refer to `Overview &lt;Overview.html&gt;`__ .
            </para>
            <para xml:lang="zh">
            ARKitCameraDevice实现了一个基于ARKit的camera设备，输出 `InputFrame`_ （包含图像、摄像机参数、时间戳、6DOF位置信息和跟踪状态）。
            创建之后，可以调用start/stop来开始和停止采集视频流数据。
            当不再需要该设备时，可以调用close对其进行关闭。close之后不应继续使用。
            ARKitCameraDevice通过inputFrameSource输出 `InputFrame`_ ，应将inputFrameSource连接到 `InputFrameSink`_ 上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            bufferCapacity表示 `InputFrame`_ 缓冲的容量，如果有超过此数量的 `InputFrame`_ 从该设备中输出并且没有被释放，该设备将不再输出新的 `InputFrame`_ ，直到之前的 `InputFrame`_ 被释放。这可能造成画面卡住等问题。参考 `概览 &lt;Overview.html&gt;`__ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.isAvailable">
            <summary>
            <para xml:lang="en">
            Checks if the component is available. It returns true only on iOS 11 or later when ARKit is supported by hardware.
            </para>
            <para xml:lang="zh">
            检查是否可用。只在iOS 11或更高版本的系统上且在支持ARKit的硬件上时返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.bufferCapacity">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ buffer capacity. The default is 8.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 缓冲的容量，默认值为8。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.setBufferCapacity(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets `InputFrame`_ buffer capacity.
            </para>
            <para xml:lang="zh">
            设置 `InputFrame`_ 缓冲的容量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.inputFrameSource">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.setFocusMode(easyar.ARKitCameraDeviceFocusMode)">
            <summary>
            <para xml:lang="en">
            Sets focus mode to focusMode. Call before start. Valid since iOS 11.3.
            </para>
            <para xml:lang="zh">
            设置对焦模式为focusMode。在start之前调用。iOS 11.3及之后有效。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.start">
            <summary>
            <para xml:lang="en">
            Starts video stream capture.
            </para>
            <para xml:lang="zh">
            开始采集视频流数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.stop">
            <summary>
            <para xml:lang="en">
            Stops video stream capture.
            </para>
            <para xml:lang="zh">
            停止采集视频流数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ARKitCameraDevice.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFocusMode.Normal">
            <summary>
            <para xml:lang="en">
            Normal auto focus mode. You should call autoFocus to start the focus in this mode.
            </para>
            <para xml:lang="zh">
            常规对焦模式，在这个模式下需要调用autoFocus来触发对焦
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFocusMode.Continousauto">
            <summary>
            <para xml:lang="en">
            Continuous auto focus mode
            </para>
            <para xml:lang="zh">
            连续自动对焦模式
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFocusMode.Infinity">
            <summary>
            <para xml:lang="en">
            Infinity focus mode
            </para>
            <para xml:lang="zh">
            无穷远对焦模式
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFocusMode.Macro">
            <summary>
            <para xml:lang="en">
            Macro (close-up) focus mode. You should call autoFocus to start the focus in this mode.
            </para>
            <para xml:lang="zh">
            微距对焦模式。在这个模式下需要调用autoFocus来触发对焦
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFocusMode.Medium">
            <summary>
            <para xml:lang="en">
            Medium distance focus mode
            </para>
            <para xml:lang="zh">
            中等距离对焦模式
            </para>
            </summary>
        </member>
        <member name="F:easyar.AndroidCameraApiType.Camera1">
            <summary>
            <para xml:lang="en">
            Android Camera1
            </para>
            <para xml:lang="zh">
            Android Camera1
            </para>
            </summary>
        </member>
        <member name="F:easyar.AndroidCameraApiType.Camera2">
            <summary>
            <para xml:lang="en">
            Android Camera2
            </para>
            <para xml:lang="zh">
            Android Camera2
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePresetProfile.Photo">
            <summary>
            <para xml:lang="en">
            The same as AVCaptureSessionPresetPhoto.
            </para>
            <para xml:lang="zh">
            即AVCaptureSessionPresetPhoto
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePresetProfile.High">
            <summary>
            <para xml:lang="en">
            The same as AVCaptureSessionPresetHigh.
            </para>
            <para xml:lang="zh">
            即AVCaptureSessionPresetHigh
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePresetProfile.Medium">
            <summary>
            <para xml:lang="en">
            The same as AVCaptureSessionPresetMedium.
            </para>
            <para xml:lang="zh">
            即AVCaptureSessionPresetMedium
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePresetProfile.Low">
            <summary>
            <para xml:lang="en">
            The same as AVCaptureSessionPresetLow.
            </para>
            <para xml:lang="zh">
            即AVCaptureSessionPresetLow
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraState.Unknown">
            <summary>
            <para xml:lang="en">
            Unknown
            </para>
            <para xml:lang="zh">
            未知
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraState.Disconnected">
            <summary>
            <para xml:lang="en">
            Disconnected
            </para>
            <para xml:lang="zh">
            断开
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraState.Preempted">
            <summary>
            <para xml:lang="en">
            Preempted by another application.
            </para>
            <para xml:lang="zh">
            被其他程序抢占
            </para>
            </summary>
        </member>
        <member name="T:easyar.CameraDevice">
            <summary>
            <para xml:lang="en">
            CameraDevice implements a camera device, which outputs `InputFrame`_ (including image, camera paramters, and timestamp). It is available on Windows, Mac, Android and iOS.
            After open, start/stop can be invoked to start or stop data collection. start/stop will not change previous set camera parameters.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            CameraDevice outputs `InputFrame`_ from inputFrameSource. inputFrameSource shall be connected to `InputFrameSink`_ for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            bufferCapacity is the capacity of `InputFrame`_ buffer. If the count of `InputFrame`_ which has been output from the device and have not been released is more than this number, the device will not output new `InputFrame`_ , until previous `InputFrame`_ have been released. This may cause screen stuck. Refer to `Overview &lt;Overview.html&gt;`__ .
            On Android, it is required to add android.permission.CAMERA to AndroidManifest.xml for use.
            On iOS, it is required to add NSCameraUsageDescription to Info.plist for use.
            </para>
            <para xml:lang="zh">
            CameraDevice实现了一个camera设备，输出 `InputFrame`_ （包含图像、摄像机参数和时间戳）。在Windows、Mac、Android和iOS上可用。
            打开之后，可以调用start/stop来开始和停止采集数据。start/stop不会影响之前所设置的camera参数。
            当不再需要该设备时，可以调用close对其进行关闭。close之后不应继续使用。
            CameraDevice通过inputFrameSource输出 `InputFrame`_ ，应将inputFrameSource连接到 `InputFrameSink`_ 上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            bufferCapacity表示 `InputFrame`_ 缓冲的容量，如果有超过此数量的 `InputFrame`_ 从该设备中输出并且没有被释放，该设备将不再输出新的 `InputFrame`_ ，直到之前的 `InputFrame`_ 被释放。这可能造成画面卡住等问题。参考 `概览 &lt;Overview.html&gt;`__ 。
            Android使用时需要在AndroidManifest.xml中加入android.permission.CAMERA权限声明。
            iOS使用时需要在Info.plist中加入NSCameraUsageDescription权限声明。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.isAvailable">
            <summary>
            <para xml:lang="en">
            Checks if the component is available. It returns true only on Windows, Mac, Android or iOS.
            </para>
            <para xml:lang="zh">
            检查是否可用。只在Windows、Mac、Android和iOS上返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.androidCameraApiType">
            <summary>
            <para xml:lang="en">
            Gets current camera API (camera1 or camera2) on Android. camera1 is better for compatibility, but lacks some necessary information such as timestamp. camera2 has compatibility issues on some devices.
            </para>
            <para xml:lang="zh">
            在Android上，可用于获得使用的Camera API（camera1或camera2）。camera1兼容性较好，但缺乏一些必要的信息，如时间戳。camera2在部分设备上存在兼容性问题。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setAndroidCameraApiType(easyar.AndroidCameraApiType)">
            <summary>
            <para xml:lang="en">
            Sets current camera API (camera1 or camera2) on Android. It must be called before calling openWithIndex, openWithSpecificType or openWithPreferredType, or it will not take effect.
            It is recommended to use `CameraDeviceSelector`_ to create camera with camera API set to recommended based on primary algorithm to run.
            </para>
            <para xml:lang="zh">
            在Android上，可用于设置使用的Camera API（Camera 1或Camera 2）。必须在调用openWithIndex、openWithSpecificType或openWithPreferredType之前进行设置，否则不会生效。
            推荐使用 `CameraDeviceSelector`_ 以根据使用的主要算法来创建设好推荐Camera API的CameraDevice。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.bufferCapacity">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ buffer capacity. The default is 8.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 缓冲的容量，默认值为8。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setBufferCapacity(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets `InputFrame`_ buffer capacity.
            </para>
            <para xml:lang="zh">
            设置 `InputFrame`_ 缓冲的容量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.inputFrameSource">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setStateChangedCallback(easyar.CallbackScheduler,easyar.Optional{System.Action{easyar.CameraState}})">
            <summary>
            <para xml:lang="en">
            Sets callback on state change to notify state of camera disconnection or preemption. It is only available on Windows.
            </para>
            <para xml:lang="zh">
            设置状态变化回调以通知摄像机断开或被抢占的状态。只在Windows平台上有作用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.requestPermissions(easyar.CallbackScheduler,easyar.Optional{System.Action{easyar.PermissionStatus,System.String}})">
            <summary>
            <para xml:lang="en">
            Requests camera permission from operating system. You can call this function or request permission directly from operating system. It is only available on Android and iOS. On other platforms, it will call the callback directly with status being granted. This function need to be called from the UI thread.
            </para>
            <para xml:lang="zh">
            请求camera系统权限。你可以选择使用这个函数或自己申请权限。只在Android和iOS平台上有效，其他平台上的行为为直接调用回调通知权限已授权。应在UI线程调用该函数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.cameraCount">
            <summary>
            <para xml:lang="en">
            Gets count of cameras recognized by the operating system.
            </para>
            <para xml:lang="zh">
            获得操作系统识别到的camera数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.openWithIndex(System.Int32)">
            <summary>
            <para xml:lang="en">
            Opens a camera by index.
            </para>
            <para xml:lang="zh">
            按照camera索引打开camera设备。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.openWithSpecificType(easyar.CameraDeviceType)">
            <summary>
            <para xml:lang="en">
            Opens a camera by specific camera device type. If no camera is matched, false will be returned. On Mac, camera device types can not be distinguished.
            </para>
            <para xml:lang="zh">
            按照精确的camera设备类型打开camera设备，如果没有匹配的类型则会返回false。在Mac上，camera类型无法判别。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.openWithPreferredType(easyar.CameraDeviceType)">
            <summary>
            <para xml:lang="en">
            Opens a camera by camera device type. If no camera is matched, the first camera will be used.
            </para>
            <para xml:lang="zh">
            按照camera设备类型打开camera设备，如果没有匹配的类型则会尝试打开第一个camera设备。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.start">
            <summary>
            <para xml:lang="en">
            Starts video stream capture.
            </para>
            <para xml:lang="zh">
            开始采集数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.stop">
            <summary>
            <para xml:lang="en">
            Stops video stream capture. It will only stop capture and will not change previous set camera parameters and connection.
            </para>
            <para xml:lang="zh">
            停止采集数据。这个方法只会停止捕获图像，所有参数和连接将不会受到影响。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭camera。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.index">
            <summary>
            <para xml:lang="en">
            Camera index.
            </para>
            <para xml:lang="zh">
            cameras索引。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.type">
            <summary>
            <para xml:lang="en">
            Camera type.
            </para>
            <para xml:lang="zh">
            camera类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.cameraParameters">
            <summary>
            <para xml:lang="en">
            Camera parameters, including image size, focal length, principal point, camera type and camera rotation against natural orientation. Call after a successful open.
            </para>
            <para xml:lang="zh">
            camera参数，包括图像大小、焦距、主点、camera类型和camera相对设备自然方向的旋转角度。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setCameraParameters(easyar.CameraParameters)">
            <summary>
            <para xml:lang="en">
            Sets camera parameters. Call after a successful open.
            </para>
            <para xml:lang="zh">
            设置camera参数。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.size">
            <summary>
            <para xml:lang="en">
            Gets the current preview size. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前图像大小。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.supportedSizeCount">
            <summary>
            <para xml:lang="en">
            Gets the number of supported preview sizes. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备支持的所有图像大小的个数。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.supportedSize(System.Int32)">
            <summary>
            <para xml:lang="en">
            Gets the index-th supported preview size. It returns {0, 0} if index is out of range. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备支持的所有图像大小的第 index 个. 如果 index 超出范围则返回{0, 0}。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setSize(easyar.Vec2I)">
            <summary>
            <para xml:lang="en">
            Sets the preview size. The available nearest value will be selected. Call size to get the actual size. Call after a successful open. frameRateRange may change after calling setSize.
            </para>
            <para xml:lang="zh">
            设置当前图像大小。最接近设置值的可选值将被使用。可以使用size来获取实际的大小。在成功的open之后调用。设置size后frameRateRange可能会发生变化。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.supportedFrameRateRangeCount">
            <summary>
            <para xml:lang="en">
            Gets the number of supported frame rate ranges. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备支持的所有帧率范围的个数。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.supportedFrameRateRangeLower(System.Int32)">
            <summary>
            <para xml:lang="en">
            Gets range lower bound of the index-th supported frame rate range. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备支持的所有帧率范围的第 index 个的下界。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.supportedFrameRateRangeUpper(System.Int32)">
            <summary>
            <para xml:lang="en">
            Gets range upper bound of the index-th supported frame rate range. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备支持的所有帧率范围的第 index 个的上界。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.frameRateRange">
            <summary>
            <para xml:lang="en">
            Gets current index of frame rate range. Call after a successful open.
            </para>
            <para xml:lang="zh">
            获取当前设备的当前帧率范围的索引。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setFrameRateRange(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets current index of frame rate range. Call after a successful open.
            </para>
            <para xml:lang="zh">
            设置当前设备的当前帧率范围的索引。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setFlashTorchMode(System.Boolean)">
            <summary>
            <para xml:lang="en">
            Sets flash torch mode to on. Call after a successful open.
            </para>
            <para xml:lang="zh">
            设置flash torch模式为on。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.setFocusMode(easyar.CameraDeviceFocusMode)">
            <summary>
            <para xml:lang="en">
            Sets focus mode to focusMode. Call after a successful open.
            </para>
            <para xml:lang="zh">
            设置对焦模式为focusMode。在成功的open之后调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDevice.autoFocus">
            <summary>
            <para xml:lang="en">
            Does auto focus once. Call after start. It is only available when FocusMode is Normal or Macro.
            </para>
            <para xml:lang="zh">
            调用一次自动对焦。在start之后使用。仅在FocusMode为Normal或Macro时才能使用。
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePreference.PreferObjectSensing">
            <summary>
            <para xml:lang="en">
            Optimized for `ImageTracker`_ , `ObjectTracker`_ and `CloudRecognizer`_ .
            </para>
            <para xml:lang="zh">
            对 `ImageTracker`_ , `ObjectTracker`_ 和 `CloudRecognizer`_ 进行优化
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePreference.PreferSurfaceTracking">
            <summary>
            <para xml:lang="en">
            Optimized for `SurfaceTracker`_ .
            </para>
            <para xml:lang="zh">
            对 `SurfaceTracker`_ 进行优化
            </para>
            </summary>
        </member>
        <member name="F:easyar.CameraDevicePreference.PreferMotionTracking">
            <summary>
            <para xml:lang="en">
            Optimized for Motion Tracking .
            </para>
            <para xml:lang="zh">
            对 Motion Tracking 进行优化
            </para>
            </summary>
        </member>
        <member name="T:easyar.CameraDeviceSelector">
            <summary>
            <para xml:lang="en">
            It is used for selecting camera API (camera1 or camera2) on Android. camera1 is better for compatibility, but lacks some necessary information such as timestamp. camera2 has compatibility issues on some devices.
            Different preferences will choose camera1 or camera2 based on usage.
            </para>
            <para xml:lang="zh">
            用于在Android上选择Camera API（camera1或camera2）。camera1兼容性较好，但缺乏一些必要的信息，如时间戳。camera2在部分设备上存在兼容性问题。
            不同选项会根据用途选择camera1或camera2。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDeviceSelector.getAndroidCameraApiType(easyar.CameraDevicePreference)">
            <summary>
            <para xml:lang="en">
            Gets recommended Android Camera API type by a specified preference.
            </para>
            <para xml:lang="zh">
            以指定选项获取推荐的Android Camera API类型。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDeviceSelector.createCameraDevice(easyar.CameraDevicePreference)">
            <summary>
            <para xml:lang="en">
            Creates `CameraDevice`_ by a specified preference.
            </para>
            <para xml:lang="zh">
            以指定选项创建 `CameraDevice`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.CameraDeviceSelector.getFocusMode(easyar.CameraDevicePreference)">
            <summary>
            <para xml:lang="en">
            Gets recommended Camera FocusMode type by a specified preference.
            </para>
            <para xml:lang="zh">
            以指定选项获取推荐的Camera FocusMode类型。
            </para>
            </summary>
        </member>
        <member name="T:easyar.MagnetometerResult">
             <summary>
             <para xml:lang="en">
             Magnetometer reading.
            
             The positive direction of x-axis is from the device center to its right side of the screen.
             The positive direction of y-axis is from the device center to its top side of the screen.
             The positive direction of z-axis is from the device center perpendicular to the screen outward.
            
             The unit of x, y, z is uT(micro-Tesla).
             The unit of timestamp is second.
             </para>
             <para xml:lang="zh">
             磁力计读数。
            
             x轴正方向从设备中心指向屏幕右部。
             y轴正方向从设备中心指向屏幕上部。
             z轴正方向从设备中心垂直屏幕向外。
            
             x, y, z单位为uT(微特斯拉)。
             timestamp单位为秒。
             </para>
             </summary>
        </member>
        <member name="T:easyar.SurfaceTrackerResult">
            <summary>
            <para xml:lang="en">
            Result of `SurfaceTracker`_ .
            </para>
            <para xml:lang="zh">
            `SurfaceTracker`_ 的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTrackerResult.transform">
            <summary>
            <para xml:lang="en">
            Camera transform against world coordinate system. Camera coordinate system and world coordinate system are all right-handed. For the camera coordinate system, the origin is the optical center, x-right, y-up, and z in the direction of light going into camera. (The right and up, on mobile devices, is the right and up when the device is in the natural orientation.) For the world coordinate system, y is up (to the opposite of gravity). The data arrangement is row-major, not like OpenGL&#39;s column-major.
            </para>
            <para xml:lang="zh">
            Camera相对于世界坐标的变换。其中Camera坐标系与世界坐标系均为右手坐标系。Camera坐标系的原点为相机光心，x轴正方向为右，y轴正方向为上，z轴正方向为光线进入相机的方向。（其中的右和上，在移动设备上指设备自然方向的右和上。）世界坐标系的y轴向上（重力方向相反）。数据的排列方式为row-major，与OpenGL的column-major相反。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SurfaceTracker">
            <summary>
            <para xml:lang="en">
            SurfaceTracker implements tracking with environmental surfaces.
            SurfaceTracker occupies one buffer of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            After creation, you can call start/stop to enable/disable the track process. start and stop are very lightweight calls.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            SurfaceTracker inputs `InputFrame`_ from inputFrameSink. `InputFrameSource`_ shall be connected to inputFrameSink for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            </para>
            <para xml:lang="zh">
            SurfaceTracker实现了对环境表面的跟踪。
            SurfaceTracker占用1个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            创建之后，可以调用start/stop来开始和停止运行，start/stop是非常轻量的调用。
            当不再需要该组件时，可以调用close对其进行关闭。close之后不应继续使用。
            SurfaceTracker通过inputFrameSink输入 `InputFrame`_ ，应将 `InputFrameSource`_ 连接到inputFrameSink上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true only on Android or iOS when accelerometer and gyroscope are available.
            </para>
            <para xml:lang="zh">
            只在Android、iOS系统上且加速度计、陀螺仪可用时返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.inputFrameSink">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ input port. InputFrame must have raw image, timestamp, and camera parameters.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 输入端口。InputFrame要求必须拥有图像、时间戳和camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.outputFrameSource">
            <summary>
            <para xml:lang="en">
            `OutputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `OutputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.start">
            <summary>
            <para xml:lang="en">
            Starts the track algorithm.
            </para>
            <para xml:lang="zh">
            开始跟踪算法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.stop">
            <summary>
            <para xml:lang="en">
            Stops the track algorithm. Call start to start the track again.
            </para>
            <para xml:lang="zh">
            暂停跟踪算法。调用start来重新启动跟踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SurfaceTracker.alignTargetToCameraImagePoint(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Sets the tracking target to a point on camera image. For the camera image coordinate system ([0, 1]^2), x-right, y-down, and origin is at left-top corner. `CameraParameters.imageCoordinatesFromScreenCoordinates`_ can be used to convert points from screen coordinate system to camera image coordinate system.
            </para>
            <para xml:lang="zh">
            将跟踪目标点对准到相机图像的指定点。图像坐标系（[0, 1]^2）的x朝右、y朝下，原点在左上角。可以使用 `CameraParameters.imageCoordinatesFromScreenCoordinates`_ 来从屏幕坐标转换为图像坐标。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceQualityLevel.NotSupported">
            <summary>
            <para xml:lang="en">
            The device does not support motion tracking. It has not our passed our verification or is waiting for calibration.
            </para>
            <para xml:lang="zh">
            设备不支持运动跟踪，可能是适配不达标或者尚未适配
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceQualityLevel.Bad">
            <summary>
            <para xml:lang="en">
            The device has not passed all our verification. Real time scale is unstable. It can be used in AR showcase or other desktop-scale applications.
            </para>
            <para xml:lang="zh">
            设备不完全达标，尺度不稳定，可用于桌面尺度内的小场景,类似AR渲染等
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceQualityLevel.Limited">
            <summary>
            <para xml:lang="en">
            The device has not passed all our verification. Real time scale is almost accurate. It can be used in AR showcase, AR games or other room-scale applications.
            </para>
            <para xml:lang="zh">
            设备不完全达标，尺度接近准确，可用于房间尺度内的中等场景,类似AR游戏,AR渲染等
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceQualityLevel.Good">
            <summary>
            <para xml:lang="en">
            The device has passed all our verification. Real time scale is accurate. It can be used in AR showcase, AR games, 3D reconstruction or other building-scale applications.
            </para>
            <para xml:lang="zh">
            设备达标，尺度准确，可用于建筑物尺度的大型场景,类似AR游戏，AR渲染，三维重建等
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceFPS.Camera_FPS_30">
            <summary>
            <para xml:lang="en">
            Frame rate is 30 fps, the actual fps will vary with device capabilities. It is the default setting.
            </para>
            <para xml:lang="zh">
            设备图像帧率是30fps，实际帧率取决于设备能力，它是默认设置
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceFPS.Camera_FPS_60">
            <summary>
            <para xml:lang="en">
            Frame rate is 60 fps or 30 fps, the actual fps will vary with device capabilities.
            </para>
            <para xml:lang="zh">
            设备图像帧率是60fps或者30fps，实际帧率取决于设备能力
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceFocusMode.Continousauto">
            <summary>
            <para xml:lang="en">
            Continuous auto focus mode, high image definition and good tracking performance. The actual focus mode will vary with device capabilities. It is the default setting.
            </para>
            <para xml:lang="zh">
            连续自动对焦模式，图像清晰度高，跟踪效果一般。实际对焦效果取决于设备能力，它是默认设置
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceFocusMode.Medium">
            <summary>
            <para xml:lang="en">
            Focus is fixed on Medium distance, medium image definition and better tracking performance. The actual focus mode will vary with device capabilities.
            </para>
            <para xml:lang="zh">
            中等距离定焦模式，图像清晰度一般，跟踪效果较好，实际对焦效果取决于设备能力
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceResolution.Resolution_1280">
            <summary>
            <para xml:lang="en">
            Resolution is typically 1280 x 960 or 1280 x 720, the actual resolution will vary with device capabilities. It is the default setting.
            </para>
            <para xml:lang="zh">
            标准分辨率是1280 x 960 或者 1280 x 720，实际分辨率取决于设备能力，它是默认设置
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceResolution.Resolution_640">
            <summary>
            <para xml:lang="en">
            Resolution is typically 640 x 480 or 640 x 360, the actual resolution will vary with device capabilities.
            </para>
            <para xml:lang="zh">
            标准分辨率是640 x 480 或者 640 x 360，实际分辨率取决于设备能力
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceTrackingMode.VIO">
            <summary>
            <para xml:lang="en">
            Tracking and hitTestAgainstPointCloud is supported, but plane detection, relocation and anchor are not. It has low CPU and memory usage.
            </para>
            <para xml:lang="zh">
            只有跟踪和点击碰撞点云，CPU和内存占用少，但是不支持平面检测、重定位和锚点。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceTrackingMode.SLAM">
            <summary>
            <para xml:lang="en">
            SLAM(Simultaneous tracking and mapping) supports relocation, plane detection and hitTestAgainstPointCloud. CPU and memory usage are higher. Real time pose correction of anchor is not supported.
            </para>
            <para xml:lang="zh">
            同时跟踪和建图，支持丢失后的重定位、点击碰撞点云和平面检测，但是没有锚点，不支持实时校正位姿，且CPU和内存占用稍高。
            </para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerCameraDeviceTrackingMode.Anchor">
            <summary>
            <para xml:lang="en">
            Anchor is SLAM(Simultaneous tracking and mapping) with real time pose correction.  CPU and memory usage are highest。Anchor supports relocation, plane detection, hitTestAgainstPointCloud and pose correction. Anchor is automatically saved when hitTestAgainstPointCloud is called.
            </para>
            <para xml:lang="zh">
            同时跟踪和建图，支持丢失后的重定位、点击碰撞点云、平面检测和锚点，但是CPU和内存占用最高。调用hitTestAgainstPointCloud时会自动保存锚点，通过锚点实时校正位姿。
            </para>
            </summary>
        </member>
        <member name="T:easyar.MotionTrackerCameraDevice">
            <summary>
            <para xml:lang="en">
            MotionTrackerCameraDevice implements a camera device with metric-scale six degree-of-freedom motion tracking, which outputs `InputFrame`_  (including image, camera parameters, timestamp, 6DOF pose and tracking status).
            After creation, start/stop can be invoked to start or stop data flow.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            MotionTrackerCameraDevice outputs `InputFrame`_ from inputFrameSource. inputFrameSource shall be connected to `InputFrameSink`_ for further use. Refer to `Overview &lt;Overview.html&gt;`__ .
            </para>
            <para xml:lang="zh">
            MotionTrackerCameraDevice实现了一个真实尺度6DOF运动追踪的camera设备，输出 `InputFrame`_ （包含图像、摄像机参数、时间戳、6DOF位置信息和跟踪状态）。
            创建之后，可以调用start/stop来开始和停止数据流。
            当不再需要该设备时，可以调用close对其进行关闭。close之后不应继续使用。
            MotionTrackerCameraDevice通过inputFrameSource输出 `InputFrame`_ ，应将inputFrameSource连接到 `InputFrameSink`_ 上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.#ctor">
            <summary>
            <para xml:lang="en">
            Create MotionTrackerCameraDevice object.
            </para>
            <para xml:lang="zh">
            创建MotionTrackerCameraDevice对象。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.isAvailable">
            <summary>
            <para xml:lang="en">
            Check if the devices supports motion tracking. Returns True if the device supports Motion Tracking, otherwise returns False.
            </para>
            <para xml:lang="zh">
            检查设备是否支持Motion Tracking. 当设备支持运动追踪功能时返回True，否则返回False。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.getQualityLevel">
            <summary>
            <para xml:lang="en">
            Get the quality of Motion Tracking on the device. You can decide whether to start Motion Tracking.
            </para>
            <para xml:lang="zh">
            获取设备上Motion Tracking的质量，结合应用场景，可以通过此值判断是否启动Motion Tracking。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.setFrameRateType(easyar.MotionTrackerCameraDeviceFPS)">
            <summary>
            <para xml:lang="en">
            Sets current index of frame rate. Call before start. If this function is not called, the default is 30 fps.
            </para>
            <para xml:lang="zh">
            设置当前设备的当前帧率。在start之前调用。如果该功能不被调用，默认是30fps
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.setFocusMode(easyar.MotionTrackerCameraDeviceFocusMode)">
            <summary>
            <para xml:lang="en">
            Sets focus mode to focusMode. Call before start. If this function is not called, the default is Continousauto.
            </para>
            <para xml:lang="zh">
            设置对焦模式为focusMode。在start之前调用。如果该功能不被调用，默认是连续自动对焦
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.setFrameResolutionType(easyar.MotionTrackerCameraDeviceResolution)">
            <summary>
            <para xml:lang="en">
            Sets current index of frame resolution. Call before start. If this function is not called, the default is 1280 x 960 or 1280 x 720.
            </para>
            <para xml:lang="zh">
            设置当前设备的当前帧分辨率率。在start之前调用。如果该功能不被调用，默认是1280x960或者1280x720
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.setTrackingMode(easyar.MotionTrackerCameraDeviceTrackingMode)">
            <summary>
            <para xml:lang="en">
            Sets current tracking mode. Call before start. If this function is not called, the default is Anchor.
            </para>
            <para xml:lang="zh">
            设置当前设备的跟踪模式。在start之前调用。如果该功能不被调用，默认是锚点模式
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.setBufferCapacity(System.Int32)">
            <summary>
            <para xml:lang="en">
            Set `InputFrame`_ buffer capacity.
            bufferCapacity is the capacity of `InputFrame`_ buffer. If the count of `InputFrame`_ which has been output from the device and have not been released is higher than this number, the device will not output new `InputFrame`_ until previous `InputFrame`_ has been released. This may cause screen stuck. Refer to `Overview &lt;Overview.html&gt;`__ .
            </para>
            <para xml:lang="zh">
            设置 `InputFrame`_ 缓冲的容量。
            bufferCapacity表示 `InputFrame`_ 缓冲的容量，如果有超过此数量的 `InputFrame`_ 从该设备中输出并且没有被释放，该设备将不再输出新的 `InputFrame`_ ，直到之前的 `InputFrame`_ 被释放。这可能造成画面卡住等问题。参考 `概览 &lt;Overview.html&gt;`__ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.bufferCapacity">
            <summary>
            <para xml:lang="en">
            Get `InputFrame`_ buffer capacity. The default is 8.
            </para>
            <para xml:lang="zh">
            获取`InputFrame`_ 缓冲的容量，默认值为8。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.inputFrameSource">
            <summary>
            <para xml:lang="en">
            `InputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `InputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.start">
            <summary>
            <para xml:lang="en">
            Start motion tracking or resume motion tracking after pause.
            Notice: Calling start after pausing will trigger device relocalization. Tracking will resume when the relocalization process succeeds.
            </para>
            <para xml:lang="zh">
            开始运动追踪，或者从暂停中触发重定位,成功后继续追踪。
            注意：如果设备是调用stop暂停后再调用start追踪，会触发重定位，当重定位成功以后才会继续追踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.stop">
            <summary>
            <para xml:lang="en">
            Pause motion tracking. Call `start` to trigger relocation, resume motion tracking if the relocation succeeds.
            </para>
            <para xml:lang="zh">
            暂停运动追踪。调用start触发重定位，重定位成功后继续运动追踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.close">
            <summary>
            <para xml:lang="en">
            Close motion tracking. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭运动追踪过程。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.hitTestAgainstPointCloud(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Perform hit test against the point cloud and return the nearest 3D point. The 3D point is represented by three consecutive values, representing X, Y, Z position coordinates in the world coordinate space.
            For the camera image coordinate system ([0, 1]^2), x-right, y-down, and origin is at left-top corner. `CameraParameters.imageCoordinatesFromScreenCoordinates`_ can be used to convert points from screen coordinate system to camera image coordinate system.
            </para>
            <para xml:lang="zh">
            在当前点云中进行Hit Test,得到距离相机从近到远一条射线上的最近的一个3D点位置坐标。该点由三个连续的值表示，分别代表X，Y，Z轴上的坐标值。
            输入图像坐标系（[0, 1]^2）的x朝右、y朝下，原点在左上角。可以使用 `CameraParameters.imageCoordinatesFromScreenCoordinates`_ 来从屏幕坐标转换为图像坐标。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.hitTestAgainstHorizontalPlane(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Performs ray cast from the user&#39;s device in the direction of given screen point.
            Intersections with horizontal plane is detected in real time in the current field of view,and return the 3D point nearest to ray on horizontal plane.
            For the camera image coordinate system ([0, 1]^2), x-right, y-down, and origin is at left-top corner. `CameraParameters.imageCoordinatesFromScreenCoordinates`_ can be used to convert points from screen coordinate system to camera image coordinate system.
            The output point cloud coordinate on Horizontal plane is in the world coordinate system. The 3D point is represented by three consecutive values, representing X, Y, Z position coordinates in the world coordinate space.
            </para>
            <para xml:lang="zh">
            在当前视野内实时检测到的水平面上进行Hit Test,点击到某个水平面后返回该平面上距离Hit Test射线最近的3D点的位置坐标。
            输入图像坐标系（[0, 1]^2）的x朝右、y朝下，原点在左上角。可以使用 `CameraParameters.imageCoordinatesFromScreenCoordinates`_ 来从屏幕坐标转换为图像坐标。
            输出为平面上的点云在世界坐标系中的坐标。每一个点由三个连续的值表示，分别代表X，Y，Z轴上的坐标值。
            </para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerCameraDevice.getLocalPointsCloud">
            <summary>
            <para xml:lang="en">
            Returns the vector of point cloud coordinate. Each 3D point is represented by three consecutive values, representing X, Y, Z position coordinates in the world coordinate space.
            </para>
            <para xml:lang="zh">
            获取当前点云数据位置信息。其中点云位置为世界坐标系中的位置，每一个点由三个连续的值表示，分别代表X，Y，Z轴上的坐标值。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameRecorder">
            <summary>
            <para xml:lang="en">
            Input frame recorder.
            There is an input frame input port and an input frame output port. It can be used to record input frames into an EIF file. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧录制器。
            有一个输入帧输入端口和一个输入帧输出端口，用于将经过的输入帧保存到EIF文件中。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.start(System.String,System.Int32)">
            <summary>
            <para xml:lang="en">
            Starts frame recording. initialScreenRotation is the initial screen rotation when recording data, and it will be used in rendering for playback. The definition of screen rotation is the same as in `CameraParameters`_ .
            </para>
            <para xml:lang="zh">
            开始录制数据。initialScreenRotation为录制数据时的初始屏幕旋转方向，播放时以此方向为基准进行渲染。旋转方向的定义与 `CameraParameters`_ 中的一致。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameRecorder.stop">
            <summary>
            <para xml:lang="en">
            Stops frame recording. It will only stop recording and will not affect connection.
            </para>
            <para xml:lang="zh">
            停止录制数据。这个方法只会停止录制，连接将不会受到影响。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFramePlayer">
            <summary>
            <para xml:lang="en">
            Input frame player.
            There is an input frame output port. It can be used to get input frame from an EIF file. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧播放器。
            有一个输入帧输出端口，用于从EIF文件将输入帧取出。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.start(System.String)">
            <summary>
            <para xml:lang="en">
            Starts frame play.
            </para>
            <para xml:lang="zh">
            开始播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.stop">
            <summary>
            <para xml:lang="en">
            Stops frame play.
            </para>
            <para xml:lang="zh">
            停止播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.pause">
            <summary>
            <para xml:lang="en">
            Pauses frame play.
            </para>
            <para xml:lang="zh">
            暂停播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.resume">
            <summary>
            <para xml:lang="en">
            Resumes frame play.
            </para>
            <para xml:lang="zh">
            继续播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.totalTime">
            <summary>
            <para xml:lang="en">
            Total expected playback time span. The unit is second.
            </para>
            <para xml:lang="zh">
            预期的总播放时间。单位为秒。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.currentTime">
            <summary>
            <para xml:lang="en">
            Current playback time point. The unit is second. The initial value is 0.
            </para>
            <para xml:lang="zh">
            当前的播放时刻。单位为秒。初始为0。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.initalScreenRotation">
            <summary>
            <para xml:lang="en">
            The initial screen rotation when recording data.
            </para>
            <para xml:lang="zh">
            录制数据时的初始屏幕旋转方向。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFramePlayer.isCompleted">
            <summary>
            <para xml:lang="en">
            Whether the playback is completed.
            </para>
            <para xml:lang="zh">
            获取是否已完成。
            </para>
            </summary>
        </member>
        <member name="T:easyar.CallbackScheduler">
            <summary>
            <para xml:lang="en">
            Callback scheduler.
            There are two subclasses: `DelayedCallbackScheduler`_ and `ImmediateCallbackScheduler`_ .
            `DelayedCallbackScheduler`_ is used to delay callback to be invoked manually, and it can be used in single-threaded environments (such as various UI environments).
            `ImmediateCallbackScheduler`_ is used to mark callback to be invoked when event is dispatched, and it can be used in multi-threaded environments (such as server or service daemon).
            </para>
            <para xml:lang="zh">
            回调调度器。
            有两个子类 `DelayedCallbackScheduler`_ 和 `ImmediateCallbackScheduler`_ 。
            其中 `DelayedCallbackScheduler`_ 用于将回调推迟到手动调用的时候调用，可用于单线程环境下（如各种UI环境）。
            `ImmediateCallbackScheduler`_ 用于将回调立即执行，可用于多线程环境下（如服务器或后台服务）。
            </para>
            </summary>
        </member>
        <member name="T:easyar.DelayedCallbackScheduler">
            <summary>
            <para xml:lang="en">
            Delayed callback scheduler.
            It is used to delay callback to be invoked manually, and it can be used in single-threaded environments (such as various UI environments).
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            延时回调调度器。
            用于将回调推迟到手动调用的时候调用，可用于单线程环境下（如各种UI环境）。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.DelayedCallbackScheduler.runOne">
            <summary>
            <para xml:lang="en">
            Executes a callback. If there is no callback to execute, false is returned.
            </para>
            <para xml:lang="zh">
            执行一个回调。如果没有回调可执行，则返回false。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImmediateCallbackScheduler">
            <summary>
            <para xml:lang="en">
            Immediate callback scheduler.
            It is used to mark callback to be invoked when event is dispatched, and it can be used in multi-threaded environments (such as server or service daemon).
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            立即回调调度器。
            用于将回调立即执行，可用于多线程环境下（如服务器或后台服务）。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImmediateCallbackScheduler.getDefault">
            <summary>
            <para xml:lang="en">
            Gets a default immediate callback scheduler.
            </para>
            <para xml:lang="zh">
            获得默认的立即回调调度器。
            </para>
            </summary>
        </member>
        <member name="T:easyar.JniUtility">
            <summary>
            <para xml:lang="en">
            JNI utility class.
            It is used in Unity to wrap Java byte array and ByteBuffer.
            It is not supported on iOS.
            </para>
            <para xml:lang="zh">
            JNI工具类。
            用于在Unity中对Java的数组和ByteBuffer进行包装。
            不支持iOS平台。
            </para>
            </summary>
        </member>
        <member name="M:easyar.JniUtility.wrapByteArray(System.IntPtr,System.Boolean,System.Action)">
            <summary>
            <para xml:lang="en">
            Wraps Java&#39;s byte[]。
            </para>
            <para xml:lang="zh">
            包装Java的字节数组byte[]。
            </para>
            </summary>
        </member>
        <member name="M:easyar.JniUtility.wrapBuffer(System.IntPtr,System.Action)">
            <summary>
            <para xml:lang="en">
            Wraps Java&#39;s java.nio.ByteBuffer, which must be a direct buffer.
            </para>
            <para xml:lang="zh">
            包装Java的java.nio.ByteBuffer中的direct buffer。
            </para>
            </summary>
        </member>
        <member name="M:easyar.JniUtility.getDirectBufferAddress(System.IntPtr)">
            <summary>
            <para xml:lang="en">
            Get the raw address of a direct buffer of java.nio.ByteBuffer by calling JNIEnv-&gt;GetDirectBufferAddress.
            </para>
            <para xml:lang="zh">
            调用JNIEnv-&gt;GetDirectBufferAddress获得java.nio.ByteBuffer中的direct buffer的原始地址。
            </para>
            </summary>
        </member>
        <member name="F:easyar.LogLevel.Error">
            <summary>
            <para xml:lang="en">
            Error
            </para>
            <para xml:lang="zh">
            错误
            </para>
            </summary>
        </member>
        <member name="F:easyar.LogLevel.Warning">
            <summary>
            <para xml:lang="en">
            Warning
            </para>
            <para xml:lang="zh">
            警告
            </para>
            </summary>
        </member>
        <member name="F:easyar.LogLevel.Info">
            <summary>
            <para xml:lang="en">
            Information
            </para>
            <para xml:lang="zh">
            信息
            </para>
            </summary>
        </member>
        <member name="T:easyar.Log">
            <summary>
            <para xml:lang="en">
            Log class.
            It is used to setup a custom log output function.
            </para>
            <para xml:lang="zh">
            日志类。
            用于设置自定义日志输出函数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Log.setLogFunc(System.Action{easyar.LogLevel,System.String})">
            <summary>
            <para xml:lang="en">
            Sets custom log output function. The log output function should be thread-safe.
            </para>
            <para xml:lang="zh">
            设置自定义日志输出函数。此日志输出函数应保证线程安全。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Log.setLogFuncWithScheduler(easyar.CallbackScheduler,System.Action{easyar.LogLevel,System.String})">
            <summary>
            <para xml:lang="en">
            Sets custom log output function and run it in scheduler.
            </para>
            <para xml:lang="zh">
            设置自定义日志输出函数，并通过scheduler来指定运行时机。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Log.resetLogFunc">
            <summary>
            <para xml:lang="en">
            Clears custom log output function and reverts to default log output function.
            </para>
            <para xml:lang="zh">
            清除自定义日志输出函数，还原成默认的日志输出函数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Storage.setAssetDirPath(System.String)">
            <summary>
            <para xml:lang="en">
            Sets asset root path.
            </para>
            <para xml:lang="zh">
            设置asset根路径。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImageTargetParameters">
            <summary>
            <para xml:lang="en">
            ImageTargetParameters represents the parameters to create a `ImageTarget`_ .
            </para>
            <para xml:lang="zh">
            ImageTargetParameters表示创建 `ImageTarget`_ 所需要的参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.image">
            <summary>
            <para xml:lang="en">
            Gets image.
            </para>
            <para xml:lang="zh">
            获取图像。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.setImage(easyar.Image)">
            <summary>
            <para xml:lang="en">
            Sets image.
            </para>
            <para xml:lang="zh">
            设置图像。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.name">
            <summary>
            <para xml:lang="en">
            Gets target name. It can be used to distinguish targets.
            </para>
            <para xml:lang="zh">
            获取target名字。名字用来区分target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.setName(System.String)">
            <summary>
            <para xml:lang="en">
            Sets target name.
            </para>
            <para xml:lang="zh">
            设置target名字。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.uid">
            <summary>
            <para xml:lang="en">
            Gets the target uid. A target uid is useful in cloud based algorithms. If no cloud is used, you can set this uid in the json config as an alternative method to distinguish from targets.
            </para>
            <para xml:lang="zh">
            获取target uid。target uid在云识别算法中使用。在没有接入云识别的时候，你可以在json配置中设置这个uid，在自己的代码中作为另一种区分target的方法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.setUid(System.String)">
            <summary>
            <para xml:lang="en">
            Sets target uid.
            </para>
            <para xml:lang="zh">
            设置target uid。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.meta">
            <summary>
            <para xml:lang="en">
            Gets meta data.
            </para>
            <para xml:lang="zh">
            获取meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.setMeta(System.String)">
            <summary>
            <para xml:lang="en">
            Sets meta data。
            </para>
            <para xml:lang="zh">
            设置meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.scale">
            <summary>
            <para xml:lang="en">
            Gets the scale of image. The value is the physical image width divided by 1 meter. The default value is 1.
            </para>
            <para xml:lang="zh">
            图像的缩放比例。其值为图像宽度的物理大小与1米的比值，默认值为1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTargetParameters.setScale(System.Single)">
            <summary>
            <para xml:lang="en">
            Sets the scale of image. The value is the physical image width divided by 1 meter. The default value is 1.
            It is needed to set the model scale in rendering engine separately.
            </para>
            <para xml:lang="zh">
            设置图像的缩放比例。其值为图像宽度的物理大小与1米的比值，默认值为1。
            还需要在渲染引擎中单独设置此模型缩放。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImageTarget">
            <summary>
            <para xml:lang="en">
            ImageTarget represents planar image targets that can be tracked by `ImageTracker`_ .
            The fields of ImageTarget need to be filled with the create... method before it can be read. And ImageTarget can be tracked by `ImageTracker`_ after a successful load into the `ImageTracker`_ using `ImageTracker.loadTarget`_ .
            </para>
            <para xml:lang="zh">
            ImageTarget表示平面图像的target，它可以被 `ImageTracker`_ 所跟踪。
            ImageTarget内的数值在可以被读取之前需要首先通过create...等方法填入。然后再通过 `ImageTracker.loadTarget`_ 成功载入 `ImageTracker`_ 之后可以被 `ImageTracker`_ 检测和跟踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.createFromParameters(easyar.ImageTargetParameters)">
            <summary>
            <para xml:lang="en">
            Creates a target from parameters.
            </para>
            <para xml:lang="zh">
            从参数创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.createFromTargetFile(System.String,easyar.StorageType)">
            <summary>
            <para xml:lang="en">
            Creates a target from an etd file.
            </para>
            <para xml:lang="zh">
            从etd文件创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.createFromTargetData(easyar.Buffer)">
            <summary>
            <para xml:lang="en">
            Creates a target from an etd data buffer.
            </para>
            <para xml:lang="zh">
            从etd数据缓存创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.save(System.String)">
            <summary>
            <para xml:lang="en">
            Saves as an etd file.
            </para>
            <para xml:lang="zh">
            保存为etd文件。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.createFromImageFile(System.String,easyar.StorageType,System.String,System.String,System.String,System.Single)">
            <summary>
            <para xml:lang="en">
            Creates a target from an image file. If not needed, name, uid, meta can be passed with empty string, and scale can be passed with default value 1. Jpeg and png files are supported.
            </para>
            <para xml:lang="zh">
            从图像创建。如果不需要，name、uid、meta可以传空字符串，scale可以传默认值1。支持jpeg或png文件。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.scale">
            <summary>
            <para xml:lang="en">
            The scale of image. The value is the physical image width divided by 1 meter. The default value is 1.
            </para>
            <para xml:lang="zh">
            图像的缩放比例。其值为图像宽度的物理大小与1米的比值，默认值为1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.aspectRatio">
            <summary>
            <para xml:lang="en">
            The aspect ratio of image, width divided by height.
            </para>
            <para xml:lang="zh">
            图像的宽高比。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.setScale(System.Single)">
            <summary>
            <para xml:lang="en">
            Sets image target scale, this will overwrite the value set in the json file or the default value. The value is the physical image width divided by 1 meter. The default value is 1.
            It is needed to set the model scale in rendering engine separately.
            </para>
            <para xml:lang="zh">
            设置图像的缩放比例，设置之后会覆盖默认值以及在json文件中设的数值。其值为图像宽度的物理大小与1米的比值，默认值为1。
            还需要在渲染引擎中单独设置此模型缩放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.images">
            <summary>
            <para xml:lang="en">
            Returns a list of images that stored in the target. It is generally used to get image data from cloud returned target.
            </para>
            <para xml:lang="zh">
            获取target中存储的图像列表。通常这个方法用来获取云端返回的target的识别图数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.runtimeID">
            <summary>
            <para xml:lang="en">
            Returns the target id. A target id is a integer number generated at runtime. This id is non-zero and increasing globally.
            </para>
            <para xml:lang="zh">
            获取target id。target id是运行时创建的整型数据，只有在成功的配置之后才是有效（非0）的。这个id是非0且全局递增的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.uid">
            <summary>
            <para xml:lang="en">
            Returns the target uid. A target uid is useful in cloud based algorithms. If no cloud is used, you can set this uid in the json config as a alternative method to distinguish from targets.
            </para>
            <para xml:lang="zh">
            获取target uid。ImageTarget的uid在云识别算法中使用。在没有接入云识别的时候，你可以在json配置中设置这个uid，在自己的代码中作为另一种区分target的方法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.name">
            <summary>
            <para xml:lang="en">
            Returns the target name. Name is used to distinguish targets in a json file.
            </para>
            <para xml:lang="zh">
            获取target名字。名字用来在json文件中区分target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.setName(System.String)">
            <summary>
            <para xml:lang="en">
            Set name. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置target名字。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.meta">
            <summary>
            <para xml:lang="en">
            Returns the meta data set by setMetaData. Or, in a cloud returned target, returns the meta data set in the cloud server.
            </para>
            <para xml:lang="zh">
            获取setMetaData所设置的meta data。或者在云识别返回的target中，获得服务器所设置的meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTarget.setMeta(System.String)">
            <summary>
            <para xml:lang="en">
            Set meta data. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置meta data。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="F:easyar.ImageTrackerMode.PreferQuality">
            <summary>
            <para xml:lang="en">
            Quality is preferred.
            </para>
            <para xml:lang="zh">
            优先质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.ImageTrackerMode.PreferPerformance">
            <summary>
            <para xml:lang="en">
            Performance is preferred.
            </para>
            <para xml:lang="zh">
            优先性能
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImageTrackerResult">
            <summary>
            <para xml:lang="en">
            Result of `ImageTracker`_ .
            </para>
            <para xml:lang="zh">
            `ImageTracker`_ 的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTrackerResult.targetInstances">
            <summary>
            <para xml:lang="en">
            Returns the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            返回当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTrackerResult.setTargetInstances(System.Collections.Generic.List{easyar.TargetInstance})">
            <summary>
            <para xml:lang="en">
            Sets the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            设置当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImageTracker">
            <summary>
            <para xml:lang="en">
            ImageTracker implements image target detection and tracking.
            ImageTracker occupies (1 + SimultaneousNum) buffers of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            After creation, you can call start/stop to enable/disable the track process. start and stop are very lightweight calls.
            When the component is not needed anymore, call close function to close it. It shall not be used after calling close.
            ImageTracker inputs `FeedbackFrame`_ from feedbackFrameSink. `FeedbackFrameSource`_ shall be connected to feedbackFrameSink for use. Refer to `Overview &lt;Overview.html&gt;`__ .
            Before a `Target`_ can be tracked by ImageTracker, you have to load it using loadTarget/unloadTarget. You can get load/unload results from callbacks passed into the interfaces.
            </para>
            <para xml:lang="zh">
            ImageTracker实现了平面卡片的检测和跟踪。
            ImageTracker占用(1 + SimultaneousNum)个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            创建之后，可以调用start/stop来开始和停止运行，start/stop是非常轻量的调用。
            当不再需要该组件时，可以调用close对其进行关闭。close之后不应继续使用。
            ImageTracker通过feedbackFrameSink输入 `FeedbackFrame`_ ，应将 `FeedbackFrameSource`_ 连接到feedbackFrameSink上进行使用。参考 `概览 &lt;Overview.html&gt;`__ 。
            在 `Target`_ 可以被ImageTracker跟踪之前，你需要通过loadTarget/unloadTarget将它载入。可以通过传入接口的回调来获取load/unload的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true.
            </para>
            <para xml:lang="zh">
            返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.feedbackFrameSink">
            <summary>
            <para xml:lang="en">
            `FeedbackFrame`_ input port. The InputFrame member of FeedbackFrame must have raw image, timestamp, and camera parameters.
            </para>
            <para xml:lang="zh">
            `FeedbackFrame`_ 输入端口。FeedbackFrame中的InputFrame成员要求必须拥有图像、时间戳和camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.outputFrameSource">
            <summary>
            <para xml:lang="en">
            `OutputFrame`_ output port.
            </para>
            <para xml:lang="zh">
            `OutputFrame`_ 输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.create">
            <summary>
            <para xml:lang="en">
            Creates an instance. The default track mode is `ImageTrackerMode.PreferQuality`_ .
            </para>
            <para xml:lang="zh">
            创建。默认的跟踪模式是 `ImageTrackerMode.PreferQuality`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.createWithMode(easyar.ImageTrackerMode)">
            <summary>
            <para xml:lang="en">
            Creates an instance with a specified track mode. On lower-end phones, `ImageTrackerMode.PreferPerformance`_ can be used to keep a better performance with a little quality loss.
            </para>
            <para xml:lang="zh">
            以特定跟踪模式创建。在低端手机上，可以使用 `ImageTrackerMode.PreferPerformance`_ 来获得更好的性能，但是跟踪效果会有些许损失。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.start">
            <summary>
            <para xml:lang="en">
            Starts the track algorithm.
            </para>
            <para xml:lang="zh">
            开始跟踪算法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.stop">
            <summary>
            <para xml:lang="en">
            Stops the track algorithm. Call start to start the track again.
            </para>
            <para xml:lang="zh">
            暂停跟踪算法。调用start来重新启动跟踪。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.close">
            <summary>
            <para xml:lang="en">
            Close. The component shall not be used after calling close.
            </para>
            <para xml:lang="zh">
            关闭。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.loadTarget(easyar.Target,easyar.CallbackScheduler,System.Action{easyar.Target,System.Boolean})">
            <summary>
            <para xml:lang="en">
            Load a `Target`_ into the tracker. A Target can only be tracked by tracker after a successful load.
            This method is an asynchronous method. A load operation may take some time to finish and detection of a new/lost target may take more time during the load. The track time after detection will not be affected. If you want to know the load result, you have to handle the callback data. The callback will be called from the thread specified by `CallbackScheduler`_ . It will not block the track thread or any other operations except other load/unload.
            </para>
            <para xml:lang="zh">
            加载一个 `Target`_ 进入tracker。 `Target`_ 只有在成功加载进入tracker之后才能被识别和跟踪。
            这个方法是异步方法。加载过程可能会需要一些时间来完成，这段时间内新的和丢失的target的检测可能会花比平时更多的时间，但是检测到之后的跟踪不受影响。如果你希望知道加载的结果，需要处理callback数据。callback将会在 `CallbackScheduler`_ 所指定的线程上被调用。跟踪线程和除了其它加载/卸载之外的操作都不会被阻塞。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.unloadTarget(easyar.Target,easyar.CallbackScheduler,System.Action{easyar.Target,System.Boolean})">
            <summary>
            <para xml:lang="en">
            Unload a `Target`_ from the tracker.
            This method is an asynchronous method. An unload operation may take some time to finish and detection of a new/lost target may take more time during the unload. If you want to know the unload result, you have to handle the callback data. The callback will be called from the thread specified by `CallbackScheduler`_ . It will not block the track thread or any other operations except other load/unload.
            </para>
            <para xml:lang="zh">
            从tracker中卸载 `Target`_ 。
            这个方法是异步方法。卸载过程可能会需要一些时间来完成，这段时间内新的和丢失的target的检测可能会花比平时更多的时间，但是检测到之后的跟踪不受影响。如果你希望知道卸载的结果，需要处理callback数据。callback将会在 `CallbackScheduler`_ 所指定的线程上被调用。跟踪线程和除了其它加载/卸载之外的操作都不会被阻塞。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.targets">
            <summary>
            <para xml:lang="en">
            Returns current loaded targets in the tracker. If an asynchronous load/unload is in progress, the returned value will not reflect the result until all load/unload finish.
            </para>
            <para xml:lang="zh">
            返回当前已经被加载进入tracker的target。如果异步的加载/卸载正在执行，在加载/卸载完成之前的返回值将不会反映这些加载/卸载的结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.setSimultaneousNum(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets the max number of targets which will be the simultaneously tracked by the tracker. The default value is 1.
            </para>
            <para xml:lang="zh">
            设置最大可被tracker跟踪的目标个数。默认值为1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageTracker.simultaneousNum">
            <summary>
            <para xml:lang="en">
            Gets the max number of targets which will be the simultaneously tracked by the tracker. The default value is 1.
            </para>
            <para xml:lang="zh">
            获取最大可被tracker跟踪的目标个数。默认值为1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RealTimeCoordinateTransform.#ctor">
            <summary>
            <para xml:lang="en">
            Create RealTimeCoordinateTransform object.
            </para>
            <para xml:lang="zh">
            创建RealTimeCoordinateTransform对象。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RealTimeCoordinateTransform.setBufferSize(System.Int32)">
            <summary>
            <para xml:lang="en">
            Set buffer size，the unit of capacity is seconds. The data within capacity seconds from now will be saved.
            BufferSize represents the capacity of the buffer. If there is more than capacity seconds of data in the buffer, the latest data will be input to the buffer and the oldest frame of data will be released.
            </para>
            <para xml:lang="zh">
            设置缓冲的容量，&#39;capacity&#39;单位是秒，表示缓存里保存距离当前时刻最近的&#39;capacity&#39;秒的数据。
            BufferSize表示缓冲的容量，如果有超过&#39;capacity&#39;秒的数据输入，该设备将输入一帧最新的数据到缓存，然后将旧的一帧数据缓存释放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RealTimeCoordinateTransform.getBufferSize">
            <summary>
            <para xml:lang="en">
            Get buffer capacity. The default is 15 seconds. The data within 15 seconds from now will be saved.
            </para>
            <para xml:lang="zh">
            获取缓存数据的时长，默认值为15秒，表示缓存里保存距离当前时刻最近的15秒的数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RealTimeCoordinateTransform.insertData(System.Double,easyar.Matrix44F,easyar.Matrix44F)">
            <summary>
            <para xml:lang="en">
            Input data to the cache, the data includes localTwc and mapTcw at the time timestamp. localTwc means camera pose at local coordinates, mapTcw means the camera pose at the localized map coordinates.
            </para>
            <para xml:lang="zh">
            输入数据到缓存，输入的数据包括timestamp时刻的本地坐标系定位的相机位姿localTcw和地图坐标系定位的相机位姿mapTcw。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RealTimeCoordinateTransform.getPoseInMap(System.Double,easyar.MotionTrackingStatus,easyar.Matrix44F)">
            <summary>
            <para xml:lang="en">
            Returns the camera pose in the localized map after insert motionTracking status and localTwc at the time timestamp. localTwc means camera pose at local coordinates.
            </para>
            <para xml:lang="zh">
            输入timestamp时刻的VIO跟踪状态status，本地坐标系定位的相机位姿localTcw，获得相机在地图坐标系中的姿态。
            </para>
            </summary>
        </member>
        <member name="T:easyar.Recorder">
            <summary>
            <para xml:lang="en">
            Recorder implements recording for current rendering screen.
            Currently Recorder only works on Android (4.3 or later) and iOS with OpenGL ES 2.0 context.
            Due to the dependency to OpenGLES, every method in this class (except requestPermissions, including the destructor) has to be called in a single thread containing an OpenGLES context.
            **Unity Only** If in Unity, Multi-threaded rendering is enabled, scripting thread and rendering thread will be two separate threads, which makes it impossible to call updateFrame in the rendering thread. For this reason, to use Recorder, Multi-threaded rendering option shall be disabled.
            On Android, it is required to add android.permission.RECORD_AUDIO to AndroidManifest.xml for use.
            On iOS, it is required to add NSMicrophoneUsageDescription to Info.plist for use.
            </para>
            <para xml:lang="zh">
            Recorder 实现了对当前渲染环境的屏幕录制功能。
            当前Recorder 只在 Android（4.3 或更新）和 iOS的OpenGL ES 2.0 环境下工作。
            由于依赖于OpenGLES，本类的所有函数(除requestPermissions以外，包括析构函数)都必须在单个包含OpenGLES上下文的线程中调用。
            **Unity Only** Unity中如果使用Multi-threaded rendering功能，则脚本线程将与渲染线程分离，无法在渲染线程上调用updateFrame。因此，如果需要使用屏幕录制功能，应禁用Multi-threaded rendering功能。
            Android使用时需要在AndroidManifest.xml中加入android.permission.RECORD_AUDIO权限声明。
            iOS使用时需要在Info.plist中加入NSMicrophoneUsageDescription权限声明。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.isAvailable">
            <summary>
            <para xml:lang="en">
            Returns true only on Android 4.3 or later, or on iOS.
            </para>
            <para xml:lang="zh">
            只在Android 4.3以上或iOS平台下返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.requestPermissions(easyar.CallbackScheduler,easyar.Optional{System.Action{easyar.PermissionStatus,System.String}})">
            <summary>
            <para xml:lang="en">
            Requests recording permissions from operating system. You can call this function or request permission directly from operating system. It is only available on Android and iOS. On other platforms, it will call the callback directly with status being granted. This function need to be called from the UI thread.
            </para>
            <para xml:lang="zh">
            请求录屏所需的系统权限。你可以选择使用这个函数或自己调用系统函数申请权限。只在Android和iOS平台上有效，其他平台上的行为为直接调用回调通知权限已授权。应在UI线程调用该函数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.create(easyar.RecorderConfiguration,easyar.CallbackScheduler,easyar.Optional{System.Action{easyar.RecordStatus,System.String}})">
            <summary>
            <para xml:lang="en">
            Creates an instance and initialize recording. statusCallback will dispatch event of status change and corresponding log.
            </para>
            <para xml:lang="zh">
            创建并初始化录屏功能。statusCallback回调中会通知一些状态变化和对应的日志。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.start">
            <summary>
            <para xml:lang="en">
            Start recording.
            </para>
            <para xml:lang="zh">
            开始录屏。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.updateFrame(easyar.TextureId,System.Int32,System.Int32)">
            <summary>
            <para xml:lang="en">
            Update and record a frame using texture data.
            </para>
            <para xml:lang="zh">
            使用texture录制一帧数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Recorder.stop">
            <summary>
            <para xml:lang="en">
            Stop recording. When calling stop, it will wait for file write to end and returns whether recording is successful.
            </para>
            <para xml:lang="zh">
            停止录屏。在调用stop之后，会等待文件写入结束并返回录制是否成功的结果。
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_1080P_Low">
            <summary>
            <para xml:lang="en">
            1080P, low quality
            </para>
            <para xml:lang="zh">
            1080P，低质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_1080P_Middle">
            <summary>
            <para xml:lang="en">
            1080P, middle quality
            </para>
            <para xml:lang="zh">
            1080P，中质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_1080P_High">
            <summary>
            <para xml:lang="en">
            1080P, high quality
            </para>
            <para xml:lang="zh">
            1080P，高质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_720P_Low">
            <summary>
            <para xml:lang="en">
            720P, low quality
            </para>
            <para xml:lang="zh">
            720P，低质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_720P_Middle">
            <summary>
            <para xml:lang="en">
            720P, middle quality
            </para>
            <para xml:lang="zh">
            720P，中质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_720P_High">
            <summary>
            <para xml:lang="en">
            720P, high quality
            </para>
            <para xml:lang="zh">
            720P，高质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_480P_Low">
            <summary>
            <para xml:lang="en">
            480P, low quality
            </para>
            <para xml:lang="zh">
            480P，低质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_480P_Middle">
            <summary>
            <para xml:lang="en">
            480P, middle quality
            </para>
            <para xml:lang="zh">
            480P，中质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_480P_High">
            <summary>
            <para xml:lang="en">
            480P, high quality
            </para>
            <para xml:lang="zh">
            480P，高质量
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordProfile.Quality_Default">
            <summary>
            <para xml:lang="en">
            default resolution and quality, same as `Quality_720P_Middle`
            </para>
            <para xml:lang="zh">
            默认分辨率与质量，与 `Quality_720P_Middle` 相同
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordVideoSize.Vid1080p">
            <summary>
            <para xml:lang="en">
            1080P
            </para>
            <para xml:lang="zh">
            1080P
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordVideoSize.Vid720p">
            <summary>
            <para xml:lang="en">
            720P
            </para>
            <para xml:lang="zh">
            720P
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordVideoSize.Vid480p">
            <summary>
            <para xml:lang="en">
            480P
            </para>
            <para xml:lang="zh">
            480P
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordZoomMode.NoZoomAndClip">
            <summary>
            <para xml:lang="en">
            If output aspect ratio does not fit input, content will be clipped to fit output aspect ratio.
            </para>
            <para xml:lang="zh">
            如果输出宽高比与输入不符，内容会被剪裁到适合输出比例。
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordZoomMode.ZoomInWithAllContent">
            <summary>
            <para xml:lang="en">
            If output aspect ratio does not fit input, content will not be clipped and there will be black borders in one dimension.
            </para>
            <para xml:lang="zh">
            如果输出宽高比与输入不符，内容将不会被剪裁，在某个维度上会有黑边。
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordVideoOrientation.Landscape">
            <summary>
            <para xml:lang="en">
            video recorded is landscape
            </para>
            <para xml:lang="zh">
            录制的视频是横向
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordVideoOrientation.Portrait">
            <summary>
            <para xml:lang="en">
            video recorded is portrait
            </para>
            <para xml:lang="zh">
            录制的视频是竖向
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.OnStarted">
            <summary>
            <para xml:lang="en">
            recording start
            </para>
            <para xml:lang="zh">
            录屏开始
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.OnStopped">
            <summary>
            <para xml:lang="en">
            recording stopped
            </para>
            <para xml:lang="zh">
            录屏结束
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.FailedToStart">
            <summary>
            <para xml:lang="en">
            start fail
            </para>
            <para xml:lang="zh">
            开始录屏失败
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.FileSucceeded">
            <summary>
            <para xml:lang="en">
            file write succeed
            </para>
            <para xml:lang="zh">
            文件存储成功
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.FileFailed">
            <summary>
            <para xml:lang="en">
            file write fail
            </para>
            <para xml:lang="zh">
            文件存储失败
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.LogInfo">
            <summary>
            <para xml:lang="en">
            runtime info with description
            </para>
            <para xml:lang="zh">
            运行时信息，包含描述
            </para>
            </summary>
        </member>
        <member name="F:easyar.RecordStatus.LogError">
            <summary>
            <para xml:lang="en">
            runtime error with description
            </para>
            <para xml:lang="zh">
            运行时错误，包含错误描述
            </para>
            </summary>
        </member>
        <member name="T:easyar.RecorderConfiguration">
            <summary>
            <para xml:lang="en">
            RecorderConfiguration is startup configuration for `Recorder`_ .
            </para>
            <para xml:lang="zh">
            RecorderConfiguration为 `Recorder`_ 的启动配置。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setOutputFile(System.String)">
            <summary>
            <para xml:lang="en">
            Sets absolute path for output video file.
            </para>
            <para xml:lang="zh">
            设置输出视频文件的绝对路径。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setProfile(easyar.RecordProfile)">
            <summary>
            <para xml:lang="en">
            Sets recording profile. Default value is Quality_720P_Middle.
            This is an all-in-one configuration, you can control in more advanced mode with other APIs.
            </para>
            <para xml:lang="zh">
            设置录屏配置。默认值是 Quality_720P_Middle。
            这是个整体的配置，如果需要更为细节的配置可以调用其他API。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setVideoSize(easyar.RecordVideoSize)">
            <summary>
            <para xml:lang="en">
            Sets recording video size. Default value is Vid720p.
            </para>
            <para xml:lang="zh">
            设置录屏视频大小。默认值是 Vid720p。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setVideoBitrate(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets recording video bit rate. Default value is 2500000.
            </para>
            <para xml:lang="zh">
            设置录屏视频比特率。默认值是 2500000。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setChannelCount(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets recording audio channel count. Default value is 1.
            </para>
            <para xml:lang="zh">
            设置录屏音频通道数。默认值是 1。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setAudioSampleRate(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets recording audio sample rate. Default value is 44100.
            </para>
            <para xml:lang="zh">
            设置录屏音频采样率。默认值是 44100。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setAudioBitrate(System.Int32)">
            <summary>
            <para xml:lang="en">
            Sets recording audio bit rate. Default value is 96000.
            </para>
            <para xml:lang="zh">
            设置录屏音频比特率。默认值是 96000。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setVideoOrientation(easyar.RecordVideoOrientation)">
            <summary>
            <para xml:lang="en">
            Sets recording video orientation. Default value is Landscape.
            </para>
            <para xml:lang="zh">
            设置录屏视频朝向。默认值是 Landscape。
            </para>
            </summary>
        </member>
        <member name="M:easyar.RecorderConfiguration.setZoomMode(easyar.RecordZoomMode)">
            <summary>
            <para xml:lang="en">
            Sets recording zoom mode. Default value is NoZoomAndClip.
            </para>
            <para xml:lang="zh">
            设置录屏缩放模式。默认值是 NoZoomAndClip。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapResult">
            <summary>
            <para xml:lang="en">
            Describes the result of mapping and localization. Updated at the same frame rate with OutputFrame.
            </para>
            <para xml:lang="zh">
            获取稀疏建图与定位系统的输出，会以OutputFrame的频率更新。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapResult.getMotionTrackingStatus">
            <summary>
            <para xml:lang="en">
            Obtain motion tracking status.
            </para>
            <para xml:lang="zh">
            获取当前运动跟踪状态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapResult.getVioPose">
            <summary>
            <para xml:lang="en">
            Returns pose of the origin of VIO system in camera coordinate system.
            </para>
            <para xml:lang="zh">
            获取当前VIO坐标系原点在相机坐标系中的位姿。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapResult.getMapPose">
            <summary>
            <para xml:lang="en">
            Returns the pose of origin of the map in camera coordinate system, when localization is successful.
            Otherwise, returns pose of the origin of VIO system in camera coordinate system.
            </para>
            <para xml:lang="zh">
            若在SparseSpatialMap中定位成功，则输出地图原点在相机坐标系中的位姿，否则，输出VIO坐标系原点在相机坐标系中的位姿。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapResult.getLocalizationStatus">
            <summary>
            <para xml:lang="en">
            Returns true if the system can reliablly locate the pose of the device with regard to the map.
            Once relocalization succeeds, relative pose can be updated by motion tracking module.
            As long as the motion tracking module returns normal tracking status, the localization status is also true.
            </para>
            <para xml:lang="zh">
            定位系统能否确定设备相对于定位地图的位姿关系。
            单次定位成功后，会通过运动跟踪系统进行持续追踪，因此即使移除地图区域，但是运动跟踪一直正常工作，仍然会返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapResult.getLocalizationMapID">
            <summary>
            <para xml:lang="en">
            Returns current localized map ID.
            </para>
            <para xml:lang="zh">
            获取当前定位成功的地图的ID，
            </para>
            </summary>
        </member>
        <member name="F:easyar.PlaneType.Horizontal">
            <summary>
            <para xml:lang="en">
            Horizontal plane
            </para>
            <para xml:lang="zh">
            水平面
            </para>
            </summary>
        </member>
        <member name="F:easyar.PlaneType.Vertical">
            <summary>
            <para xml:lang="en">
            Vertical plane
            </para>
            <para xml:lang="zh">
            竖直面
            </para>
            </summary>
        </member>
        <member name="M:easyar.PlaneData.#ctor">
            <summary>
            <para xml:lang="en">
            Constructor
            </para>
            <para xml:lang="zh">
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:easyar.PlaneData.getType">
            <summary>
            <para xml:lang="en">
            Returns the type of this plane.
            </para>
            <para xml:lang="zh">
            获取平面类型，当前支持水平面和竖直面。
            </para>
            </summary>
        </member>
        <member name="M:easyar.PlaneData.getPose">
            <summary>
            <para xml:lang="en">
            Returns the pose of the center of the detected plane.The pose&#39;s transformed +Y axis will be point normal out of the plane, with the +X and +Z axes orienting the extents of the bounding rectangle.
            </para>
            <para xml:lang="zh">
            获取平面中心在当前地图坐标系中的位置和姿态。Y轴正方向为平面向外方向，X轴和Z轴定义了外接矩形的范围。
            </para>
            </summary>
        </member>
        <member name="M:easyar.PlaneData.getExtentX">
            <summary>
            <para xml:lang="en">
            Returns the length of this plane&#39;s bounding rectangle measured along the local X-axis of the coordinate space centered on the plane.
            </para>
            <para xml:lang="zh">
            返回检测到的平面的最小外接矩形的在局部坐标系X轴上的尺寸,其中最小外接矩形的中心为平面中心。
            </para>
            </summary>
        </member>
        <member name="M:easyar.PlaneData.getExtentZ">
            <summary>
            <para xml:lang="en">
            Returns the length of this plane&#39;s bounding rectangle measured along the local Z-axis of the coordinate frame centered on the plane.
            </para>
            <para xml:lang="zh">
            返回检测到的平面的最小外接矩形的在局部坐标系Z轴上的尺寸,其中最小外接矩形的中心为平面中心。
            </para>
            </summary>
        </member>
        <member name="F:easyar.LocalizationMode.UntilSuccess">
            <summary>
            <para xml:lang="en">
            Attempt to perform localization in current SparseSpatialMap until success.
            </para>
            <para xml:lang="zh">
            一直尝试定位，一旦定位成功，停止继续尝试
            </para>
            </summary>
        </member>
        <member name="F:easyar.LocalizationMode.Once">
            <summary>
            <para xml:lang="en">
            Perform localization only once
            </para>
            <para xml:lang="zh">
            尝试定位一次
            </para>
            </summary>
        </member>
        <member name="F:easyar.LocalizationMode.KeepUpdate">
            <summary>
            <para xml:lang="en">
            Keep performing localization and adjust result on success
            </para>
            <para xml:lang="zh">
            一直尝试定位，即使定位成功，依然继续尝试，并在定位再次成功时调整结果到更准确的位置和姿态
            </para>
            </summary>
        </member>
        <member name="F:easyar.LocalizationMode.ContinousLocalize">
            <summary>
            <para xml:lang="en">
            Keep performing localization and adjust localization result only when localization returns different map ID from previous results
            </para>
            <para xml:lang="zh">
            一直尝试定位，仅在定位到新地图时调整结果到对应位置和姿态
            </para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapConfig">
            <summary>
            <para xml:lang="en">
            Configuration used to set the localization mode.
            </para>
            <para xml:lang="zh">
            用于配置稀疏建图中的定位策略。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapConfig.#ctor">
            <summary>
            <para xml:lang="en">
            Constructor
            </para>
            <para xml:lang="zh">
            Constructor
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapConfig.setLocalizationMode(easyar.LocalizationMode)">
            <summary>
            <para xml:lang="en">
            Sets localization configurations. See also `LocalizationMode`_.
            </para>
            <para xml:lang="zh">
            设置定位策略参数。参考 `LocalizationMode`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapConfig.getLocalizationMode">
            <summary>
            <para xml:lang="en">
            Returns localization configurations. See also `LocalizationMode`_.
            </para>
            <para xml:lang="zh">
            获取当前定位策略参数。参考 `LocalizationMode`_ 。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMap">
            <summary>
            <para xml:lang="en">
            Provides core components for SparseSpatialMap, can be used for sparse spatial map building as well as localization using existing map. Also provides utilities for point cloud and plane access.
            SparseSpatialMap occupies 2 buffers of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            </para>
            <para xml:lang="zh">
            提供SparseSpatialMap系统主要的功能，地图生成和存储、地图加载和定位，同时可以获取点云，平面等环境信息并进行hit Test。
            SparseSpatialMap占用2个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.isAvailable">
            <summary>
            <para xml:lang="en">
            Check whether SparseSpatialMap is is available, always return true.
            </para>
            <para xml:lang="zh">
            检查SparseSpatialMap是否可用。总是返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.inputFrameSink">
            <summary>
            <para xml:lang="en">
            Input port for input frame. For SparseSpatialMap to work, the inputFrame must include camera parameters, timestamp and spatial information. See also `InputFrameSink`_
            </para>
            <para xml:lang="zh">
            输入帧输入端口。SparseSpatialMap输入帧必须包含camera参数、时间戳信息和空间信息（cameraTransform和trackingStatus）。参考 `InputFrameSink`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.outputFrameSource">
            <summary>
            <para xml:lang="en">
            Output port for output frame. See also `OutputFrameSource`_
            </para>
            <para xml:lang="zh">
            输出帧输出端口。参考 `OutputFrameSource`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.create">
            <summary>
            <para xml:lang="en">
            Construct SparseSpatialMap.
            </para>
            <para xml:lang="zh">
            构造SparseSpatialMap。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.start">
            <summary>
            <para xml:lang="en">
            Start SparseSpatialMap system.
            </para>
            <para xml:lang="zh">
            开始SparseSpatialMap算法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.stop">
            <summary>
            <para xml:lang="en">
            Stop SparseSpatialMap from running。Can resume running by calling start().
            </para>
            <para xml:lang="zh">
            停止SparseSpatialMap算法。调用start重新运行。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.close">
            <summary>
            <para xml:lang="en">
            Close SparseSpatialMap. SparseSpatialMap can no longer be used.
            </para>
            <para xml:lang="zh">
            关闭SparseSpatialMap。close之后不应继续使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.getPointCloudBuffer">
            <summary>
            <para xml:lang="en">
            Returns the buffer of point cloud coordinate. Each 3D point is represented by three consecutive values, representing X, Y, Z position coordinates in the world coordinate space, each of which takes 4 bytes.
            </para>
            <para xml:lang="zh">
            获取当前点云数据位置信息。其中点云位置为世界坐标系中的位置，buffer每一个点由三个连续的值表示，分别代表X，Y，Z轴上的坐标值，每一个值占用4字节。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.getMapPlanes">
            <summary>
            <para xml:lang="en">
            Returns detected planes in SparseSpatialMap.
            </para>
            <para xml:lang="zh">
            获取检测到的平面，类型为 `PlaneType`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.hitTestAgainstPointCloud(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Perform hit test against the point cloud. The results are returned sorted by their distance to the camera in ascending order.
            </para>
            <para xml:lang="zh">
            在当前点云中进行Hit Test，得到距离相机从近到远一条射线上的n（n&gt;=0）个位置坐标。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.hitTestAgainstPlanes(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">
            Performs ray cast from the user&#39;s device in the direction of given screen point.
            Intersections with detected planes are returned. 3D positions on physical planes are sorted by distance from the device in ascending order.
            For the camera image coordinate system ([0, 1]^2), x-right, y-down, and origin is at left-top corner. `CameraParameters.imageCoordinatesFromScreenCoordinates`_ can be used to convert points from screen coordinate system to camera image coordinate system.
            The output point cloud coordinate is in the world coordinate system.
            </para>
            <para xml:lang="zh">
            在当前检测到的平面上进行Hit Test，得到距离相机从近到远一条射线上的n（n&gt;=0）个位置坐标。
            输入图像坐标系（[0, 1]^2）的x朝右、y朝下，原点在左上角。可以使用 `CameraParameters.imageCoordinatesFromScreenCoordinates`_ 来从屏幕坐标转换为图像坐标。
            输出为点云在世界坐标系中的坐标。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.getMapVersion">
            <summary>
            <para xml:lang="en">
            Get the map data version of the current SparseSpatialMap.
            </para>
            <para xml:lang="zh">
            获取当前SparseSpatialMap的地图版本。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.unloadMap(System.String,easyar.CallbackScheduler,easyar.Optional{System.Action{System.Boolean}})">
            <summary>
            <para xml:lang="en">
            UnloadMap specified SparseSpatialMap data via callback function.The return value of callback indicates whether unload map succeeds (true) or fails (false).
            </para>
            <para xml:lang="zh">
            通过回调，卸载指定的SparseSpatialMap地图数据。可以通过回调的返回值判断卸载是否成功,成功返回true,否则返回false。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.setConfig(easyar.SparseSpatialMapConfig)">
            <summary>
            <para xml:lang="en">
            Set configurations for SparseSpatialMap. See also `SparseSpatialMapConfig`_.
            </para>
            <para xml:lang="zh">
            设置SparseSpatialMap相关的配置。参考 `SparseSpatialMapConfig`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.getConfig">
            <summary>
            <para xml:lang="en">
            Returns configurations for SparseSpatialMap. See also `SparseSpatialMapConfig`_.
            </para>
            <para xml:lang="zh">
            获取SparseSpatialMap相关的配置。参考 `SparseSpatialMapConfig`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.startLocalization">
            <summary>
            <para xml:lang="en">
            Start localization in loaded maps. Should set `LocalizationMode`_ first.
            </para>
            <para xml:lang="zh">
            开始在已加载地图中尝试定位。在此之前，需要设定所需的配置参数。参考 `LocalizationMode`_。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMap.stopLocalization">
            <summary>
            <para xml:lang="en">
            Stop localization in loaded maps.
            </para>
            <para xml:lang="zh">
            停当前定位过程。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapManager">
            <summary>
            <para xml:lang="en">
            SparseSpatialMap manager class, for managing sharing.
            </para>
            <para xml:lang="zh">
            SparseSpatialMap管理类，用于管理SparseSpatialMap的分享功能。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapManager.isAvailable">
            <summary>
            <para xml:lang="en">
            Check whether SparseSpatialMapManager is is available. It returns true when the operating system is Windows, Mac, iOS or Android.
            </para>
            <para xml:lang="zh">
            检查SparseSpatialMapManager是否可用。当运行的操作系统为Windows, Mac, iOS或Android时返回true。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapManager.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapManager.host(easyar.SparseSpatialMap,System.String,System.String,System.String,System.String,easyar.Optional{easyar.Image},easyar.CallbackScheduler,System.Action{System.Boolean,System.String,System.String})">
            <summary>
            <para xml:lang="en">
            Creates a map from `SparseSpatialMap`_ and upload it to EasyAR cloud servers. After completion, a serverMapId will be returned for loading map from EasyAR cloud servers.
            </para>
            <para xml:lang="zh">
            从 `SparseSpatialMap`_ 创建地图并上传到EasyAR云服务器以进行分享。创建成功时会获得用于从EasyAR云服务器加载地图的serverMapId。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapManager.load(easyar.SparseSpatialMap,System.String,System.String,System.String,System.String,easyar.CallbackScheduler,System.Action{System.Boolean,System.String})">
            <summary>
            <para xml:lang="en">
            Loads a map from EasyAR cloud servers by serverMapId. To unload the map, call `SparseSpatialMap.unloadMap`_ with serverMapId.
            </para>
            <para xml:lang="zh">
            使用serverMapId从EasyAR云服务器加载地图到 `SparseSpatialMap`_ 中。可以调用 `SparseSpatialMap.unloadMap`_ 并传入serverMapId以卸载地图。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapManager.clear">
            <summary>
            <para xml:lang="en">
            Clears allocated cache space.
            </para>
            <para xml:lang="zh">
            清除已占用的缓存数据空间。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.schemaHash">
            <summary>
            <para xml:lang="en">
            Gets the version schema hash, which can be used to ensure type declarations consistent with runtime library.
            </para>
            <para xml:lang="zh">
            获得版本散列值，用于确保各个语言的类型定义与运行库的类型定义版本一致。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.onPause">
            <summary>
            <para xml:lang="en">
            Handles the app onPause, pauses internal tasks.
            </para>
            <para xml:lang="zh">
            处理应用onPause，暂停内部任务。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.onResume">
            <summary>
            <para xml:lang="en">
            Handles the app onResume, resumes internal tasks.
            </para>
            <para xml:lang="zh">
            处理应用onResume，重启内部任务。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.errorMessage">
            <summary>
            <para xml:lang="en">
            Gets error message on initialization failure.
            </para>
            <para xml:lang="zh">
            用于初始化失败时获得错误信息。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.versionString">
            <summary>
            <para xml:lang="en">
            Gets the version number of EasyARSense.
            </para>
            <para xml:lang="zh">
            获得EasyARSense的版本号。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Engine.name">
            <summary>
            <para xml:lang="en">
            Gets the product name of EasyARSense. (Including variant, operating system and CPU architecture.)
            </para>
            <para xml:lang="zh">
            获得EasyARSense的产品名称。（包括版本变种、操作系统和CPU架构）
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoStatus.Error">
            <summary>
            <para xml:lang="en">
            Status to indicate something wrong happen in video open or play.
            </para>
            <para xml:lang="zh">
            视频打开或播放过程中发生错误
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoStatus.Ready">
            <summary>
            <para xml:lang="en">
            Status to show video finished open and is ready for play.
            </para>
            <para xml:lang="zh">
            视频成功打开，可以开始播放
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoStatus.Completed">
            <summary>
            <para xml:lang="en">
            Status to indicate video finished play and reached the end.
            </para>
            <para xml:lang="zh">
            视频播放完成
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoType.Normal">
            <summary>
            <para xml:lang="en">
            Normal video.
            </para>
            <para xml:lang="zh">
            普通视频
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoType.TransparentSideBySide">
            <summary>
            <para xml:lang="en">
            Transparent video, left half is the RGB channel and right half is alpha channel.
            </para>
            <para xml:lang="zh">
            透明视频，左半边是RGB通道，右半边是alpha通道
            </para>
            </summary>
        </member>
        <member name="F:easyar.VideoType.TransparentTopAndBottom">
            <summary>
            <para xml:lang="en">
            Transparent video, top half is the RGB channel and bottom half is alpha channel.
            </para>
            <para xml:lang="zh">
            透明视频，上半边是RGB通道，下半边是alpha通道
            </para>
            </summary>
        </member>
        <member name="T:easyar.VideoPlayer">
             <summary>
             <para xml:lang="en">
             VideoPlayer is the class for video playback.
             EasyAR supports normal videos, transparent videos and streaming videos. The video content will be rendered into a texture passed into the player through setRenderTexture.
             This class only supports OpenGLES2 texture.
             Due to the dependency to OpenGLES, every method in this class (including the destructor) has to be called in a single thread containing an OpenGLES context.
             Current version requires width and height being mutiples of 16.
            
             Supported video file formats
             Windows: Media Foundation-compatible formats, more can be supported via extra codecs. Please refer to `Supported Media Formats in Media Foundation &lt;https://docs.microsoft.com/en-us/windows/win32/medfound/supported-media-formats-in-media-foundation&gt;`__ . DirectShow is not supported.
             Mac: Not supported.
             Android: System supported formats. Please refer to `Supported media formats &lt;https://developer.android.com/guide/topics/media/media-formats&gt;`__ .
             iOS: System supported formats. There is no reference in effect currently.
             </para>
             <para xml:lang="zh">
             VideoPlayer是视频播放类。
             EasyAR支持普通的视频、透明视频和流媒体播放。视频内容会被渲染到传入setRenderTexture的texture上。
             该类只支持OpenGLES2的texture。
             由于依赖于OpenGLES，本类的所有函数(包括析构函数)都必须在单个包含OpenGLES上下文的线程中调用。
             当前版本要求宽高均为16的倍数。
            
             支持的视频文件格式
             Windows: Media Foundation兼容格式，安装额外的解码器可以支持更多格式，请参考 `Supported Media Formats in Media Foundation &lt;https://docs.microsoft.com/en-us/windows/win32/medfound/supported-media-formats-in-media-foundation&gt;`__ ，不支持DirectShow
             Mac: 不支持
             Android: 系统支持的格式，请参考 `Supported media formats &lt;https://developer.android.com/guide/topics/media/media-formats&gt;`__ 。
             iOS: 系统支持的格式，当前没有有效的参考文档
             </para>
             </summary>
        </member>
        <member name="M:easyar.VideoPlayer.isAvailable">
            <summary>
            <para xml:lang="en">
            Checks if the component is available. It returns true only on Windows, Android or iOS. It&#39;s not available on Mac.
            </para>
            <para xml:lang="zh">
            检查是否可用。只在Windows、Android和iOS上返回true，Mac上不可用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.setVideoType(easyar.VideoType)">
            <summary>
            <para xml:lang="en">
            Sets the video type. The type will default to normal video if not set manually. It should be called before open.
            </para>
            <para xml:lang="zh">
            设置视频类型。如果没有手动设置，将默认为普通类型。这个方法需要在open之前调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.setRenderTexture(easyar.TextureId)">
            <summary>
            <para xml:lang="en">
            Passes the texture to display video into player. It should be set before open.
            </para>
            <para xml:lang="zh">
            传入用来显示视频的texture到播放器。这个方法需要在open之前调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.open(System.String,easyar.StorageType,easyar.CallbackScheduler,easyar.Optional{System.Action{easyar.VideoStatus}})">
            <summary>
            <para xml:lang="en">
            Opens a video from path.
            path can be a local video file (path/to/video.mp4) or url (http://www.../.../video.mp4). storageType indicates the type of path. See `StorageType`_ for more description.
            This method is an asynchronous method. Open may take some time to finish. If you want to know the open result or the play status while playing, you have to handle callback. The callback will be called from a different thread. You can check if the open finished successfully and start play after a successful open.
            </para>
            <para xml:lang="zh">
            从 path 打开视频。
            path 可以是本地视频文件（path/to/video.mp4）或url（http://www.../.../video.mp4）。storageType 表示path的类型。详细描述参见 `StorageType`_ 。
            这个方法是异步的方法。open可能会花一些时间才能完成。如果你希望知道视频打开的结果或播放中的状态，需要处理callback数据。callback会在callbackScheduler对应的线程中被调用。你可以在回调中检查打开是否成功结束并在成功打开之后开始播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.close">
            <summary>
            <para xml:lang="en">
            Closes the video.
            </para>
            <para xml:lang="zh">
            关闭视频。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.play">
            <summary>
            <para xml:lang="en">
            Starts or continues to play video.
            </para>
            <para xml:lang="zh">
            开始或继续播放视频。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.stop">
            <summary>
            <para xml:lang="en">
            Stops the video playback.
            </para>
            <para xml:lang="zh">
            停止视频播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.pause">
            <summary>
            <para xml:lang="en">
            Pauses the video playback.
            </para>
            <para xml:lang="zh">
            暂停视频播放。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.isRenderTextureAvailable">
            <summary>
            <para xml:lang="en">
            Checks whether video texture is ready for render. Use this to check if texture passed into the player has been touched.
            </para>
            <para xml:lang="zh">
            视频texture是否可以用于渲染。可以用于检查传入player的texture是否被碰过。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.updateFrame">
            <summary>
            <para xml:lang="en">
            Updates texture data. This should be called in the renderer thread when isRenderTextureAvailable returns true.
            </para>
            <para xml:lang="zh">
            更新texture数据。这个方法需要在isRenderTextureAvailable返回true的时候在渲染线程上调用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.duration">
            <summary>
            <para xml:lang="en">
            Returns the video duration. Use after a successful open.
            </para>
            <para xml:lang="zh">
            返回视频长度。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.currentPosition">
            <summary>
            <para xml:lang="en">
            Returns the current position of video. Use after a successful open.
            </para>
            <para xml:lang="zh">
            返回当前播放到的视频位置。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.seek(System.Int32)">
            <summary>
            <para xml:lang="en">
            Seeks to play to position . Use after a successful open.
            </para>
            <para xml:lang="zh">
            将播放位置调整到 position 。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.size">
            <summary>
            <para xml:lang="en">
            Returns the video size. Use after a successful open.
            </para>
            <para xml:lang="zh">
            返回视频长宽。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.volume">
            <summary>
            <para xml:lang="en">
            Returns current volume. Use after a successful open.
            </para>
            <para xml:lang="zh">
            返回视频音量。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="M:easyar.VideoPlayer.setVolume(System.Single)">
            <summary>
            <para xml:lang="en">
            Sets volume of the video. Use after a successful open.
            </para>
            <para xml:lang="zh">
            设置视频音量。在成功的open之后使用。
            </para>
            </summary>
        </member>
        <member name="T:easyar.ImageHelper">
            <summary>
            <para xml:lang="en">
            Image helper class.
            </para>
            <para xml:lang="zh">
            图像帮助类。
            </para>
            </summary>
        </member>
        <member name="M:easyar.ImageHelper.decode(easyar.Buffer)">
            <summary>
            <para xml:lang="en">
            Decodes a JPEG or PNG file.
            </para>
            <para xml:lang="zh">
            解码一个JPEG或PNG文件。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SignalSink">
            <summary>
            <para xml:lang="en">
            Signal input port.
            It is used to expose input port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            信号输入端口。
            用于暴露一个组件的输入端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SignalSink.handle">
            <summary>
            <para xml:lang="en">
            Input data.
            </para>
            <para xml:lang="zh">
            传入一个数据。
            </para>
            </summary>
        </member>
        <member name="T:easyar.SignalSource">
            <summary>
            <para xml:lang="en">
            Signal output port.
            It is used to expose output port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            信号输出端口。
            用于暴露一个组件的输出端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SignalSource.setHandler(easyar.Optional{System.Action})">
            <summary>
            <para xml:lang="en">
            Sets data handler.
            </para>
            <para xml:lang="zh">
            设置数据处理器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SignalSource.connect(easyar.SignalSink)">
            <summary>
            <para xml:lang="en">
            Connects to input port.
            </para>
            <para xml:lang="zh">
            连接输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.SignalSource.disconnect">
            <summary>
            <para xml:lang="en">
            Disconnects.
            </para>
            <para xml:lang="zh">
            断开连接。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameSink">
            <summary>
            <para xml:lang="en">
            Input frame input port.
            It is used to expose input port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧输入端口。
            用于暴露一个组件的输入端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameSink.handle(easyar.InputFrame)">
            <summary>
            <para xml:lang="en">
            Input data.
            </para>
            <para xml:lang="zh">
            传入一个数据。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameSource">
            <summary>
            <para xml:lang="en">
            Input frame output port.
            It is used to expose output port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧输出端口。
            用于暴露一个组件的输出端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameSource.setHandler(easyar.Optional{System.Action{easyar.InputFrame}})">
            <summary>
            <para xml:lang="en">
            Sets data handler.
            </para>
            <para xml:lang="zh">
            设置数据处理器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameSource.connect(easyar.InputFrameSink)">
            <summary>
            <para xml:lang="en">
            Connects to input port.
            </para>
            <para xml:lang="zh">
            连接输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameSource.disconnect">
            <summary>
            <para xml:lang="en">
            Disconnects.
            </para>
            <para xml:lang="zh">
            断开连接。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrameSink">
            <summary>
            <para xml:lang="en">
            Output frame input port.
            It is used to expose input port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输出帧输入端口。
            用于暴露一个组件的输入端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameSink.handle(easyar.OutputFrame)">
            <summary>
            <para xml:lang="en">
            Input data.
            </para>
            <para xml:lang="zh">
            传入一个数据。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrameSource">
            <summary>
            <para xml:lang="en">
            Output frame output port.
            It is used to expose output port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输出帧输出端口。
            用于暴露一个组件的输出端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameSource.setHandler(easyar.Optional{System.Action{easyar.OutputFrame}})">
            <summary>
            <para xml:lang="en">
            Sets data handler.
            </para>
            <para xml:lang="zh">
            设置数据处理器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameSource.connect(easyar.OutputFrameSink)">
            <summary>
            <para xml:lang="en">
            Connects to input port.
            </para>
            <para xml:lang="zh">
            连接输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameSource.disconnect">
            <summary>
            <para xml:lang="en">
            Disconnects.
            </para>
            <para xml:lang="zh">
            断开连接。
            </para>
            </summary>
        </member>
        <member name="T:easyar.FeedbackFrameSink">
            <summary>
            <para xml:lang="en">
            Feedback frame input port.
            It is used to expose input port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            反馈帧输入端口。
            用于暴露一个组件的输入端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameSink.handle(easyar.FeedbackFrame)">
            <summary>
            <para xml:lang="en">
            Input data.
            </para>
            <para xml:lang="zh">
            传入一个数据。
            </para>
            </summary>
        </member>
        <member name="T:easyar.FeedbackFrameSource">
            <summary>
            <para xml:lang="en">
            Feedback frame output port.
            It is used to expose output port for a component.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            反馈帧输出端口。
            用于暴露一个组件的输出端口。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameSource.setHandler(easyar.Optional{System.Action{easyar.FeedbackFrame}})">
            <summary>
            <para xml:lang="en">
            Sets data handler.
            </para>
            <para xml:lang="zh">
            设置数据处理器。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameSource.connect(easyar.FeedbackFrameSink)">
            <summary>
            <para xml:lang="en">
            Connects to input port.
            </para>
            <para xml:lang="zh">
            连接输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameSource.disconnect">
            <summary>
            <para xml:lang="en">
            Disconnects.
            </para>
            <para xml:lang="zh">
            断开连接。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameFork">
            <summary>
            <para xml:lang="en">
            Input frame fork.
            It is used to branch and transfer input frame to multiple components in parallel.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧分流器。
            用于将一个输入帧并行传输到多个组件中。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameFork.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameFork.output(System.Int32)">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameFork.outputCount">
            <summary>
            <para xml:lang="en">
            Output count.
            </para>
            <para xml:lang="zh">
            输出个数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameFork.create(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrameFork">
            <summary>
            <para xml:lang="en">
            Output frame fork.
            It is used to branch and transfer output frame to multiple components in parallel.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输出帧分流器。
            用于将一个输出帧并行传输到多个组件中。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameFork.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameFork.output(System.Int32)">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameFork.outputCount">
            <summary>
            <para xml:lang="en">
            Output count.
            </para>
            <para xml:lang="zh">
            输出个数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameFork.create(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrameJoin">
            <summary>
            <para xml:lang="en">
            Output frame join.
            It is used to aggregate output frame from multiple components in parallel.
            All members of this class is thread-safe.
            It shall be noticed that connections and disconnections to the inputs shall not be performed during the flowing of data, or it may stuck in a state that no frame can be output. (It is recommended to complete dataflow connection before start a camera.)
            </para>
            <para xml:lang="zh">
            输出帧合流器。
            用于将多个组件的输出帧合并成一个输出帧。
            本类的所有成员都是线程安全的。
            需要注意其多个输入的连接和断开不应该在有数据流入的同时进行，否则可能会陷入不能输出的状态。（推荐在Camera启动之前完成数据流连接。）
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameJoin.input(System.Int32)">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameJoin.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameJoin.inputCount">
            <summary>
            <para xml:lang="en">
            Input count.
            </para>
            <para xml:lang="zh">
            输入个数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameJoin.create(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates an instance. The default joiner will be used, which takes input frame from the first input and first result or null of each input. The first result of every input will be placed at the corresponding input index of results of the final output frame.
            </para>
            <para xml:lang="zh">
            创建。使用默认的合流函数，其实现为取第一个输入的输入帧，并取每个输入的第一个结果。对每个输入，如果没有结果，则取空结果。每个输入的第一个结果将被放在最终输出帧的results的对应输入索引处。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameJoin.createWithJoiner(System.Int32,System.Func{System.Collections.Generic.List{easyar.OutputFrame},easyar.OutputFrame})">
            <summary>
            <para xml:lang="en">
            Creates an instance. A custom joiner is specified.
            </para>
            <para xml:lang="zh">
            创建。使用自定义合流函数。
            </para>
            </summary>
        </member>
        <member name="T:easyar.FeedbackFrameFork">
            <summary>
            <para xml:lang="en">
            Feedback frame fork.
            It is used to branch and transfer feedback frame to multiple components in parallel.
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            反馈帧分流器。
            用于将一个反馈帧并行传输到多个组件中。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameFork.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameFork.output(System.Int32)">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameFork.outputCount">
            <summary>
            <para xml:lang="en">
            Output count.
            </para>
            <para xml:lang="zh">
            输出个数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrameFork.create(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameThrottler">
            <summary>
            <para xml:lang="en">
            Input frame throttler.
            There is a input frame input port and a input frame output port. It can be used to prevent incoming frames from entering algorithm components when they have not finished handling previous workload.
            InputFrameThrottler occupies one buffer of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            It shall be noticed that connections and disconnections to signalInput shall not be performed during the flowing of data, or it may stuck in a state that no frame can be output. (It is recommended to complete dataflow connection before start a camera.)
            </para>
            <para xml:lang="zh">
            输入帧节流器。
            有一个输入帧输入端口和输入帧输出端口，用于在算法组件未完成处理上一帧数据的时候阻止新的输入帧进入算法组件。
            InputFrameThrottler占用1个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            需要注意其signalInput的连接和断开不应该在有数据流入的同时进行，否则可能会陷入不能输出的状态。（推荐在Camera启动之前完成数据流连接。）
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameThrottler.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameThrottler.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameThrottler.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameThrottler.signalInput">
            <summary>
            <para xml:lang="en">
            Input port for clearance signal.
            </para>
            <para xml:lang="zh">
            放行信号输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameThrottler.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrameBuffer">
            <summary>
            <para xml:lang="en">
            Output frame buffer.
            There is an output frame input port and output frame fetching function. It can be used to convert output frame fetching from asynchronous pattern to synchronous polling pattern, which fits frame by frame rendering.
            OutputFrameBuffer occupies one buffer of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输出帧缓存。
            有一个输出帧输入端口和输出帧获取函数，用于将输出帧的获取方式从异步转化为同步轮询，适合逐帧渲染。
            OutputFrameBuffer占用1个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.signalOutput">
            <summary>
            <para xml:lang="en">
            Output port for frame arrival. It can be connected to `InputFrameThrottler.signalInput`_ .
            </para>
            <para xml:lang="zh">
            到达信号输出端口。可用于连接 `InputFrameThrottler.signalInput`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.peek">
            <summary>
            <para xml:lang="en">
            Fetches the most recent `OutputFrame`_ .
            </para>
            <para xml:lang="zh">
            获取最新的 `OutputFrame`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.pause">
            <summary>
            <para xml:lang="en">
            Pauses output of `OutputFrame`_ . After execution, all results of `OutputFrameBuffer.peek`_ will be empty. `OutputFrameBuffer.signalOutput`_  is not affected.
            </para>
            <para xml:lang="zh">
            暂停输出 `OutputFrame`_ 。执行之后，`OutputFrameBuffer.peek`_ 的结果均为空。`OutputFrameBuffer.signalOutput`_ 不受影响。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrameBuffer.resume">
            <summary>
            <para xml:lang="en">
            Resumes output of `OutputFrame`_ .
            </para>
            <para xml:lang="zh">
            继续输出 `OutputFrame`_ 。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameToOutputFrameAdapter">
            <summary>
            <para xml:lang="en">
            Input frame to output frame adapter.
            There is an input frame input port and an output frame output port. It can be used to wrap an input frame into an output frame, which can be used for rendering without an algorithm component. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧到输出帧适配器。
            有一个输入帧输入端口和一个输出帧输出端口，用于将输入帧包装成输出帧，实现不接入算法组件，直接进行渲染的功能。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToOutputFrameAdapter.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToOutputFrameAdapter.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToOutputFrameAdapter.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrameToFeedbackFrameAdapter">
            <summary>
            <para xml:lang="en">
            Input frame to feedback frame adapter.
            There is an input frame input port, a historic output frame input port and a feedback frame output port. It can be used to combine an input frame and a historic output frame into a feedback frame, which is required by algorithm components such as `ImageTracker`_ .
            On every input of an input frame, a feedback frame is generated with a previously input historic feedback frame. If there is no previously input historic feedback frame, it is null in the feedback frame.
            InputFrameToFeedbackFrameAdapter occupies one buffer of camera. Use setBufferCapacity of camera to set an amount of buffers that is not less than the sum of amount of buffers occupied by all components. Refer to `Overview &lt;Overview.html&gt;`__ .
            All members of this class is thread-safe.
            </para>
            <para xml:lang="zh">
            输入帧到反馈帧适配器。
            有一个输入帧输入端口、一个历史输出帧输入端口和一个反馈帧输出端口，用于将输入帧和历史输出帧组合成反馈帧，传递给要求输入反馈帧的算法组件，例如 `ImageTracker`_ 。
            每次输入帧输入时，会连带上一次输入的历史输出帧合成反馈帧。如果没有输入过历史输出帧，则反馈帧中的历史输出帧为空。
            InputFrameToFeedbackFrameAdapter占用1个camera的buffer。应使用camera的setBufferCapacity设置不少于所有组件占用的camera的buffer数量。参考 `概览 &lt;Overview.html&gt;`__ 。
            本类的所有成员都是线程安全的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToFeedbackFrameAdapter.input">
            <summary>
            <para xml:lang="en">
            Input port.
            </para>
            <para xml:lang="zh">
            输入端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToFeedbackFrameAdapter.bufferRequirement">
            <summary>
            <para xml:lang="en">
            Camera buffers occupied in this component.
            </para>
            <para xml:lang="zh">
            当前组件占用camera buffer的数量。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToFeedbackFrameAdapter.sideInput">
            <summary>
            <para xml:lang="en">
            Side input port for historic output frame input.
            </para>
            <para xml:lang="zh">
            旁路输入端口，用于输入历史输出帧。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToFeedbackFrameAdapter.output">
            <summary>
            <para xml:lang="en">
            Output port.
            </para>
            <para xml:lang="zh">
            输出端口。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrameToFeedbackFrameAdapter.create">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.InputFrame">
            <summary>
            <para xml:lang="en">
            Input frame.
            It includes image, camera parameters, timestamp, camera transform matrix against world coordinate system, and tracking status,
            among which, camera parameters, timestamp, camera transform matrix and tracking status are all optional, but specific algorithms may have special requirements on the input.
            </para>
            <para xml:lang="zh">
            输入帧。
            包含图像、camera参数、时间戳、相机相对于世界坐标系的变换和跟踪状态。
            其中，camera参数、时间戳、相机相对于世界坐标系的变换和跟踪状态均为可选，但特定的算法组件会对输入有特定的要求。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.index">
            <summary>
            <para xml:lang="en">
            Index, an automatic incremental value, which is different for every input frame.
            </para>
            <para xml:lang="zh">
            索引，一个自增量，每个输入帧不同。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.image">
            <summary>
            <para xml:lang="en">
            Gets image.
            </para>
            <para xml:lang="zh">
            获取图像。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.hasCameraParameters">
            <summary>
            <para xml:lang="en">
            Checks if there are camera parameters.
            </para>
            <para xml:lang="zh">
            是否包含camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.cameraParameters">
            <summary>
            <para xml:lang="en">
            Gets camera parameters.
            </para>
            <para xml:lang="zh">
            获取camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.hasTemporalInformation">
            <summary>
            <para xml:lang="en">
            Checks if there is temporal information (timestamp).
            </para>
            <para xml:lang="zh">
            是否包含时间信息（时间戳）。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.timestamp">
            <summary>
            <para xml:lang="en">
            Timestamp. In seconds.
            </para>
            <para xml:lang="zh">
            时间戳。单位为秒。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.hasSpatialInformation">
            <summary>
            <para xml:lang="en">
            Checks if there is spatial information (cameraTransform and trackingStatus).
            </para>
            <para xml:lang="zh">
            是否包含空间信息（cameraTransform和trackingStatus）。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.cameraTransform">
            <summary>
            <para xml:lang="en">
            Camera transform matrix against world coordinate system. Camera coordinate system and world coordinate system are all right-handed. For the camera coordinate system, the origin is the optical center, x-right, y-up, and z in the direction of light going into camera. (The right and up, on mobile devices, is the right and up when the device is in the natural orientation.) The data arrangement is row-major, not like OpenGL&#39;s column-major.
            </para>
            <para xml:lang="zh">
            相机相对于世界坐标系的变换。其中camera坐标系与世界坐标系均为右手坐标系。Camera坐标系的原点为相机光心，x轴正方向为右，y轴正方向为上，z轴正方向为光线进入相机的方向。（其中的右和上，在移动设备上指设备自然方向的右和上。）数据的排列方式为row-major，与OpenGL的column-major相反。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.trackingStatus">
            <summary>
            <para xml:lang="en">
            Gets device motion tracking status: `MotionTrackingStatus`_ .
            </para>
            <para xml:lang="zh">
            获取设备运动跟踪状态: `MotionTrackingStatus`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.create(easyar.Image,easyar.CameraParameters,System.Double,easyar.Matrix44F,easyar.MotionTrackingStatus)">
            <summary>
            <para xml:lang="en">
            Creates an instance.
            </para>
            <para xml:lang="zh">
            创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.createWithImageAndCameraParametersAndTemporal(easyar.Image,easyar.CameraParameters,System.Double)">
            <summary>
            <para xml:lang="en">
            Creates an instance with image, camera parameters, and timestamp.
            </para>
            <para xml:lang="zh">
            创建，只包含图像、camera参数和时间戳。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.createWithImageAndCameraParameters(easyar.Image,easyar.CameraParameters)">
            <summary>
            <para xml:lang="en">
            Creates an instance with image and camera parameters.
            </para>
            <para xml:lang="zh">
            创建，只包含图像和camera参数。
            </para>
            </summary>
        </member>
        <member name="M:easyar.InputFrame.createWithImage(easyar.Image)">
            <summary>
            <para xml:lang="en">
            Creates an instance with image.
            </para>
            <para xml:lang="zh">
            创建，只包含图像。
            </para>
            </summary>
        </member>
        <member name="T:easyar.FrameFilterResult">
            <summary>
            <para xml:lang="en">
            FrameFilterResult is the base class for result classes of all synchronous algorithm components.
            </para>
            <para xml:lang="zh">
            FrameFilterResult是所有使用同步算法组件结果的基类。
            </para>
            </summary>
        </member>
        <member name="T:easyar.OutputFrame">
            <summary>
            <para xml:lang="en">
            Output frame.
            It includes input frame and results of synchronous components.
            </para>
            <para xml:lang="zh">
            输出帧。
            包含输入帧和同步处理组件的输出结果。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrame.index">
            <summary>
            <para xml:lang="en">
            Index, an automatic incremental value, which is different for every output frame.
            </para>
            <para xml:lang="zh">
            索引，一个自增量，每个输出帧不同。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrame.inputFrame">
            <summary>
            <para xml:lang="en">
            Corresponding input frame.
            </para>
            <para xml:lang="zh">
            对应的输入帧。
            </para>
            </summary>
        </member>
        <member name="M:easyar.OutputFrame.results">
            <summary>
            <para xml:lang="en">
            Results of synchronous components.
            </para>
            <para xml:lang="zh">
            算法组件的结果。
            </para>
            </summary>
        </member>
        <member name="T:easyar.FeedbackFrame">
            <summary>
            <para xml:lang="en">
            Feedback frame.
            It includes an input frame and a historic output frame for use in feedback synchronous components such as `ImageTracker`_ .
            </para>
            <para xml:lang="zh">
            反馈帧。
            包含一个输入帧和一个历史输出帧，用于 `ImageTracker`_ 等反馈式同步处理组件。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrame.inputFrame">
            <summary>
            <para xml:lang="en">
            Input frame.
            </para>
            <para xml:lang="zh">
            输入帧。
            </para>
            </summary>
        </member>
        <member name="M:easyar.FeedbackFrame.previousOutputFrame">
            <summary>
            <para xml:lang="en">
            Historic output frame.
            </para>
            <para xml:lang="zh">
            历史输出帧。
            </para>
            </summary>
        </member>
        <member name="F:easyar.PermissionStatus.Granted">
            <summary>
            <para xml:lang="en">
            Permission granted
            </para>
            <para xml:lang="zh">
            权限被允许
            </para>
            </summary>
        </member>
        <member name="F:easyar.PermissionStatus.Denied">
            <summary>
            <para xml:lang="en">
            Permission denied
            </para>
            <para xml:lang="zh">
            权限被拒绝
            </para>
            </summary>
        </member>
        <member name="F:easyar.PermissionStatus.Error">
            <summary>
            <para xml:lang="en">
            A error happened while requesting permission.
            </para>
            <para xml:lang="zh">
            申请权限过程中发生了错误
            </para>
            </summary>
        </member>
        <member name="T:easyar.StorageType">
            <summary>
            <para xml:lang="en">
            StorageType represents where the images, jsons, videos or other files are located.
            StorageType specifies the root path, in all interfaces, you can use relative path relative to the root path.
            </para>
            <para xml:lang="zh">
            StorageType表示图像、json文件、视频或其它文件的存放位置。
            StorageType指定了文件存放的根目录，你可以在所有相关接口中使用相对于这个根目录的相对路径。
            </para>
            </summary>
        </member>
        <member name="F:easyar.StorageType.App">
            <summary>
            <para xml:lang="en">
            The app path.
            Android: the application&#39;s `persistent data directory &lt;https://developer.android.google.cn/reference/android/content/pm/ApplicationInfo.html#dataDir&gt;`__
            iOS: the application&#39;s sandbox directory
            Windows: Windows: the application&#39;s executable directory
            Mac: the application’s executable directory (if app is a bundle, this path is inside the bundle)
            </para>
            <para xml:lang="zh">
            app路径
            Android: 程序 `持久化数据目录 &lt;https://developer.android.google.cn/reference/android/content/pm/ApplicationInfo.html#dataDir&gt;`__
            iOS: 程序沙盒目录
            Windows: 可执行文件（exe）目录
            Mac: 可执行文件目录（如果app是一个bundle，这个目录在bundle内部）
            </para>
            </summary>
        </member>
        <member name="F:easyar.StorageType.Assets">
            <summary>
            <para xml:lang="en">
            The assets path.
            Android: assets directory (inside apk)
            iOS: the application&#39;s executable directory
            Windows: EasyAR.dll directory
            Mac: libEasyAR.dylib directory
            **Note:** *this path is different if you are using Unity3D. It will point to the StreamingAssets folder.*
            </para>
            <para xml:lang="zh">
            assets路径
            Android: assets 目录（apk内部）
            iOS: 可执行文件目录
            Windows: EasyAR.dll所在目录
            Mac: libEasyAR.dylib所在目录
            **注意:** *如果你在使用Unity3D，这个路径是不同的。在Unity3D中它将会指向StreamingAssets目录。*
            </para>
            </summary>
        </member>
        <member name="F:easyar.StorageType.Absolute">
            <summary>
            <para xml:lang="en">
            The absolute path (json/image path or video path) or url (video only).
            </para>
            <para xml:lang="zh">
            绝对路径（json/图片路径或视频文件路径）或url（仅视频文件）
            </para>
            </summary>
        </member>
        <member name="T:easyar.Target">
            <summary>
            <para xml:lang="en">
            Target is the base class for all targets that can be tracked by `ImageTracker`_ or other algorithms inside EasyAR.
            </para>
            <para xml:lang="zh">
            Target是EasyAR里面所有可以被 `ImageTracker`_ 或其它算法跟踪的目标的基类。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.runtimeID">
            <summary>
            <para xml:lang="en">
            Returns the target id. A target id is a integer number generated at runtime. This id is non-zero and increasing globally.
            </para>
            <para xml:lang="zh">
            获取target id。target id是运行时创建的整型数据，只有在成功的配置之后才是有效（非0）的。这个id是非0且全局递增的。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.uid">
            <summary>
            <para xml:lang="en">
            Returns the target uid. A target uid is useful in cloud based algorithms. If no cloud is used, you can set this uid in the json config as a alternative method to distinguish from targets.
            </para>
            <para xml:lang="zh">
            获取target uid。ImageTarget的uid在云识别算法中使用。在没有接入云识别的时候，你可以在json配置中设置这个uid，在自己的代码中作为另一种区分target的方法。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.name">
            <summary>
            <para xml:lang="en">
            Returns the target name. Name is used to distinguish targets in a json file.
            </para>
            <para xml:lang="zh">
            获取target名字。名字用来在json文件中区分target。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.setName(System.String)">
            <summary>
            <para xml:lang="en">
            Set name. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置target名字。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.meta">
            <summary>
            <para xml:lang="en">
            Returns the meta data set by setMetaData. Or, in a cloud returned target, returns the meta data set in the cloud server.
            </para>
            <para xml:lang="zh">
            获取setMetaData所设置的meta data。或者在云识别返回的target中，获得服务器所设置的meta data。
            </para>
            </summary>
        </member>
        <member name="M:easyar.Target.setMeta(System.String)">
            <summary>
            <para xml:lang="en">
            Set meta data. It will erase previously set data or data from cloud.
            </para>
            <para xml:lang="zh">
            设置meta data。这个操作会覆盖上一次的设置或是服务器返回的数据。
            </para>
            </summary>
        </member>
        <member name="F:easyar.TargetStatus.Unknown">
            <summary>
            <para xml:lang="en">
            The status is unknown.
            </para>
            <para xml:lang="zh">
            状态未知
            </para>
            </summary>
        </member>
        <member name="F:easyar.TargetStatus.Undefined">
            <summary>
            <para xml:lang="en">
            The status is undefined.
            </para>
            <para xml:lang="zh">
            状态未定义
            </para>
            </summary>
        </member>
        <member name="F:easyar.TargetStatus.Detected">
            <summary>
            <para xml:lang="en">
            The target is detected.
            </para>
            <para xml:lang="zh">
            状态为检测到
            </para>
            </summary>
        </member>
        <member name="F:easyar.TargetStatus.Tracked">
            <summary>
            <para xml:lang="en">
            The target is tracked.
            </para>
            <para xml:lang="zh">
            状态为跟踪到
            </para>
            </summary>
        </member>
        <member name="T:easyar.TargetInstance">
            <summary>
            <para xml:lang="en">
            TargetInstance is the tracked target by trackers.
            An TargetInstance contains a raw `Target`_ that is tracked and current status and pose of the `Target`_ .
            </para>
            <para xml:lang="zh">
            TargetInstance是被tracker跟踪到的target。
            TargetInstance包括被跟踪上的原始 `Target`_ 以及这个 `Target`_ 当前的状态和姿态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TargetInstance.status">
            <summary>
            <para xml:lang="en">
            Returns current status of the tracked target. Usually you can check if the status equals `TargetStatus.Tracked` to determine current status of the target.
            </para>
            <para xml:lang="zh">
            返回当前被跟踪target的状态。通常你可以status是否等于 `TargetStatus.Tracked` 来判断当前target的状态。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TargetInstance.target">
            <summary>
            <para xml:lang="en">
            Gets the raw target. It will return the same `Target`_ you loaded into a tracker if it was previously loaded into the tracker.
            </para>
            <para xml:lang="zh">
            获取原始target。如果曾经被加载到tracker中，会返回与load进 tracker 相同的 `Target`_ 。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TargetInstance.pose">
            <summary>
            <para xml:lang="en">
            Returns current pose of the tracked target. Camera coordinate system and target coordinate system are all right-handed. For the camera coordinate system, the origin is the optical center, x-right, y-up, and z in the direction of light going into camera. (The right and up, on mobile devices, is the right and up when the device is in the natural orientation.) The data arrangement is row-major, not like OpenGL&#39;s column-major.
            </para>
            <para xml:lang="zh">
            返回当前被跟踪的target相对于Camera的位姿。其中camera坐标系与target坐标系均为右手坐标系。Camera坐标系的原点为相机光心，x轴正方向为右，y轴正方向为上，z轴正方向为光线进入相机的方向。（其中的右和上，在移动设备上指设备自然方向的右和上。）数据的排列方式为row-major，与OpenGL的column-major相反。
            </para>
            </summary>
        </member>
        <member name="T:easyar.TargetTrackerResult">
            <summary>
            <para xml:lang="en">
            TargetTrackerResult is the base class of `ImageTrackerResult`_ and `ObjectTrackerResult`_ .
            </para>
            <para xml:lang="zh">
            TargetTrackerResult是 `ImageTrackerResult`_ 和 `ObjectTrackerResult`_ 的基类。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TargetTrackerResult.targetInstances">
            <summary>
            <para xml:lang="en">
            Returns the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            返回当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TargetTrackerResult.setTargetInstances(System.Collections.Generic.List{easyar.TargetInstance})">
            <summary>
            <para xml:lang="en">
            Sets the list of `TargetInstance`_ contained in the result.
            </para>
            <para xml:lang="zh">
            设置当前结果中包含的 `TargetInstance`_ 列表。
            </para>
            </summary>
        </member>
        <member name="T:easyar.TextureId">
            <summary>
            <para xml:lang="en">
            TextureId encapsulates a texture object in rendering API.
            For OpenGL/OpenGLES, getInt and fromInt shall be used. For Direct3D, getPointer and fromPointer shall be used.
            </para>
            <para xml:lang="zh">
            TextureId封装图形API中的纹理对象。
            其中，OpenGL/OpenGLES应使用getInt和fromInt，Direct3D应使用getPointer和fromPointer。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TextureId.getInt">
            <summary>
            <para xml:lang="en">
            Gets ID of an OpenGL/OpenGLES texture object.
            </para>
            <para xml:lang="zh">
            获得OpenGL/OpenGLES纹理对象的ID。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TextureId.getPointer">
            <summary>
            <para xml:lang="en">
            Gets pointer of a Direct3D texture object.
            </para>
            <para xml:lang="zh">
            获得Direct3D纹理对象的指针。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TextureId.fromInt(System.Int32)">
            <summary>
            <para xml:lang="en">
            Creates from ID of an OpenGL/OpenGLES texture object.
            </para>
            <para xml:lang="zh">
            从OpenGL/OpenGLES纹理对象的ID创建。
            </para>
            </summary>
        </member>
        <member name="M:easyar.TextureId.fromPointer(System.IntPtr)">
            <summary>
            <para xml:lang="en">
            Creates from pointer of a Direct3D texture object.
            </para>
            <para xml:lang="zh">
            从Direct3D纹理对象的指针创建。
            </para>
            </summary>
        </member>
        <member name="T:easyar.CameraImageMaterial">
            <summary>
            <para xml:lang="en">Material to render camera image.</para>
            <para xml:lang="zh">用于渲染camera图像的材质。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageMaterial.Dispose">
            <summary>
            <para xml:lang="en">Dispose resources.</para>
            <para xml:lang="zh">销毁资源。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageMaterial.UpdateByImage(easyar.Image)">
            <summary>
            <para xml:lang="en">Update material using <paramref name="image"/>.</para>
            <para xml:lang="zh">使用<paramref name="image"/>更新材质。</para>
            </summary>
        </member>
        <member name="T:easyar.CameraImageRenderer">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls camera image rendering in the scene.</para>
            <para xml:lang="zh">在场景中控制camera图像渲染的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="E:easyar.CameraImageRenderer.OnFrameRenderUpdate">
            <summary>
            <para xml:lang="en">Camera image rendering update event. This event will pass out the Material and texture size of current camera image rendering. This event only indicates a new render happens, while the camera image itself may not change.</para>
            <para xml:lang="zh">camera图像渲染更新的事件。这个事件会传出当前用于camera图像渲染的材质和贴图大小。当这个事件发生时，camera图像本身不一定有改变，它只表示一次渲染的发生。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageRenderer.RequestTargetTexture(System.Action{UnityEngine.Camera,UnityEngine.RenderTexture})">
            <summary>
            <para xml:lang="en">Get the <see cref="T:UnityEngine.RenderTexture"/> of camera image.</para>
            <para xml:lang="en">The texture is a full sized image from <see cref="T:easyar.OutputFrame"/>, not cropped by the screen. The action <paramref name="targetTextureEventHandler"/> will pass out the <see cref="T:UnityEngine.RenderTexture"/> and the <see cref="T:UnityEngine.Camera"/> drawing the texture when the texture created or changed, will not call every frame or when the camera image data change. Calling this method will create external resources, and will trigger render when necessary, so make sure to release the resource using <see cref="M:easyar.CameraImageRenderer.DropTargetTexture(System.Action{UnityEngine.Camera,UnityEngine.RenderTexture})"/> when not use.</para>
            <para xml:lang="zh">获取camera图像的<see cref="T:UnityEngine.RenderTexture"/>。</para>
            <para xml:lang="zh">通过这个接口获取的texture是从<see cref="T:easyar.OutputFrame"/>获取的完整大小的图像，未经屏幕裁剪。<paramref name="targetTextureEventHandler"/> action会传出<see cref="T:UnityEngine.RenderTexture"/>以及用于绘制texture的<see cref="T:UnityEngine.Camera"/>。这个action不会每帧调用，也不会在camera图像数据发生变化的时候调用，它只会发生在texture本身创建或改变的时候。调用这个方法会创建额外的资源且会在必要时触发渲染，因此在不使用的时候需要调用<see cref="M:easyar.CameraImageRenderer.DropTargetTexture(System.Action{UnityEngine.Camera,UnityEngine.RenderTexture})"/>释放资源。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageRenderer.DropTargetTexture(System.Action{UnityEngine.Camera,UnityEngine.RenderTexture})">
            <summary>
            <para xml:lang="en">Release the <see cref="T:UnityEngine.RenderTexture"/> of camera image. Internal resources will be released when all holders release.</para>
            <para xml:lang="zh">释放绘制camera图像的<see cref="T:UnityEngine.RenderTexture"/>。内部资源将在所有持有者都释放后释放。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageRenderer.OnAssemble(easyar.ARSession)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraImageRenderer.SetHFilp(System.Boolean)">
            <summary>
            <para xml:lang="en">Set render image horizontal flip.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">设置渲染的图像的镜像翻转。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARCameraImageRendererFeature">
            <summary>
            <para xml:lang="en">A render feature for rendering the camera image for AR devies when URP in used. Add this render feature to the renderer feature list in forward renderer asset.</para>
            <para xml:lang="zh">使用URP时用来渲染AR设备相机图像的render feature。需要在forward renderer asset的renderer feature 列表中添加这个render feature。</para>
            </summary>
        </member>
        <member name="T:easyar.IDisplay">
            <summary>
            <para xml:lang="en">Display device interface.</para>
            <para xml:lang="zh">显示设备接口。</para>
            </summary>
        </member>
        <member name="P:easyar.IDisplay.Rotation">
            <summary>
            <para xml:lang="en">Device rotation.</para>
            <para xml:lang="zh">设备旋转信息。</para>
            </summary>
        </member>
        <member name="T:easyar.ARCoreFrameSource">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls ARCore camera device (<see cref="T:easyar.ARCoreCameraDevice"/>) in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ARCoreFrameSource.Device"/> directly when necessary.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">To choose frame source in runtime, you can deactive Camera GameObject and set all required values of all frame sources for availability check, and active Camera GameObject when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中控制ARCore相机设备（<see cref="T:easyar.ARCoreCameraDevice"/>）的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ARCoreFrameSource.Device"/>。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">如果要在运行时选择 frame source，可以deactive Camera GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active Camera GameObject。</para>
            </summary>
        </member>
        <member name="P:easyar.ARCoreFrameSource.Device">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible between <see cref="E:easyar.ARCoreFrameSource.DeviceCreated"/> and <see cref="E:easyar.ARCoreFrameSource.DeviceClosed"/> event if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在<see cref="E:easyar.ARCoreFrameSource.DeviceCreated"/>和<see cref="E:easyar.ARCoreFrameSource.DeviceClosed"/>事件之间访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.ARCoreFrameSource.AutoFocus">
            <summary>
            <para xml:lang="en">Set focus mode when device is opening. Note: auto focus switch may not work on some devices due to hardware or system limitation.</para>
            <para xml:lang="zh">设置打开设备时的对焦模式。注意：受硬件或系统限制，自动对焦开关在一些设备上可能无效。</para>
            </summary>
        </member>
        <member name="E:easyar.ARCoreFrameSource.DeviceCreated">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARCoreFrameSource.Device"/> created.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARCoreFrameSource.Device"/> 创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ARCoreFrameSource.DeviceOpened">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARCoreFrameSource.Device"/> opened.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARCoreFrameSource.Device"/> 打开的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ARCoreFrameSource.DeviceClosed">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARCoreFrameSource.Device"/> closed.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARCoreFrameSource.Device"/> 关闭的事件。</para>
            </summary>
        </member>
        <member name="P:easyar.ARCoreFrameSource.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreFrameSource.Open">
            <summary>
            <para xml:lang="en">Open device.</para>
            <para xml:lang="zh">打开设备。</para>
            </summary>
        </member>
        <member name="M:easyar.ARCoreFrameSource.Close">
            <summary>
            <para xml:lang="en">Close device.</para>
            <para xml:lang="zh">关闭设备。</para>
            </summary>
        </member>
        <member name="T:easyar.ARFoundationFrameSource">
            <summary>
            <para xml:lang="en">A custom frame source which connects AR Foundation output to EasyAR input in the scene, providing AR Foundation support using custom camera feature of EasyAR Sense.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">``AR Foundation`` is required to use this frame source, you need to setup AR Foundation according to official documents.</para>
            <para xml:lang="en">This frame source will use ``ARFoundation.ARSession.CheckAvailability`` to check availability. <see cref="P:easyar.FrameSource.Camera"/> and <see cref="P:easyar.ARFoundationFrameSource.ARSessionOrigin"/> are also required for availability check, they will be automatically picked from scene objects if not setup. To choose frame source in runtime, you can deactive AR Foundation GameObjects and set all required values of all frame sources for availability check, and active AR Foundation GameObjects when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中将AR Foundation 的输出连接到EasyAR输入的自定义frame source。通过EasyAR Sense的自定义相机功能提供AR Foundation支持。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">为了使用这个frame source， ``AR Foundation`` 是必需的。你需要根据官方文档配置AR Foundation。</para>
            <para xml:lang="zh">这个frame source会使用 ``ARFoundation.ARSession.CheckAvailability`` 来检查可用性。在可用性检查中，<see cref="P:easyar.FrameSource.Camera"/> 和<see cref="P:easyar.ARFoundationFrameSource.ARSessionOrigin"/> 也是需要的，如果没有事先设置，会自动从场景物体中选择。如果要在运行时选择 frame source，可以deactive AR Foundation使用的所有GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active AR Foundation 的GameObject。</para>
            </summary>
        </member>
        <member name="F:easyar.ARFoundationFrameSource.AttemptUpdate">
            <summary>
            <para xml:lang="en">If the device supports AR Foundation but does not have the necessary software, some platforms allow prompting the user to install or update the software. If this field is true, a software update will be attempted. If the appropriate software is not installed or out of date, and this field is false, then this frame source will not be available.</para>
            <para xml:lang="zh">如果设备支持AR Foundation但没有必要的软件，一些平台允许提示用户安装或更新软件。如果变量值为true，会尝试软件更新。如果系统中没有安装软件或软件过期，且变量值为false，这个frame source将是不可用的。</para>
            </summary>
        </member>
        <member name="P:easyar.ARFoundationFrameSource.ARSessionOrigin">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取。</para>
            </summary>
            <mutabletype disabled="UnityEngine.MonoBehaviour" enabled="UnityEngine.XR.ARFoundation.ARSessionOrigin"/>
        </member>
        <member name="T:easyar.ARKitFrameSource">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls ARKit camera device (<see cref="T:easyar.ARKitCameraDevice"/>) in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ARKitFrameSource.Device"/> directly when necessary.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">To choose frame source in runtime, you can deactive Camera GameObject and set all required values of all frame sources for availability check, and active Camera GameObject when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中控制ARKit相机设备（<see cref="T:easyar.ARKitCameraDevice"/>）的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ARKitFrameSource.Device"/>。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">如果要在运行时选择 frame source，可以deactive Camera GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active Camera GameObject。</para>
            </summary>
        </member>
        <member name="P:easyar.ARKitFrameSource.Device">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible between <see cref="E:easyar.ARKitFrameSource.DeviceCreated"/> and <see cref="E:easyar.ARKitFrameSource.DeviceClosed"/> event if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在<see cref="E:easyar.ARKitFrameSource.DeviceCreated"/>和<see cref="E:easyar.ARKitFrameSource.DeviceClosed"/>事件之间访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="E:easyar.ARKitFrameSource.DeviceCreated">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARKitFrameSource.Device"/> created.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARKitFrameSource.Device"/> 创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ARKitFrameSource.DeviceOpened">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARKitFrameSource.Device"/> opened.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARKitFrameSource.Device"/> 打开的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ARKitFrameSource.DeviceClosed">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ARKitFrameSource.Device"/> closed.</para>
            <para xml:lang="zh"><see cref="P:easyar.ARKitFrameSource.Device"/> 关闭的事件。</para>
            </summary>
        </member>
        <member name="P:easyar.ARKitFrameSource.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="M:easyar.ARKitFrameSource.Open">
            <summary>
            <para xml:lang="en">Open device.</para>
            <para xml:lang="zh">打开设备。</para>
            </summary>
        </member>
        <member name="M:easyar.ARKitFrameSource.Close">
            <summary>
            <para xml:lang="en">Close device.</para>
            <para xml:lang="zh">关闭设备。</para>
            </summary>
        </member>
        <member name="T:easyar.CameraDeviceFrameSource">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.CameraDevice"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.CameraDeviceFrameSource.Device"/> directly when necessary.</para>
            <para xml:lang="en">This frame source is not a motion tracking device, and will not output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">To choose frame source in runtime, you can deactive Camera GameObject and set all required values of all frame sources for availability check, and active Camera GameObject when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.CameraDevice"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.CameraDeviceFrameSource.Device"/>。</para>
            <para xml:lang="zh">这个frame source不是运动跟踪设备，在<see cref="T:easyar.ARSession"/>中不会输出运动数据。</para>
            <para xml:lang="zh">如果要在运行时选择 frame source，可以deactive Camera GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active Camera GameObject。</para>
            </summary>
        </member>
        <member name="P:easyar.CameraDeviceFrameSource.Device">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible between <see cref="E:easyar.CameraDeviceFrameSource.DeviceCreated"/> and <see cref="E:easyar.CameraDeviceFrameSource.DeviceClosed"/> event if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在<see cref="E:easyar.CameraDeviceFrameSource.DeviceCreated"/>和<see cref="E:easyar.CameraDeviceFrameSource.DeviceClosed"/>事件之间访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.FocusMode">
            <summary>
            <para xml:lang="en">Focus mode used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的聚焦模式，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraSize">
            <summary>
            <para xml:lang="en">Camera preview size used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的图像大小，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraOpenMethod">
            <summary>
            <para xml:lang="en">Camera open method used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的方法，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraType">
            <summary>
            <para xml:lang="en">Camera type used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>, used when <see cref="F:easyar.CameraDeviceFrameSource.CameraOpenMethod"/> == <see cref="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceType"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的Camera类型，只在创建时<see cref="F:easyar.CameraDeviceFrameSource.CameraOpenMethod"/> == <see cref="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceType"/>的时候使用。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraIndex">
            <summary>
            <para xml:lang="en">Camera index used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>, used when <see cref="F:easyar.CameraDeviceFrameSource.CameraOpenMethod"/> == <see cref="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceIndex"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的设备索引，只在创建时<see cref="F:easyar.CameraDeviceFrameSource.CameraOpenMethod"/> == <see cref="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceIndex"/>的时候使用。</para>
            </summary>
        </member>
        <member name="E:easyar.CameraDeviceFrameSource.DeviceCreated">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.CameraDeviceFrameSource.Device"/> created.</para>
            <para xml:lang="zh"><see cref="P:easyar.CameraDeviceFrameSource.Device"/> 创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.CameraDeviceFrameSource.DeviceOpened">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.CameraDeviceFrameSource.Device"/> opened.</para>
            <para xml:lang="zh"><see cref="P:easyar.CameraDeviceFrameSource.Device"/> 打开的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.CameraDeviceFrameSource.DeviceClosed">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.CameraDeviceFrameSource.Device"/> closed.</para>
            <para xml:lang="zh"><see cref="P:easyar.CameraDeviceFrameSource.Device"/> 关闭的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod">
            <summary>
            <para xml:lang="en">Open method of <see cref="T:easyar.CameraDevice"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.CameraDevice"/>开启方式。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceType">
            <summary>
            <para xml:lang="en">Open <see cref="T:easyar.CameraDevice"/> type.</para>
            <para xml:lang="zh">根据<see cref="T:easyar.CameraDevice"/>的类型打开<see cref="T:easyar.CameraDevice"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.CameraDeviceFrameSource.CameraDeviceOpenMethod.DeviceIndex">
            <summary>
            <para xml:lang="en">Open <see cref="T:easyar.CameraDevice"/> index.</para>
            <para xml:lang="zh">根据<see cref="T:easyar.CameraDevice"/>的索引打开<see cref="T:easyar.CameraDevice"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.CameraDeviceFrameSource.CameraPreference">
            <summary>
            <para xml:lang="en">Camera preference used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>. It will switch focus mode to the preferred value, change the focus after this value changed if it not the desired case.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的Camera偏好设置，只在创建时使用。它会同时控制对焦模式到推荐使用值，如果需要使用特定对焦模式，需要在修改这个值之后重新设置对焦模式。</para>
            </summary>
        </member>
        <member name="P:easyar.CameraDeviceFrameSource.Parameters">
            <summary>
            <para xml:lang="en">Camera parameters used only when create <see cref="P:easyar.CameraDeviceFrameSource.Device"/>. It is for advanced usage and will overwrite other values like <see cref="F:easyar.CameraDeviceFrameSource.CameraSize"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.CameraDeviceFrameSource.Device"/>时使用的相机参数，只在创建时使用。这个参数是高级设置，会覆盖<see cref="F:easyar.CameraDeviceFrameSource.CameraSize"/>等其它值。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraDeviceFrameSource.Open">
            <summary>
            <para xml:lang="en">Open device.</para>
            <para xml:lang="zh">打开设备。</para>
            </summary>
        </member>
        <member name="M:easyar.CameraDeviceFrameSource.Close">
            <summary>
            <para xml:lang="en">Close device.</para>
            <para xml:lang="zh">关闭设备。</para>
            </summary>
        </member>
        <member name="T:easyar.HuaweiAREngineFrameSource">
            <summary>
            <para xml:lang="en">A custom frame source which connects Huawei AR Engine output to EasyAR input in the scene, providing Huawei AR Engine support using custom camera feature of EasyAR Sense.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">``Huawei AR Engine Unity SDK`` is required to use this frame source, you need to setup Huawei AR Engine Unity SDK according to official documents.</para>
            <para xml:lang="en">This frame source will use ``AREnginesApk.Instance.IsAREngineApkReady`` to check availability. <see cref="P:easyar.FrameSource.Camera"/> and <see cref="P:easyar.HuaweiAREngineFrameSource.WorldRoot"/> are also required for availability check, they will be automatically picked from scene objects if not setup. To choose frame source in runtime, you can deactive Huawei AR Engine GameObjects and set all required values of all frame sources for availability check, and active Huawei AR Engine GameObjects when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中将华为AR Engine的输出连接到EasyAR输入的自定义frame source。通过EasyAR Sense的自定义相机功能提供华为AR Engine支持。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">为了使用这个frame source， ``华为 AR Engine Unity SDK`` 是必需的。你需要根据官方文档配置华为 AR Engine Unity SDK。</para>
            <para xml:lang="zh">这个frame source会使用 ``AREnginesApk.Instance.IsAREngineApkReady`` 来检查可用性。在可用性检查中，<see cref="P:easyar.FrameSource.Camera"/> 和<see cref="P:easyar.HuaweiAREngineFrameSource.WorldRoot"/> 也是需要的，如果没有事先设置，会自动从场景物体中选择。如果要在运行时选择 frame source，可以deactive 华为AR Engine使用的所有GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active 华为AR Engine的GameObject。</para>
            </summary>
        </member>
        <member name="F:easyar.HuaweiAREngineFrameSource.UseHighResolutionImage">
            <summary>
            <para xml:lang="en">If high resolution image is used as frame input. High resolution image is currently useful for Cloud SpatialMap only. There will be no benefit turn on this flag in other situation except customized algorithm filter is used.</para>
            <para xml:lang="zh">是否使用高分辨率图像作为frame输入。高分辨率图像目前只有在使用Cloud SpatialMap的时候有用，其它情况下开启并不会获得任何益处。</para>
            </summary>
        </member>
        <member name="P:easyar.HuaweiAREngineFrameSource.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="T:easyar.MotionTrackerFrameSource">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.MotionTrackerCameraDevice"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.MotionTrackerFrameSource.Device"/> directly when necessary.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">This frame source will download device list from server when checking availability, timeout in <see cref="F:easyar.MotionTrackerFrameSource.CalibrationDownloaderTimeout"/> seconds. Device list is distributed more frequently than SDK, so some unsupported devices may happen to be supported later without repacking your application. You can disable device list update by setting <see cref="F:easyar.MotionTrackerFrameSource.CalibrationDownloaderTimeout"/> to a value less than or equal to 0.</para>
            <para xml:lang="en">To choose frame source in runtime, you can deactive Camera GameObject and set all required values of all frame sources for availability check, and active Camera GameObject when this frame source is chosen.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.MotionTrackerCameraDevice"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.MotionTrackerFrameSource.Device"/>。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">这个frame source 会在检查可用性时从服务器下载设备列表，超时时间为<see cref="F:easyar.MotionTrackerFrameSource.CalibrationDownloaderTimeout"/> 秒。设备列表比SDK的发布更加频繁，因此一些一开始不被支持的设备可能在之后被支持，而无需重新打包应用。设置<see cref="F:easyar.MotionTrackerFrameSource.CalibrationDownloaderTimeout"/>数值小于等于 0可以关闭设备列表更新。</para>
            <para xml:lang="zh">如果要在运行时选择 frame source，可以deactive Camera GameObject，并设置所有frame source可用性检查所需要的数值，然后在这个frame source被选择后active Camera GameObject。</para>
            </summary>
        </member>
        <member name="P:easyar.MotionTrackerFrameSource.Device">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible between <see cref="E:easyar.MotionTrackerFrameSource.DeviceCreated"/> and <see cref="E:easyar.MotionTrackerFrameSource.DeviceClosed"/> event if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在<see cref="E:easyar.MotionTrackerFrameSource.DeviceCreated"/>和<see cref="E:easyar.MotionTrackerFrameSource.DeviceClosed"/>事件之间访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.DesiredMotionTrackerParameters">
            <summary>
            <para xml:lang="en">Desired motion tracker parameters, used only when <see cref="P:easyar.MotionTrackerFrameSource.Device"/> start.</para>
            <para xml:lang="zh">期望的运动跟踪参数，只在<see cref="P:easyar.MotionTrackerFrameSource.Device"/>启动时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.CalibrationDownloaderTimeout">
            <summary>
            <para xml:lang="en">Timeout in seconds to update device list from server when checking availability using <see cref="M:easyar.MotionTrackerFrameSource.CheckAvailability"/>. Set value less than or equal to 0 to skip update from server.</para>
            <para xml:lang="zh">使用<see cref="M:easyar.MotionTrackerFrameSource.CheckAvailability"/>检查设备是否支持时从服务器更新设备列表的超时时间（秒）。设置数值小于等于 0 可以跳过从服务器获取数据。</para>
            </summary>
        </member>
        <member name="E:easyar.MotionTrackerFrameSource.DeviceCreated">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.MotionTrackerFrameSource.Device"/> created.</para>
            <para xml:lang="zh"><see cref="P:easyar.MotionTrackerFrameSource.Device"/> 创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.MotionTrackerFrameSource.DeviceOpened">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.MotionTrackerFrameSource.Device"/> opened.</para>
            <para xml:lang="zh"><see cref="P:easyar.MotionTrackerFrameSource.Device"/> 打开的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.MotionTrackerFrameSource.DeviceClosed">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.MotionTrackerFrameSource.Device"/> closed.</para>
            <para xml:lang="zh"><see cref="P:easyar.MotionTrackerFrameSource.Device"/> 关闭的事件。</para>
            </summary>
        </member>
        <member name="P:easyar.MotionTrackerFrameSource.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerFrameSource.Open">
            <summary>
            <para xml:lang="en">Open device.</para>
            <para xml:lang="zh">打开设备。</para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerFrameSource.Close">
            <summary>
            <para xml:lang="en">Close device.</para>
            <para xml:lang="zh">关闭设备。</para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerFrameSource.HitTestAgainstHorizontalPlane(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Performs ray cast from the user's device in the direction of given screen point. Intersections with horizontal plane is detected in real time in the current field of view,and return the 3D point nearest to ray on horizontal plane. <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">在当前视野内实时检测到的水平面上进行Hit Test,点击到某个水平面后返回该平面上距离Hit Test射线最近的3D点的位置坐标。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="M:easyar.MotionTrackerFrameSource.HitTestAgainstPointCloud(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Perform hit test against the point cloud and return the nearest 3D point. <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">在当前点云中进行Hit Test,得到距离相机从近到远一条射线上的最近的一个3D点位置坐标。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="T:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters">
            <summary>
            <para xml:lang="en">Motion tracker parameters.</para>
            <para xml:lang="zh">运动跟踪参数。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters.FPS">
            <summary>
            <para xml:lang="en">Device frame rate.</para>
            <para xml:lang="zh">设备帧率。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters.FocusMode">
            <summary>
            <para xml:lang="en">Focus mode.</para>
            <para xml:lang="zh">对焦模式。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters.Resolution">
            <summary>
            <para xml:lang="en">Frame resolution.</para>
            <para xml:lang="zh">分辨率。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters.TrackingMode">
            <summary>
            <para xml:lang="en">Tracking mode.</para>
            <para xml:lang="zh">跟踪模式。</para>
            </summary>
        </member>
        <member name="F:easyar.MotionTrackerFrameSource.MotionTrackerCameraDeviceParameters.MinQualityLevel">
            <summary>
            <para xml:lang="en">Minimum allowed quality level on the device.</para>
            <para xml:lang="zh">最低允许的质量级别。</para>
            </summary>
        </member>
        <member name="T:easyar.NrealFrameSource">
            <summary>
            <para xml:lang="en">A custom frame source which connects Nreal output to EasyAR input in the scene, providing Nreal support using custom camera feature of EasyAR Sense.</para>
            <para xml:lang="en">This frame source is one type of motion tracking device, and will output motion data in a <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">``Nreal SDK For Unity`` is required to use this frame source, you need to setup Nreal SDK For Unity according to official documents.</para>
            <para xml:lang="en"><see cref="P:easyar.NrealFrameSource.CameraRig"/> and <see cref="P:easyar.NrealFrameSource.WorldRoot"/> are required for availability check, they will be automatically picked from scene objects if not setup. <see cref="P:easyar.FrameSource.Camera"/> will be created at runtime and attached to <see cref="P:easyar.NrealFrameSource.CameraRig"/>.</para>
            <para xml:lang="zh">在场景中将Nreal的输出连接到EasyAR输入的自定义frame source。通过EasyAR Sense的自定义相机功能提供Nreal支持。</para>
            <para xml:lang="zh">这个frame source是一种运动跟踪设备，在<see cref="T:easyar.ARSession"/>中会输出运动数据。</para>
            <para xml:lang="zh">为了使用这个frame source， ``Nreal SDK For Unity`` 是必需的。你需要根据官方文档配置Nreal SDK For Unity。</para>
            <para xml:lang="zh">在可用性检查中，<see cref="P:easyar.NrealFrameSource.CameraRig"/> 和<see cref="P:easyar.NrealFrameSource.WorldRoot"/> 是需要的，如果没有事先设置，会自动从场景物体中选择。<see cref="P:easyar.FrameSource.Camera"/>会在运行时创建并被附加在<see cref="P:easyar.NrealFrameSource.CameraRig"/>上</para>
            </summary>
        </member>
        <member name="F:easyar.NrealFrameSource.CameraNearClipPlane">
            <summary>
            <para xml:lang="en">The distance of the near clipping plane from the the RGB Camera.</para>
            <para xml:lang="zh">RGB相机的近裁平面距离。</para>
            </summary>
        </member>
        <member name="F:easyar.NrealFrameSource.CameraFarClipPlane">
            <summary>
            <para xml:lang="en">The distance of the far clipping plane from the the RGB Camera.</para>
            <para xml:lang="zh">RGB相机的远裁平面距离。</para>
            </summary>
        </member>
        <member name="P:easyar.NrealFrameSource.CameraRig">
            <summary>
            <para xml:lang="en">Nreal CameraRig.</para>
            <para xml:lang="zh">Nreal CameraRig。</para>
            </summary>
            <mutabletype disabled="UnityEngine.MonoBehaviour" enabled="NRKernal.NRHMDPoseTracker"/>
        </member>
        <member name="P:easyar.NrealFrameSource.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="P:easyar.NrealFrameSource.ReceivedFrameCount">
            <summary>
            <para xml:lang="en">Received frame count from Nreal. Usually used for debug. There are usually hardware issues if this value stop to increase, and a device re-plug may help.</para>
            <para xml:lang="zh">从Nreal获取到的帧计数。通常在debug中使用。如果这个数值停止增长，通常是硬件问题，重新插拔设备可能能解决。</para>
            </summary>
        </member>
        <member name="T:easyar.VideoRecorder">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.Recorder"/> in the scene, providing a few extensions in the Unity environment. There is no need to use <see cref="T:easyar.Recorder"/> directly.</para>
            <para xml:lang="en">You have full control of what is recorded. The recorder do not record the screen or the camera output silently, the video data being recorded should be passed in continuously using <see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/></para>
            <para xml:lang="en">NOTE: Video recording feature do not work on iOS when using Unity 2020.2 or later.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.Recorder"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。不需要直接使用<see cref="T:easyar.Recorder"/>。</para>
            <para xml:lang="zh">用户对视频录制的内容有完全控制，录屏功能不会默默地录制屏幕或是camera输出，录制的视频数据需要通过<see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/>不断传入。</para>
            <para xml:lang="zh">注意: 如果使用Unity 2020.2及更高版本，录屏功能无法使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.Profile">
            <summary>
            <para xml:lang="en">Record profile used only when create.</para>
            <para xml:lang="zh">创建时使用的录屏配置，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.Orientation">
            <summary>
            <para xml:lang="en">Record video orientation used only when create.</para>
            <para xml:lang="zh">创建时使用的录屏视频朝向，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.RecordZoomMode">
            <summary>
            <para xml:lang="en">Record zoom mode used only when create.</para>
            <para xml:lang="zh">创建时使用的录屏缩放模式，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.FilePathType">
            <summary>
            <para xml:lang="en">Record output file path type used only when create.</para>
            <para xml:lang="zh">创建时使用的录屏文件输出路径类型，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.FilePath">
            <summary>
            <para xml:lang="en">Record output file path used only when create.</para>
            <para xml:lang="zh">创建时使用的录屏文件输出路径，只在创建时使用。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.recorder">
            <senseapi/>
        </member>
        <member name="E:easyar.VideoRecorder.StatusUpdate">
            <summary>
            <para xml:lang="en">Event when record status changes.</para>
            <para xml:lang="zh">录屏状态变化的事件。</para>
            </summary>
        </member>
        <member name="P:easyar.VideoRecorder.IsReady">
            <summary>
            <para xml:lang="en">The recorder can be used. Recorder cannot work if permission not granted.</para>
            <para xml:lang="zh">录屏可以使用。如果权限未被允许录屏将无法使用。</para>
            </summary>
        </member>
        <member name="T:easyar.VideoRecorder.VideoOrientation">
            <summary>
            <para xml:lang="en">Record video orientation.</para>
            <para xml:lang="zh">录屏视频朝向。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.VideoOrientation.Landscape">
            <summary>
            <para xml:lang="en">Video recorded is landscape.</para>
            <para xml:lang="zh">录制的视频是横向。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.VideoOrientation.Portrait">
            <summary>
            <para xml:lang="en">Video recorded is portrait.</para>
            <para xml:lang="zh">录制的视频是竖向。</para>
            </summary>
        </member>
        <member name="F:easyar.VideoRecorder.VideoOrientation.ScreenAdaptive">
            <summary>
            <para xml:lang="en">Video orientation fit screen aspect ratio automatically.</para>
            <para xml:lang="zh">录制的视频朝向根据屏幕比例自动调整。</para>
            </summary>
        </member>
        <member name="M:easyar.VideoRecorder.StartRecording">
            <summary>
            <para xml:lang="en">Start recording using configuration set in the component. The video data being recorded should be passed in continuously using <see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/>。</para>
            <para xml:lang="zh">开始录屏，录屏中使用的配置使用组件内配置。录制的视频数据需要通过<see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/>不断传入。</para>
            </summary>
        </member>
        <member name="M:easyar.VideoRecorder.StartRecording(easyar.RecorderConfiguration)">
            <summary>
            <para xml:lang="en">Start recording using <paramref name="configuration"/>. The configuration set in the component will be ignored. The video data being recorded should be passed in continuously using <see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/></para>
            <para xml:lang="zh">开始录屏，录屏中使用的配置使用<paramref name="configuration"/>。组件内配置将被忽略。录制的视频数据需要通过<see cref="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)"/>不断传入。</para>
            </summary>
        </member>
        <member name="M:easyar.VideoRecorder.StopRecording">
            <summary>
            <para xml:lang="en">Stop recording.</para>
            <para xml:lang="zh">停止录屏。</para>
            </summary>
        </member>
        <member name="M:easyar.VideoRecorder.RecordFrame(UnityEngine.RenderTexture)">
            <summary>
            <para xml:lang="en">Record a frame using <paramref name="texture"/>.</para>
            <para xml:lang="zh">使用<paramref name="texture"/>录制一帧数据。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls EasyAR Sense initialization and some global settings.</para>
            <para xml:lang="zh">在场景中控制EasyAR Sense初始化以及一些全局设置的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARController.ShowPopupMessage">
            <summary>
            <para xml:lang="en">If popup message will be displayed. All popup message from EasyAR Sense Unity Plugin is controlled by this flag.</para>
            <para xml:lang="zh">是否显示弹出消息。所有EasyAR Sense Unity Plugin的弹出消息都由这个flag控制。</para>
            </summary>
        </member>
        <member name="P:easyar.EasyARController.Instance">
            <summary>
            <para xml:lang="en">Global <see cref="T:easyar.EasyARController"/>.</para>
            <para xml:lang="zh">全局<see cref="T:easyar.EasyARController"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.EasyARController.Initialized">
            <summary>
            <para xml:lang="en">EasyAR Sense initialize result, false if license key validation fails.</para>
            <para xml:lang="zh">EasyAR Sense初始化结果。如果license key验证失败会是false。</para>
            </summary>
        </member>
        <member name="P:easyar.EasyARController.Scheduler">
            <summary>
            <para xml:lang="en">Global Scheduler. Accessible after initialized.</para>
            <para xml:lang="zh">全局回调调度器。可以在初始化后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="P:easyar.EasyARController.Settings">
            <summary>
            <para xml:lang="en">Global <see cref="T:easyar.EasyARSettings"/>.</para>
            <para xml:lang="zh">全局<see cref="T:easyar.EasyARSettings"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.EasyARController.Worker">
            <summary>
            <para xml:lang="en">Thread worker. Accessible after Awake.</para>
            <para xml:lang="zh">线程工作器。可以在Awake之后访问。</para>
            </summary>
        </member>
        <member name="M:easyar.EasyARController.Initialize">
            <summary>
            <para xml:lang="en">EasyAR Sense initialization.</para>
            <para xml:lang="zh">初始化EasyAR Sense。</para>
            </summary>
        </member>
        <member name="M:easyar.EasyARController.Initialize(System.String)">
            <summary>
            <para xml:lang="en">EasyAR Sense initialization.</para>
            <para xml:lang="zh">初始化EasyAR Sense。</para>
            </summary>
        </member>
        <member name="M:easyar.EasyARController.Deinitialize">
            <summary>
            <para xml:lang="en">EasyAR Sense deinitialize.</para>
            <para xml:lang="en">This method has nothihng to do with resource dispose. Usually do not require to call manually. Use it if you want to initialize and deinitialize EasyAR multiple times.</para>
            <para xml:lang="zh">反初始化EasyAR Sense。</para>
            <para xml:lang="zh">这个方法与资源释放无关。通常不需要手动调用。只有在需要初始化与反初始化多次的时候调用。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings">
            <summary>
            <para xml:lang="en">EasyAR Sense Unity Plugin settings.</para>
            <para xml:lang="zh">EasyAR Sense Unity Plugin的配置信息。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.LicenseKey">
            <summary>
            <para xml:lang="en">EasyAR Sense License Key. Used for validation of EasyAR Sense functions. Please visit https://www.easyar.com for more details.</para>
            <para xml:lang="zh">EasyAR Sense License Key。用于验证EasyAR Sense内部各种功能是否可用。详见 https://www.easyar.cn 。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.InitializeOnStartup">
            <summary>
            <para xml:lang="en">Initialize EasyAR Sense on startup. EasyAR initialize does not result extra resource usages, so usually you can keep this option on.</para>
            <para xml:lang="zh">在启动时初始化EasyAR。EasyAR的初始化不会造成额外的资源消耗，因此通常可以保持这个选项打开。</para>
            </summary>>
        </member>
        <member name="F:easyar.EasyARSettings.Permissions">
            <summary>
            <para xml:lang="en">Configuration for application permissions. Permissions must be turned on for the feature in use.</para>
            <para xml:lang="zh">应用权限配置。对应功能的权限必须打开。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.GizmoConfig">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for <see cref="T:easyar.ImageTarget"/> and <see cref="T:easyar.ObjectTarget"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/> 和 <see cref="T:easyar.ObjectTarget"/>的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.GlobalSpatialMapServiceConfig">
            <summary>
            <para xml:lang="en">Global spatial map service config.</para>
            <para xml:lang="zh">全局稀疏地图服务器配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.GlobalCloudRecognizerServiceConfig">
            <summary>
            <para xml:lang="en">Global cloud recognizer service config.</para>
            <para xml:lang="zh">全局云识别服务器配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.GlobalCloudLocalizerServeiceConfig">
            <summary>
            <para xml:lang="en">Global cloud localizer serveice config (used in Cloud SpatialMap).</para>
            <para xml:lang="zh">全局云定位服务器配置（Cloud SpatialMap功能使用）。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreSDK">
            <summary>
            <para xml:lang="en">ARCore SDK configuration. If you are using AR Foundation, use <see cref="F:easyar.EasyARSettings.ARCoreType.ARFoundationOrOptional"/> to let the plugin decide which one to use, or use <see cref="F:easyar.EasyARSettings.ARCoreType.External"/>. If other ARCore SDK distributions is desired, use <see cref="F:easyar.EasyARSettings.ARCoreType.External"/>.</para>
            <para xml:lang="zh">ARCore SDK配置。如果你在使用AR Foundation，可以使用 <see cref="F:easyar.EasyARSettings.ARCoreType.ARFoundationOrOptional"/> 来让插件自动决定使用的ARCore分发，也可以使用<see cref="F:easyar.EasyARSettings.ARCoreType.External"/>。如果期望使用其它ARCore SDK分发，需要设置为<see cref="F:easyar.EasyARSettings.ARCoreType.External"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreForAndroid11">
            <summary>
            <para xml:lang="en">Turn on this option if you are building with Android SDK Platform >= 30 and need ARCore to work. Projects built with Unity 2019.4 must be updated to use Gradle 5.6.4 or later. Please refer to https://developers.google.com/ar/develop/unity/android-11-build#unity_20193_20194_and_20201 for updating your project's Gradle version.</para>
            <para xml:lang="zh">如果你在使用Android SDK Platform >= 30构建工程并希望ARCore可以工作，需要打开这个选项。使用Unity 2019.4构建的项目必须使用Gradle 5.6.4或更新版本。可以参考 https://developers.google.com/ar/develop/unity/android-11-build#unity_20193_20194_and_20201 来更新工程使用的Gradle版本。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.GenerateXMLDoc">
            <summary>
            <para xml:lang="en">Generate XML document when script reload to make intelliSense for API document work.</para>
            <para xml:lang="zh">在脚本重新加载时生成XML文档，以使API文档的intelliSense可以工作。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings.ARCoreType">
            <summary>
            <para xml:lang="en">ARCore SDK configuration.</para>
            <para xml:lang="zh">ARCore SDK配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreType.ARFoundationOrOptional">
            <summary>
            <para xml:lang="en">Either ARCore SDK distributed with EasyAR or AR Foundation will be included in the build according to the settings of ARCore XR Plugin.</para>
            <para xml:lang="en">If ARCore SDK distributed with EasyAR is selected, ARCore features will be activated only on ARCore supported devices that have Google Play Services for AR installed.</para>
            <para xml:lang="en">Please visit https://developers.google.com/ar/develop/java/enable-arcore for more details and configurations required for your app.</para>
            <para xml:lang="zh">随EasyAR或AR Foundation一起分发的ARCore SDK将会被包含在应用中，根据ARCore XR Plugin的设置决定。</para>
            <para xml:lang="zh">如果随EasyAR一起分发的ARCore SDK被选中，ARCore 功能只在支持ARCore并安装了Google Play Services for AR的设备上可以使用。</para>
            <para xml:lang="zh">更多细节及应用所需要的配置请访问 https://developers.google.com/ar/develop/java/enable-arcore 。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreType.Optional">
            <summary>
            <para xml:lang="en">ARCore SDK distributed with EasyAR will be included in the build.</para>
            <para xml:lang="en">ARCore features are activated only on ARCore supported devices that have Google Play Services for AR installed.</para>
            <para xml:lang="en">Please visit https://developers.google.com/ar/develop/java/enable-arcore for more details and configurations required for your app.</para>
            <para xml:lang="zh">随EasyAR一起分发的ARCore SDK将会被包含在应用中。</para>
            <para xml:lang="zh">ARCore 功能只在支持ARCore并安装了Google Play Services for AR的设备上可以使用。</para>
            <para xml:lang="zh">更多细节及应用所需要的配置请访问 https://developers.google.com/ar/develop/java/enable-arcore 。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreType.Required">
            <summary>
            <para xml:lang="en">ARCore SDK distributed with EasyAR will be included in the build.</para>
            <para xml:lang="en">Your app will require an ARCore Supported Device that has Google Play Services for AR installed on it.</para>
            <para xml:lang="en">Please visit https://developers.google.com/ar/develop/java/enable-arcore for more details and configurations required for your app.</para>
            <para xml:lang="zh">随EasyAR一起分发的ARCore SDK将会被包含在应用中。</para>
            <para xml:lang="zh">应用将只能在支持ARCore并安装了Google Play Services for AR的设备上可以运行。</para>
            <para xml:lang="zh">更多细节及应用所需要的配置请访问 https://developers.google.com/ar/develop/java/enable-arcore 。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.ARCoreType.External">
            <summary>
            <para xml:lang="en">ARCore SDK distributed with EasyAR will not be used.</para>
            <para xml:lang="zh">随EasyAR一起分发的ARCore SDK将不会使用。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings.TargetGizmoConfig">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for target.</para>
            <para xml:lang="zh">Target的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ImageTarget">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for <see cref="T:easyar.ImageTarget"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/>的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ObjectTarget">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for <see cref="T:easyar.ObjectTarget"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.ObjectTarget"/>的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings.TargetGizmoConfig.ImageTargetConfig">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for <see cref="T:easyar.ImageTarget"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/>的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ImageTargetConfig.EnableImageFile">
            <summary>
            <para xml:lang="en">Enable <see cref="T:UnityEngine.Gizmos"/> of target which <see cref="F:easyar.ImageTargetController.SourceType"/> equals to <see cref="F:easyar.ImageTargetController.DataSource.ImageFile"/>. Enable this option will load image file and display gizmo in Unity Editor, the startup performance of the Editor will be affected if there are too much target of this kind in the scene, but the Unity runtime will not be affected when running on devices.</para>
            <para xml:lang="zh">开启<see cref="F:easyar.ImageTargetController.SourceType"/>类型为<see cref="F:easyar.ImageTargetController.DataSource.ImageFile"/>的target的<see cref="T:UnityEngine.Gizmos"/>。打开这个将会在Unity Editor中加载图像文件并显示对应gizmo，如果场景中该类target过多，可能会影响编辑器中的启动性能。在设备上运行时，Unity运行时的性能不会受到影响。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ImageTargetConfig.EnableTargetDataFile">
            <summary>
            <para xml:lang="en">Enable <see cref="T:UnityEngine.Gizmos"/> of target which <see cref="F:easyar.ImageTargetController.SourceType"/> equals to <see cref="F:easyar.ImageTargetController.DataSource.TargetDataFile"/>. Enable this option will target data file and display gizmo in Unity Editor, the startup performance of the Editor will be affected if there are too much target of this kind in the scene, but the Unity runtime will not be affected when running on devices.</para>
            <para xml:lang="zh">开启<see cref="F:easyar.ImageTargetController.SourceType"/>类型为<see cref="F:easyar.ImageTargetController.DataSource.TargetDataFile"/>的target的<see cref="T:UnityEngine.Gizmos"/>。打开这个将会在Unity Editor中加载target数据文件并显示显示对应gizmo，如果场景中该类target过多，可能会影响编辑器中的启动性能。在设备上运行时，Unity运行时的性能不会受到影响。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ImageTargetConfig.EnableTarget">
            <summary>
            <para xml:lang="en">Enable <see cref="T:UnityEngine.Gizmos"/> of target which <see cref="F:easyar.ImageTargetController.SourceType"/> equals to <see cref="F:easyar.ImageTargetController.DataSource.Target"/>. Enable this option will display gizmo in Unity Editor, the startup performance of the Editor will be affected if there are too much target of this kind in the scene, but the Unity runtime will not be affected when running on devices.</para>
            <para xml:lang="zh">开启<see cref="F:easyar.ImageTargetController.SourceType"/>类型为<see cref="F:easyar.ImageTargetController.DataSource.Target"/>的target的<see cref="T:UnityEngine.Gizmos"/>。打开这个将会在Unity Editor中显示对应gizmo，如果场景中该类target过多，可能会影响编辑器中的启动性能。在设备上运行时，Unity运行时的性能不会受到影响。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings.TargetGizmoConfig.ObjectTargetConfig">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Gizmos"/> configuration for <see cref="T:easyar.ObjectTarget"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.ObjectTarget"/>的<see cref="T:UnityEngine.Gizmos"/>配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.TargetGizmoConfig.ObjectTargetConfig.Enable">
            <summary>
            <para xml:lang="en">Enable <see cref="T:UnityEngine.Gizmos"/>.</para>
            <para xml:lang="zh">开启<see cref="T:UnityEngine.Gizmos"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.EasyARSettings.Permission">
            <summary>
            <para xml:lang="en">Configuration for AndroidManifest.</para>
            <para xml:lang="zh">AndroidManifest权限配置。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.Permission.CameraDevice">
            <summary>
            <para xml:lang="en">Permission required for <see cref="T:easyar.CameraDevice"/> and other frame sources which require camera device usages.</para>
            <para xml:lang="en">Turn on this option will use Camera permission on device.</para>
            <para xml:lang="zh">使用<see cref="T:easyar.CameraDevice"/>及其它需要使用相机设备的frame source需要的权限。</para>
            <para xml:lang="zh">开启这个选项将会使用设备的相机权限。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.Permission.VideoRecording">
            <summary>
            <para xml:lang="en">Permission required for <see cref="T:easyar.VideoRecorder"/>.</para>
            <para xml:lang="en">Turn on this option will use Microphone permission on device.</para>
            <para xml:lang="en">Microphone permission is not forced in iOS build. Don't forget to add MicrophoneUsageDescription to your player settings.</para>
            <para xml:lang="zh">使用<see cref="T:easyar.VideoRecorder"/>需要的权限。</para>
            <para xml:lang="zh">开启这个选项将会使用设备的麦克风权限。</para>
            <para xml:lang="zh">在iOS构建中，麦克风权限没有强制开启。需要注意在player设置中添加MicrophoneUsageDescription。</para>
            </summary>
        </member>
        <member name="F:easyar.EasyARSettings.Permission.CloudSpatialMap">
            <summary>
            <para xml:lang="en">Permission suggested for <see cref="T:easyar.CloudSpatialMapLocalizerFrameFilter"/>.</para>
            <para xml:lang="en">Turn on this option will use (fine) Location permission on device (ONLY when com.easyar.spatialmap package exist).</para>
            <para xml:lang="zh">使用<see cref="T:easyar.CloudSpatialMapLocalizerFrameFilter"/>建议开启的权限。</para>
            <para xml:lang="zh">开启这个选项将会使用设备的（fine）定位权限（只有当com.easyar.spatialmap package存在时才起作用）。</para>
            </summary>
        </member>
        <member name="T:easyar.CloudRecognizerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.CloudRecognizer"/> in the scene, providing a few extensions in the Unity environment. There is no need to use <see cref="T:easyar.CloudRecognizer"/> directly.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.CloudRecognizer"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。不需要直接使用<see cref="T:easyar.CloudRecognizer"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.UseGlobalServiceConfig">
            <summary>
            <para xml:lang="en">Use global service config or not. The global service config can be changed on the inspector after click Unity menu EasyAR -> Sense -> Configuration.</para>
            <para xml:lang="zh">是否使用全局服务器配置。全局配置可以点击Unity菜单EasyAR -> Sense -> Configuration后在属性面板里面进行填写。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.ServerKeyType">
            <summary>
            <para xml:lang="en">Cloud recognizer key type.</para>
            <para xml:lang="zh">云识别服务密钥类型。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.ServiceConfig">
            <summary>
            <para xml:lang="en">Service config when <see cref="F:easyar.CloudRecognizerFrameFilter.UseGlobalServiceConfig"/> == false, only valid for this object.</para>
            <para xml:lang="zh"><see cref="F:easyar.CloudRecognizerFrameFilter.UseGlobalServiceConfig"/> == false时使用的服务器配置，只对该物体有效。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.PrivateServiceConfig">
            <summary>
            <para xml:lang="en">Service config when <see cref="F:easyar.CloudRecognizerFrameFilter.UseGlobalServiceConfig"/> == false, only valid for this object.</para>
            <para xml:lang="zh"><see cref="F:easyar.CloudRecognizerFrameFilter.UseGlobalServiceConfig"/> == false时使用的服务器配置，只对该物体有效。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.cloudRecognizer">
            <senseapi/>
        </member>
        <member name="T:easyar.CloudRecognizerFrameFilter.KeyType">
            <summary>
            <para xml:lang="en">Cloud recognizer key type.</para>
            <para xml:lang="zh">云识别服务密钥类型。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudRecognizerFrameFilter.Resolve(System.Action{easyar.InputFrame},System.Action{easyar.Optional{easyar.CloudRecognizationResult},System.String})">
            <summary>
            <para xml:lang="en">Send recognition request. The lowest available request interval is 300ms</para>
            <para xml:lang="zh">发送云识别请求。最低可用请求间隔是300ms。</para>
            </summary>
        </member>
        <member name="T:easyar.CloudRecognizerFrameFilter.CloudRecognizerServiceConfig">
            <summary>
            <para xml:lang="en">Service config for <see cref="T:easyar.CloudRecognizer"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.CloudRecognizer"/>服务器配置。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.CloudRecognizerServiceConfig.ServerAddress">
            <summary>
            <para xml:lang="en">Server Address, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">服务器地址，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.CloudRecognizerServiceConfig.APIKey">
            <summary>
            <para xml:lang="en">API Key, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Key，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.CloudRecognizerServiceConfig.APISecret">
            <summary>
            <para xml:lang="en">API Secret, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Secret，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudRecognizerFrameFilter.CloudRecognizerServiceConfig.CloudRecognizerAppID">
            <summary>
            <para xml:lang="en">Cloud Recognizer AppID, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">云识别AppID，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="T:easyar.ImageTargetController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.ImageTarget"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ImageTargetController.Target"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.ImageTarget"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ImageTargetController.Target"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTargetController.Target">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after TargetAvailable event.</para>
            <para xml:lang="zh">EasyAR Sense API，可以在TargetAvailable event之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.ImageTargetController.SourceType">
            <summary>
            <para xml:lang="en">Target data source.</para>
            <para xml:lang="zh">Target数据来源。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.ImageFileSource">
            <summary>
            <para xml:lang="en">Image data source for target creation. Valid when <see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.ImageFile"/>.</para>
            <para xml:lang="zh">创建target的图像数据来源。在<see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.ImageFile"/>的时候有效。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.TargetDataFileSource">
            <summary>
            <para xml:lang="en">Target data source for target creation. Valid when <see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.TargetDataFile"/>.</para>
            <para xml:lang="zh">创建target的target data来源。在<see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.TargetDataFile"/>的时候有效。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.TargetSource">
            <summary>
            <para xml:lang="en">Target source when using a target already created. Valid when <see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.Target"/>.</para>
            <para xml:lang="zh">直接使用创建好的target时的target来源。在<see cref="F:easyar.ImageTargetController.SourceType"/> == <see cref="F:easyar.ImageTargetController.DataSource.Target"/>的时候有效。</para>
            </summary>
        </member>
        <member name="E:easyar.ImageTargetController.TargetAvailable">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ImageTargetController.Target"/> can be used.</para>
            <para xml:lang="zh"><see cref="P:easyar.ImageTargetController.Target"/> 可以使用的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ImageTargetController.TargetLoad">
            <summary>
            <para xml:lang="en">Target load finish event. The bool value indicates the load success or not.</para>
            <para xml:lang="zh">Target加载完成的事件。bool值表示加载是否成功。</para>
            </summary>
        </member>
        <member name="E:easyar.ImageTargetController.TargetUnload">
            <summary>
            <para xml:lang="en">Target unload finish event. The bool value indicates the unload success or not.</para>
            <para xml:lang="zh">Target卸载完成的事件。bool值表示卸载是否成功。</para>
            </summary>
        </member>
        <member name="T:easyar.ImageTargetController.DataSource">
            <summary>
            <para xml:lang="en">Target data source type.</para>
            <para xml:lang="zh">Target数据来源类型。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.DataSource.ImageFile">
            <summary>
            <para xml:lang="en">Image file (.jpg, .png).</para>
            <para xml:lang="zh">图像文件（.jpg, .png）。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.DataSource.TargetDataFile">
            <summary>
            <para xml:lang="en">Target data file (.etd).</para>
            <para xml:lang="zh">Target data文件（.etd）。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.DataSource.Target">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.ImageTarget"/> object.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/>对象。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTargetController.Tracker">
            <summary>
            <para xml:lang="en">The <see cref="T:easyar.ImageTrackerFrameFilter"/> which loads the target after <see cref="E:easyar.ImageTargetController.TargetAvailable"/>. When set to null, the target will be unloaded from tracker previously set. Modify at any time and takes effect immediately.</para>
            <para xml:lang="zh">在<see cref="E:easyar.ImageTargetController.TargetAvailable"/>之后加载target的<see cref="T:easyar.ImageTrackerFrameFilter"/>。如果设为null，target将会被从之前设置的tracker中卸载。可随时修改，立即生效。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTargetController.Size">
            <summary>
            <para xml:lang="en">Physical size of <see cref="T:easyar.ImageTarget"/> in meter.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/>的物理大小，单位为米。</para>
            </summary>
        </member>
        <member name="T:easyar.ImageTargetController.ImageFileSourceData">
            <summary>
            <para xml:lang="en">Image data for target creation.</para>
            <para xml:lang="zh">创建target的图像数据。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.ImageFileSourceData.PathType">
            <summary>
            <para xml:lang="en">File path type.</para>
            <para xml:lang="zh">文件路径类型。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.ImageFileSourceData.Path">
            <summary>
            <para xml:lang="en">File path.</para>
            <para xml:lang="zh">文件路径。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.ImageFileSourceData.Name">
            <summary>
            <para xml:lang="en">Target name.</para>
            <para xml:lang="zh">Target名字。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.ImageFileSourceData.Scale">
            <summary>
            <para xml:lang="en">Target scale in meter. Reference <see cref="M:easyar.ImageTarget.scale"/>.</para>
            <para xml:lang="zh">Target图像的缩放比例，单位为米。参考<see cref="M:easyar.ImageTarget.scale"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.ImageTargetController.TargetDataFileSourceData">
            <summary>
            <para xml:lang="en">Target data for target creation. Target scale and name are defined in the etd file.</para>
            <para xml:lang="zh">创建target的target data。Target名字和缩放在etd文件中定义。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.TargetDataFileSourceData.PathType">
            <summary>
            <para xml:lang="en">File path type.</para>
            <para xml:lang="zh">文件路径类型。</para>
            </summary>
        </member>
        <member name="F:easyar.ImageTargetController.TargetDataFileSourceData.Path">
            <summary>
            <para xml:lang="en">File path.</para>
            <para xml:lang="zh">文件路径。</para>
            </summary>
        </member>
        <member name="T:easyar.ImageTrackerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.ImageTracker"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ImageTrackerFrameFilter.Tracker"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.ImageTracker"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ImageTrackerFrameFilter.Tracker"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTrackerFrameFilter.Tracker">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.ImageTrackerFrameFilter.TrackerMode">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.ImageTrackerMode"/> used when creating <see cref="P:easyar.ImageTrackerFrameFilter.Tracker"/>.</para>
            <para xml:lang="zh">创建<see cref="P:easyar.ImageTrackerFrameFilter.Tracker"/>时所使用的<see cref="T:easyar.ImageTrackerMode"/>。</para>
            </summary>
        </member>
        <member name="E:easyar.ImageTrackerFrameFilter.TargetLoad">
            <summary>
            <para xml:lang="en">Target load finish event. The bool value indicates the load success or not.</para>
            <para xml:lang="zh">Target加载完成的事件。bool值表示加载是否成功。</para>
            </summary>
        </member>
        <member name="E:easyar.ImageTrackerFrameFilter.TargetUnload">
            <summary>
            <para xml:lang="en">Target unload finish event. The bool value indicates the unload success or not.</para>
            <para xml:lang="zh">Target卸载完成的事件。bool值表示卸载是否成功。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTrackerFrameFilter.SimultaneousNum">
            <summary>
            <para xml:lang="en">The max number of targets which will be the simultaneously tracked by the tracker. Modify at any time and takes effect immediately.</para>
            <para xml:lang="zh">最大可被tracker跟踪的目标个数。可随时修改，立即生效。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTrackerFrameFilter.TargetControllers">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.TargetController"/> that has been loaded.</para>
            <para xml:lang="zh">已加载的<see cref="T:easyar.TargetController"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ImageTrackerFrameFilter.EnableMotionFusion">
            <summary>
            <para xml:lang="en">Enable motion fusion.</para>
            <para xml:lang="en">Motion fusion will only work when a) one type of motion tracking is running and b) target scale is set to the scale in real world and c) the target does not move in real world.</para>
            <para xml:lang="zh">开启运动融合功能。</para>
            <para xml:lang="zh">运动融合只在满足以下条件时可以工作：1）任意一种运动跟踪功能在运行，2）target scale 与真实世界中的数值相同，3）target在真实世界中不会移动。</para>
            </summary>
        </member>
        <member name="M:easyar.ImageTrackerFrameFilter.LoadTarget(easyar.ImageTargetController)">
            <summary>
            <para xml:lang="en">Load target.</para>
            <para xml:lang="zh">加载target。</para>
            </summary>
        </member>
        <member name="M:easyar.ImageTrackerFrameFilter.UnloadTarget(easyar.ImageTargetController)">
            <summary>
            <para xml:lang="en">Unload target.</para>
            <para xml:lang="zh">卸载target。</para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTargetController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.ObjectTarget"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ObjectTargetController.Target"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.ObjectTarget"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ObjectTargetController.Target"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTargetController.Target">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after TargetAvailable event.</para>
            <para xml:lang="zh">EasyAR Sense API，可以在TargetAvailable event之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.ObjectTargetController.SourceType">
            <summary>
            <para xml:lang="en">Target data source.</para>
            <para xml:lang="zh">Target数据来源。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSource">
            <summary>
            <para xml:lang="en">Obj file data source for target creation. Valid when <see cref="F:easyar.ObjectTargetController.SourceType"/> == <see cref="F:easyar.ObjectTargetController.DataSource.ObjFile"/>.</para>
            <para xml:lang="zh">创建target的obj文件数据来源。在<see cref="F:easyar.ObjectTargetController.SourceType"/> == <see cref="F:easyar.ObjectTargetController.DataSource.ObjFile"/>的时候有效。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.TargetSource">
            <summary>
            <para xml:lang="en">Target source when using a target already created. Valid when <see cref="F:easyar.ObjectTargetController.SourceType"/> == <see cref="F:easyar.ObjectTargetController.DataSource.Target"/>.</para>
            <para xml:lang="zh">直接使用创建好的target时的target来源。在<see cref="F:easyar.ObjectTargetController.SourceType"/> == <see cref="F:easyar.ObjectTargetController.DataSource.Target"/>的时候有效。</para>
            </summary>
        </member>
        <member name="E:easyar.ObjectTargetController.TargetAvailable">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.ObjectTargetController.Target"/> can be used.</para>
            <para xml:lang="zh"><see cref="P:easyar.ObjectTargetController.Target"/> 可以使用的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.ObjectTargetController.TargetLoad">
            <summary>
            <para xml:lang="en">Target load finish event. The bool value indicates the load success or not.</para>
            <para xml:lang="zh">Target加载完成的事件。bool值表示加载是否成功。</para>
            </summary>
        </member>
        <member name="E:easyar.ObjectTargetController.TargetUnload">
            <summary>
            <para xml:lang="en">Target unload finish event. The bool value indicates the unload success or not.</para>
            <para xml:lang="zh">Target卸载完成的事件。bool值表示卸载是否成功。</para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTargetController.DataSource">
            <summary>
            <para xml:lang="en">Target data source type.</para>
            <para xml:lang="zh">Target数据来源类型。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.DataSource.ObjFile">
            <summary>
            <para xml:lang="en">Obj file and other files related.</para>
            <para xml:lang="zh">obj模型文件及相关其它文件。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.DataSource.Target">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.ImageTarget"/> object.</para>
            <para xml:lang="zh"><see cref="T:easyar.ImageTarget"/>对象。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTargetController.Tracker">
            <summary>
            <para xml:lang="en">The <see cref="T:easyar.ImageTrackerFrameFilter"/> which loads the target after <see cref="E:easyar.ObjectTargetController.TargetAvailable"/>. When set to null, the target will be unloaded from tracker previously set. Modify at any time and takes effect immediately.</para>
            <para xml:lang="zh">在<see cref="E:easyar.ObjectTargetController.TargetAvailable"/>之后加载target的<see cref="T:easyar.ImageTrackerFrameFilter"/>。如果设为null，target将会被从之前设置的tracker中卸载。可随时修改，立即生效。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTargetController.BoundingBox">
            <summary>
            <para xml:lang="en">Bounding box of the target.</para>
            <para xml:lang="zh">Target的包围盒。</para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTargetController.ObjFileSourceData">
            <summary>
            <para xml:lang="en">Obj file data for target creation.</para>
            <para xml:lang="zh">创建target的obj文件数据。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSourceData.PathType">
            <summary>
            <para xml:lang="en">File path type.</para>
            <para xml:lang="zh">文件路径类型。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSourceData.ObjPath">
            <summary>
            <para xml:lang="en">Obj file path.</para>
            <para xml:lang="zh">Obj文件路径。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSourceData.ExtraFilePaths">
            <summary>
            <para xml:lang="en">extra file paths referenced in obj file and other files, like .mtl, jpg, .png. These files are usually multiple textures and mtl files.</para>
            <para xml:lang="zh">Obj文件及其它文件中引用的额外文件路径，如：.mtl, .jpg, .png等。这些文件一般由多个贴图文件，和mtl组成。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSourceData.Name">
            <summary>
            <para xml:lang="en">Target name.</para>
            <para xml:lang="zh">Target名字。</para>
            </summary>
        </member>
        <member name="F:easyar.ObjectTargetController.ObjFileSourceData.Scale">
            <summary>
            <para xml:lang="en">Target scale in meter. Reference <see cref="M:easyar.ObjectTarget.scale"/>.</para>
            <para xml:lang="zh">Target的缩放比例，单位为米。参考<see cref="M:easyar.ObjectTarget.scale"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.ObjectTrackerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.ObjectTracker"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.ObjectTrackerFrameFilter.Tracker"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.ObjectTracker"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.ObjectTrackerFrameFilter.Tracker"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTrackerFrameFilter.Tracker">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="E:easyar.ObjectTrackerFrameFilter.TargetLoad">
            <summary>
            <para xml:lang="en">Target load finish event. The bool value indicates the load success or not.</para>
            <para xml:lang="zh">Target加载完成的事件。bool值表示加载是否成功。</para>
            </summary>
        </member>
        <member name="E:easyar.ObjectTrackerFrameFilter.TargetUnload">
            <summary>
            <para xml:lang="en">Target unload finish event. The bool value indicates the unload success or not.</para>
            <para xml:lang="zh">Target卸载完成的事件。bool值表示卸载是否成功。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTrackerFrameFilter.SimultaneousNum">
            <summary>
            <para xml:lang="en">The max number of targets which will be the simultaneously tracked by the tracker. Modify at any time and takes effect immediately.</para>
            <para xml:lang="zh">最大可被tracker跟踪的目标个数。可随时修改，立即生效。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTrackerFrameFilter.TargetControllers">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.TargetController"/> that has been loaded.</para>
            <para xml:lang="zh">已加载的<see cref="T:easyar.TargetController"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ObjectTrackerFrameFilter.EnableMotionFusion">
            <summary>
            <para xml:lang="en">Enable motion fusion.</para>
            <para xml:lang="en">Motion fusion will only work when a) one type of motion tracking is running and b) target scale is set to the scale in real world and c) the target does not move in real world.</para>
            <para xml:lang="zh">开启运动融合功能。</para>
            <para xml:lang="zh">运动融合只在满足以下条件时可以工作：1）任意一种运动跟踪功能在运行，2）target scale 与真实世界中的数值相同，3）target在真实世界中不会移动。</para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTrackerFrameFilter.LoadTarget(easyar.ObjectTargetController)">
            <summary>
            <para xml:lang="en">Load target.</para>
            <para xml:lang="zh">加载target。</para>
            </summary>
        </member>
        <member name="M:easyar.ObjectTrackerFrameFilter.UnloadTarget(easyar.ObjectTargetController)">
            <summary>
            <para xml:lang="en">Unload target.</para>
            <para xml:lang="zh">卸载target。</para>
            </summary>
        </member>
        <member name="T:easyar.VIOCameraDeviceUnion">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls VIO camera device (<see cref="T:easyar.MotionTrackerCameraDevice"/>, <see cref="T:easyar.ARKitCameraDevice"/> or <see cref="T:easyar.ARCoreCameraDevice"/>) in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.VIOCameraDeviceUnion.Device"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制VIO相机设备（<see cref="T:easyar.MotionTrackerCameraDevice"/>、<see cref="T:easyar.ARKitCameraDevice"/>、<see cref="T:easyar.ARCoreCameraDevice"/>）的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.VIOCameraDeviceUnion.Device"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.Device">
            <summary>
            <para xml:lang="en">EasyAR Sense API (Union). Accessible between <see cref="E:easyar.VIOCameraDeviceUnion.DeviceCreated"/> and <see cref="E:easyar.VIOCameraDeviceUnion.DeviceClosed"/> event if available.</para>
            <para xml:lang="zh">EasyAR Sense API (Union)，如果功能可以使用，可以在<see cref="E:easyar.VIOCameraDeviceUnion.DeviceCreated"/>和<see cref="E:easyar.VIOCameraDeviceUnion.DeviceClosed"/>事件之间访问。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DeviceStrategy">
            <summary>
            <para xml:lang="en">Strategy of choosing VIO device.</para>
            <para xml:lang="zh">选择VIO设备的策略。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DesiredMotionTrackerParameters">
            <summary>
            <para xml:lang="en">Desired motion tracker parameters, used only when <see cref="P:easyar.VIOCameraDeviceUnion.Device"/> start. Effective only when <see cref="T:easyar.MotionTrackerCameraDevice"/> is used.</para>
            <para xml:lang="zh">期望的运动跟踪参数，只在<see cref="P:easyar.VIOCameraDeviceUnion.Device"/>启动时使用。只有在使用<see cref="T:easyar.MotionTrackerCameraDevice"/>时有效。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.CalibrationDownloaderTimeout">
            <summary>
            <para xml:lang="en">Timeout in seconds to update device list from server when checking availability using <see cref="M:easyar.VIOCameraDeviceUnion.CheckAvailability"/>. Set value less than or equal to 0 to skip update from server.</para>
            <para xml:lang="zh">使用<see cref="M:easyar.VIOCameraDeviceUnion.CheckAvailability"/>检查设备是否支持时从服务器更新设备列表的超时时间（秒）。设置数值小于等于 0 可以跳过从服务器获取数据。</para>
            </summary>
        </member>
        <member name="E:easyar.VIOCameraDeviceUnion.DeviceCreated">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.VIOCameraDeviceUnion.Device"/> created.</para>
            <para xml:lang="zh"><see cref="P:easyar.VIOCameraDeviceUnion.Device"/> 创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.VIOCameraDeviceUnion.DeviceOpened">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.VIOCameraDeviceUnion.Device"/> opened.</para>
            <para xml:lang="zh"><see cref="P:easyar.VIOCameraDeviceUnion.Device"/> 打开的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.VIOCameraDeviceUnion.DeviceClosed">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.VIOCameraDeviceUnion.Device"/> closed.</para>
            <para xml:lang="zh"><see cref="P:easyar.VIOCameraDeviceUnion.Device"/> 关闭的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.VIOCameraDeviceUnion.DeviceChooseStrategy">
            <summary>
            <para xml:lang="en">Strategy of choosing VIO device.</para>
            <para xml:lang="zh">选择VIO设备的策略。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DeviceChooseStrategy.SystemVIOFirst">
            <summary>
            <para xml:lang="en">Choose VIO device based on system support，in the order of System VIO device (ARKit/ARCore) > EasyAR Motion Tracker.</para>
            <para xml:lang="zh">根据系统对VIO设备支持情况进行选择，优先顺序为 系统VIO设备 (ARKit/ARCore) > EasyAR Motion Tracker。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DeviceChooseStrategy.EasyARMotionTrackerFirst">
            <summary>
            <para xml:lang="en">Choose VIO device based on system support，in the order of EasyAR Motion Tracker > System VIO device (ARKit/ARCore)。</para>
            <para xml:lang="zh">根据系统对VIO设备支持情况进行选择，优先顺序为 EasyAR Motion Tracker > 系统VIO设备 (ARKit/ARCore)。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DeviceChooseStrategy.SystemVIOOnly">
            <summary>
            <para xml:lang="en">Choose only System VIO device (ARKit/ARCore), do not use EasyAR Motion Tracker.</para>
            <para xml:lang="zh">只选择系统VIO设备 (ARKit/ARCore)，不使用EasyAR Motion Tracker。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.DeviceChooseStrategy.EasyARMotionTrackerOnly">
            <summary>
            <para xml:lang="en">Choose only EasyAR Motion Tracker, do not use System VIO device (ARKit/ARCore).</para>
            <para xml:lang="zh">只选择EasyAR Motion Tracker，不使用系统VIO设备 (ARKit/ARCore)。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="M:easyar.VIOCameraDeviceUnion.HitTestAgainstHorizontalPlane(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Performs ray cast from the user's device in the direction of given screen point. Intersections with horizontal plane is detected in real time in the current field of view,and return the 3D point nearest to ray on horizontal plane. <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">在当前视野内实时检测到的水平面上进行Hit Test,点击到某个水平面后返回该平面上距离Hit Test射线最近的3D点的位置坐标。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="M:easyar.VIOCameraDeviceUnion.HitTestAgainstPointCloud(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Perform hit test against the point cloud and return the nearest 3D point. <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">在当前点云中进行Hit Test,得到距离相机从近到远一条射线上的最近的一个3D点位置坐标。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="M:easyar.VIOCameraDeviceUnion.Open">
            <summary>
            <para xml:lang="en">Open device.</para>
            <para xml:lang="zh">打开设备。</para>
            </summary>
        </member>
        <member name="M:easyar.VIOCameraDeviceUnion.Close">
            <summary>
            <para xml:lang="en">Close device.</para>
            <para xml:lang="zh">关闭设备。</para>
            </summary>
        </member>
        <member name="T:easyar.VIOCameraDeviceUnion.DeviceUnion">
            <summary>
            <para xml:lang="en">VIO device Union.</para>
            <para xml:lang="zh">VIO设备的集合。</para>
            </summary>
        </member>
        <member name="T:easyar.VIOCameraDeviceUnion.DeviceUnion.VIODeviceType">
            <summary>
            <para xml:lang="en">VIO device type.</para>
            <para xml:lang="zh">VIO设备类型。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.DeviceUnion.DeviceType">
            <summary>
            <para xml:lang="en">VIO device type.</para>
            <para xml:lang="zh">VIO设备类型。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.DeviceUnion.MotionTrackerCameraDevice">
            <summary>
            <para xml:lang="en">Get <see cref="T:easyar.MotionTrackerCameraDevice"/>. <see cref="T:System.InvalidCastException"/> will be thronw if type error.</para>
            <para xml:lang="zh">获取<see cref="T:easyar.MotionTrackerCameraDevice"/>，如Union非此类型，会抛出<see cref="T:System.InvalidCastException"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.DeviceUnion.ARKitCameraDevice">
            <summary>
            <para xml:lang="en">Get <see cref="T:easyar.ARKitCameraDevice"/>. <see cref="T:System.InvalidCastException"/> will be thronw if type error.</para>
            <para xml:lang="zh">获取<see cref="T:easyar.ARKitCameraDevice"/>，如Union非此类型，会抛出<see cref="T:System.InvalidCastException"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.VIOCameraDeviceUnion.DeviceUnion.ARCoreCameraDevice">
            <summary>
            <para xml:lang="en">Get <see cref="T:easyar.ARCoreCameraDevice"/>. <see cref="T:System.InvalidCastException"/> will be thronw if type error.</para>
            <para xml:lang="zh">获取<see cref="T:easyar.ARCoreCameraDevice"/>，如Union非此类型，会抛出<see cref="T:System.InvalidCastException"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.VIOCameraDeviceUnion.DeviceUnion.Type">
            <summary>
            <para xml:lang="en">Underlying data type.</para>
            <para xml:lang="zh">Union内部数据类型。</para>
            </summary>
        </member>
        <member name="T:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters">
            <summary>
            <para xml:lang="en">Motion tracker parameters.</para>
            <para xml:lang="zh">运动跟踪参数。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters.FPS">
            <summary>
            <para xml:lang="en">Device frame rate.</para>
            <para xml:lang="zh">设备帧率。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters.FocusMode">
            <summary>
            <para xml:lang="en">Focus mode.</para>
            <para xml:lang="zh">对焦模式。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters.Resolution">
            <summary>
            <para xml:lang="en">Frame resolution.</para>
            <para xml:lang="zh">分辨率。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters.TrackingMode">
            <summary>
            <para xml:lang="en">Tracking mode.</para>
            <para xml:lang="zh">跟踪模式。</para>
            </summary>
        </member>
        <member name="F:easyar.VIOCameraDeviceUnion.MotionTrackerCameraDeviceParameters.MinQualityLevel">
            <summary>
            <para xml:lang="en">Minimum allowed quality level on the device.</para>
            <para xml:lang="zh">最低允许的质量级别。</para>
            </summary>
        </member>
        <member name="T:easyar.APIExtend">
            <summary>
            <para xml:lang="en">Extend EasyAR Sense API and Unity API for convenience to do operations like data conversion.</para>
            <para xml:lang="zh">扩展EasyAR Sense API 及 Unity API，为数据转换等操作提供便利。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToUnityMatrix(easyar.Matrix44F)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:easyar.Matrix44F"/> to <see cref="T:UnityEngine.Matrix4x4"/>.</para>
            <para xml:lang="zh">将<see cref="T:easyar.Matrix44F"/>转成<see cref="T:UnityEngine.Matrix4x4"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToEasyARMatrix(UnityEngine.Matrix4x4)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:UnityEngine.Matrix4x4"/> to <see cref="T:easyar.Matrix44F"/>.</para>
            <para xml:lang="zh">将<see cref="T:UnityEngine.Matrix4x4"/>转成<see cref="T:easyar.Matrix44F"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToUnityPose(easyar.Matrix44F)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:easyar.Matrix44F"/> to <see cref="T:UnityEngine.Pose"/> and transform to Unity coordinate system. <paramref name="pose"/> must represent a <see cref="T:UnityEngine.Pose"/>.</para>
            <para xml:lang="zh">将<see cref="T:easyar.Matrix44F"/>转成<see cref="T:UnityEngine.Pose"/>并同时转换到Unity坐标系。<paramref name="pose"/>必须表示一个<see cref="T:UnityEngine.Pose"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToEasyARPose(UnityEngine.Pose)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:UnityEngine.Pose"/> to <see cref="T:easyar.Matrix44F"/> and transform to EasyAR coordinate system.</para>
            <para xml:lang="zh">将<see cref="T:UnityEngine.Pose"/>转成<see cref="T:easyar.Matrix44F"/>并同时转换到EasyAR坐标系。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToEasyARVector(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:UnityEngine.Vector2"/> to <see cref="T:easyar.Vec2F"/>.</para>
            <para xml:lang="zh">将<see cref="T:UnityEngine.Vector2"/>转成<see cref="T:easyar.Vec2F"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToEasyARVector(UnityEngine.Vector3)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:UnityEngine.Vector3"/> to <see cref="T:easyar.Vec3F"/>.</para>
            <para xml:lang="zh">将<see cref="T:UnityEngine.Vector3"/>转成<see cref="T:easyar.Vec3F"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToUnityVector(easyar.Vec2F)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:easyar.Vec2F"/> to <see cref="T:UnityEngine.Vector2"/>.</para>
            <para xml:lang="zh">将<see cref="T:easyar.Vec2F"/>转成<see cref="T:UnityEngine.Vector2"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.APIExtend.ToUnityVector(easyar.Vec3F)">
            <summary>
            <para xml:lang="en">Convert <see cref="T:easyar.Vec3F"/> to <see cref="T:UnityEngine.Vector3"/>.</para>
            <para xml:lang="zh">将<see cref="T:easyar.Vec3F"/>转成<see cref="T:UnityEngine.Vector3"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.PathType">
            <summary>
            <para xml:lang="en">Path type.</para>
            <para xml:lang="zh">路径类型。</para>
            </summary>
        </member>
        <member name="F:easyar.PathType.Absolute">
            <summary>
            <para xml:lang="en">Absolute path.</para>
            <para xml:lang="zh">绝对路径。</para>
            </summary>
        </member>
        <member name="F:easyar.PathType.StreamingAssets">
            <summary>
            <para xml:lang="en">Unity StreamingAssets path.</para>
            <para xml:lang="zh">UnityStreamingAssets路径。</para>
            </summary>
        </member>
        <member name="F:easyar.PathType.None">
            <summary>
            <para xml:lang="en">Not file storage.</para>
            <para xml:lang="zh">不是文件存储。</para>
            </summary>
        </member>
        <member name="T:easyar.WritablePathType">
            <summary>
            <para xml:lang="en">Output file path type.</para>
            <para xml:lang="zh">文件输出路径类型。</para>
            </summary>
        </member>
        <member name="F:easyar.WritablePathType.Absolute">
            <summary>
            <para xml:lang="en">Absolute path.</para>
            <para xml:lang="zh">绝对路径。</para>
            </summary>
        </member>
        <member name="F:easyar.WritablePathType.PersistentDataPath">
            <summary>
            <para xml:lang="en">Unity persistent data path.</para>
            <para xml:lang="zh">Unity沙盒路径。</para>
            </summary>
        </member>
        <member name="T:easyar.FileUtil">
            <summary>
            <para xml:lang="en">File utility.</para>
            <para xml:lang="zh">文件工具。</para>
            </summary>
        </member>
        <member name="M:easyar.FileUtil.LoadFile(System.String,easyar.PathType,System.Action{easyar.Buffer})">
            <summary>
            <para xml:lang="en">Async Load file and return <see cref="T:easyar.Buffer"/> object in the callback.</para>
            <para xml:lang="zh">异步加载文件，回调返回<see cref="T:easyar.Buffer"/>对象。</para>
            </summary>
        </member>
        <member name="M:easyar.FileUtil.LoadFile(System.String,easyar.PathType,System.Action{System.Byte[]},System.Action{System.String})">
            <summary>
            <para xml:lang="en">Async Load file and return byte array in the callback.</para>
            <para xml:lang="zh">异步加载文件，回调返回字节数组。</para>
            </summary>
        </member>
        <member name="M:easyar.FileUtil.PathToUrl(System.String)">
            <summary>
            <para xml:lang="en">Convert file path to URL.</para>
            <para xml:lang="zh">将路径转换成URL。</para>
            </summary>
        </member>
        <member name="M:easyar.FileUtil.ImportSampleStreamingAssets">
            <summary>
            <para xml:lang="en">Import sample streaming assets into Unity project.</para>
            <para xml:lang="zh">导入sample streaming assets到工程中。</para>
            </summary>
        </member>
        <member name="T:easyar.GUIPopup">
            <summary>
            <para xml:lang="en">Popup for message notification. The popup action can be globally controlled using <see cref="F:easyar.EasyARController.ShowPopupMessage"/>.</para>
            <para xml:lang="zh">消息提示弹窗。是否需要显示弹窗可以通过<see cref="F:easyar.EasyARController.ShowPopupMessage"/>来进行全局控制。</para>
            </summary>
        </member>
        <member name="M:easyar.GUIPopup.EnqueueMessage(System.String,System.Single,System.Boolean)">
            <summary>
            <para xml:lang="en">Add one message and its duration for display.</para>
            <para xml:lang="zh">添加一条要显示的消息及时长。</para>
            </summary>
        </member>
        <member name="T:easyar.UIPopupException">
            <summary>
            <para xml:lang="en">Exception that need popup for notification.</para>
            <para xml:lang="zh">需要通过弹窗提示的异常。</para>
            </summary>
        </member>
        <member name="T:easyar.ThreadWorker">
            <summary>
            <para xml:lang="en">Thread worker, to do async tasks in worker thread. All tasks pushed into the worker are ensured to finish before the worker dispose.</para>
            <para xml:lang="zh">线程工作器，负责在工作线程上处理异步任务。所有推送到工作器的任务会被保证在销毁前运行。</para>
            </summary>
        </member>
        <member name="M:easyar.ThreadWorker.Dispose">
            <summary>
            <para xml:lang="en">Dispose resources.</para>
            <para xml:lang="zh">销毁资源。</para>
            </summary>
        </member>
        <member name="M:easyar.ThreadWorker.Run(System.Action)">
            <summary>
            <para xml:lang="en">Run <paramref name="task"/> in worker thread.</para>
            <para xml:lang="zh">在工作线程上运行任务<paramref name="task"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.ARAssembly">
            <remarks>
                                                        +-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .-- .--+
                                                        |                                                                                                                  .
                                                        .                                 +---------------------------------------------------------------+                |
                                                        |                                 |                                                               |                .
                                                        .                                 |                       + -> ObjectTracker - - - - +            |                |
                                                        |                                 v                       '                          '            |                .
                                                        .                        +--> i2FAdapter --> fbFrameFork - - > ImageTracker - - - +  '            |                |
                                                        |                        |                                                        '  '            |                .
                                                        v                        |                                                        v  v            |                |
              FrameSource --> (FrameRecorder) --> iFrameThrottler --> iFrameFork --> i2OAdapter ------------------------------------> oFrameJoin --> oFrameFork --> oFrameBuffer ~~> o
                                                                                 '                                                        ^  ^
                                                                                 '                                                        '  '
                                                                                 + - - - - - - - - - - - - - - - - - > SparseSpatialMap - +  '
                                                                                 '                                                           '
                                                                                 + - - - - - - - - - - - - - - - - - > SurfaceTracker - - - -+
                                                                                 '
                                                                                 + - - - - - - - - - - - - - - - - - > DenseSpatialMap ~ ~ > o
                                                                                 '
                                                                                 + - - - - - - - - - - - - - - - - - > CloudRecognizer ~ ~ > o
            </remarks>
            <summary>
            <para xml:lang="en">Assembly of AR components. It implements one typical assemble strategy for all EasyAR Sense components. Inherit this class and override some methods can make a more customized assembly.</para>
            <para xml:lang="zh">AR组件的组装体。它实现了一种对所有EasyAR Sense组件的典型组装。继承这个类并重载部分可以实现更定制化的组装。</para>
            </summary>
        </member>
        <member name="F:easyar.ARAssembly.iFrameThrottler">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.iFrameFork">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.i2OAdapter">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.i2FAdapter">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.fbFrameFork">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.oFrameJoin">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.oFrameFork">
            <senseapi/>
        </member>
        <member name="F:easyar.ARAssembly.oFrameBuffer">
            <senseapi/>
        </member>
        <member name="P:easyar.ARAssembly.FrameSource">
            <summary>
            <para xml:lang="en">Frame source.</para>
            <para xml:lang="zh">Frame数据源。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.FrameRecorder">
            <summary>
            <para xml:lang="en">Frame recorder.</para>
            <para xml:lang="zh">输入帧录制器。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.FrameFilters">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.FrameFilter"/> list.</para>
            <para xml:lang="zh"><see cref="T:easyar.FrameFilter"/>的列表。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.Camera">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Camera"/> in the virtual world in reflection of real world camera device, its projection matrix and transform will be set to reflect the real world camera.</para>
            <para xml:lang="zh">现实环境中相机设备在虚拟世界中对应的<see cref="T:UnityEngine.Camera"/>，其投影矩阵和位置都将与真实相机对应。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.Ready">
            <summary>
            <para xml:lang="en">The assembly can be used.</para>
            <para xml:lang="zh">组装体可以使用。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.OutputFrame">
            <summary>
            <para xml:lang="en">Output frame.</para>
            <para xml:lang="zh">输出帧。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.ExtraBufferCapacity">
            <summary>
            <para xml:lang="en">Extra device buffer capacity. When you hold a OutputFrame/InputFrame or image from InputFrame for more than one render frame, you should increase this value by one.</para>
            <para xml:lang="zh">额外需要的设备缓冲容量。如果需要保留OutputFrame/InputFrame或InputFrame中的image超过渲染的一帧，需要增加1。</para>
            </summary>
        </member>
        <member name="P:easyar.ARAssembly.Display">
            <summary>
            <para xml:lang="en">Display information used by the assembly.</para>
            <para xml:lang="zh">Assembly使用的显示设备信息。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.Dispose">
            <summary>
            <para xml:lang="en">Dispose resources.</para>
            <para xml:lang="zh">销毁资源。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.Assemble(easyar.ARAssembly.Components,easyar.ARSession)">
            <summary>
            <para xml:lang="en">Assemble AR components.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">组装AR组件。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.Break">
            <summary>
            <para xml:lang="en">Break the assembly. The assembly cannot be used once broken.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">破坏AR组件体。一旦破坏将无法再使用。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.Pause">
            <summary>
            <para xml:lang="en">Pause output.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">暂停输出。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.Resume">
            <summary>
            <para xml:lang="en">Resume output.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">继续输出。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.ResetBufferCapacity">
            <summary>
            <para xml:lang="en">Reset buffer capacity.</para>
            <para xml:lang="zh">重置缓冲的容量。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.GetBufferRequirement">
            <summary>
            <para xml:lang="en">Get buffer requirement.</para>
            <para xml:lang="zh">获取当前需要的缓冲容量。</para>
            </summary>
        </member>
        <member name="M:easyar.ARAssembly.GetFrameFilterCount``1">
            <summary>
            <para xml:lang="en">Get <see cref="T:easyar.FrameFilter"/> number of certain type.</para>
            <para xml:lang="zh">获取指定<see cref="T:easyar.FrameFilter"/>的数量。</para>
            </summary>
        </member>
        <member name="T:easyar.ARComponentPicker">
            <summary>
            <para xml:lang="en">AR component picker. <see cref="T:easyar.ARSession"/> use this picker to pick components and compose <see cref="T:easyar.ARAssembly"/> when start.</para>
            <para xml:lang="zh">AR组件选择器。<see cref="T:easyar.ARSession"/>会在start的时候使用这个选择器来挑选组件并组成<see cref="T:easyar.ARAssembly"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.FrameSource">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.FrameSource"/> selection strategy.</para>
            <para xml:lang="zh"><see cref="T:easyar.FrameSource"/>的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.FrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.FrameFilter"/> selection strategy.</para>
            <para xml:lang="zh"><see cref="T:easyar.FrameFilter"/>的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.FramePlayer">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.FramePlayer"/> selection strategy.</para>
            <para xml:lang="zh"><see cref="T:easyar.FramePlayer"/>的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.FrameRecorder">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.FrameRecorder"/> selection strategy.</para>
            <para xml:lang="zh"><see cref="T:easyar.FrameRecorder"/>的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.SpecifiedComponents">
            <summary>
            <para xml:lang="en">Record specified components.</para>
            <para xml:lang="zh">记录手动指定的组件。</para>
            </summary>
        </member>
        <member name="T:easyar.ARComponentPicker.SingleSelection">
            <summary>
            <para xml:lang="en">Selection strategy to pick only one component.</para>
            <para xml:lang="zh">仅挑选一个组件的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.SingleSelection.FirstAvailableActiveChild">
            <summary>
            <para xml:lang="en">Select first available and active child.</para>
            <para xml:lang="zh">选择第一个可用且active的子节点。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.SingleSelection.Specify">
            <summary>
            <para xml:lang="en">Manually specified.</para>
            <para xml:lang="zh">手动指定。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.SingleSelection.Disable">
            <summary>
            <para xml:lang="en">Do not select.</para>
            <para xml:lang="zh">不进行选择。</para>
            </summary>
        </member>
        <member name="T:easyar.ARComponentPicker.MultipleSelection">
            <summary>
            <para xml:lang="en">Selection strategy to pick multiple components.</para>
            <para xml:lang="zh">挑选多个组件的选择策略。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.MultipleSelection.AllActiveChildren">
            <summary>
            <para xml:lang="en">Select all active children.</para>
            <para xml:lang="zh">选择所有active的子节点。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.MultipleSelection.Specify">
            <summary>
            <para xml:lang="en">Manually specified.</para>
            <para xml:lang="zh">手动指定。</para>
            </summary>
        </member>
        <member name="F:easyar.ARComponentPicker.MultipleSelection.Disable">
            <summary>
            <para xml:lang="en">Do not select.</para>
            <para xml:lang="zh">不进行选择。</para>
            </summary>
        </member>
        <member name="M:easyar.ARComponentPicker.Pick(System.Action{easyar.ARAssembly.Components})">
            <summary>
            <para xml:lang="en">Pick components. Pick may take a few frames to finish due to availability check of some components may take some time.</para>
            <para xml:lang="zh">挑选组件。由于部分组件的可用性检查会花一些实际，挑选操作可能会经过若干帧后才结束。</para>
            </summary>
        </member>
        <member name="M:easyar.ARComponentPicker.Preview">
            <summary>
            <para xml:lang="en">Preview pick results. Preview results may differ from runtime selection. It is only used for editor display.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">预览组件挑选结果。预览结果可能与实际运行不同，仅用于编辑器中的显示。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.ARComponentPicker.GetComponentsInChildrenTransformOrder``1">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.ARSession">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls AR session in the scene. One session contains a set of components assembled as <see cref="T:easyar.ARAssembly"/> and controls data flow in the whole life cycle. This component is the entrance of AR, it is possible to create a new session class and replace this one in the scene to implement fully different AR workflow.</para>
            <para xml:lang="en">Relative transform between <see cref="T:UnityEngine.Camera"/> and a few AR components are controlled by the session, one of those objects is called <see cref="P:easyar.ARSession.CenterObject"/>, it stays still in the scene, while other objects move relatively to <see cref="P:easyar.ARSession.CenterObject"/>. This object is selected according to the value of <see cref="F:easyar.ARSession.CenterMode"/>. See description of <see cref="T:easyar.ARSession.ARCenterMode"/> for more details.</para>
            <para xml:lang="zh">在场景中控制AR会话的<see cref="T:UnityEngine.MonoBehaviour"/>。一个会话包含一组组装成<see cref="T:easyar.ARAssembly"/>的组件，并控制整个生命周期的数据流。这个组件是AR的入口，如果要实现完全不同的AR工作流可以创建一个新的会话类并在场景中替换这个类。</para>
            <para xml:lang="zh"><see cref="T:UnityEngine.Camera"/>和一部分AR组件之间的相对transform是受session控制的，其中的一个物体被称为<see cref="P:easyar.ARSession.CenterObject"/>，它在场景中不动，其它物体相对这个<see cref="P:easyar.ARSession.CenterObject"/>运动。这个物体是根据<see cref="F:easyar.ARSession.CenterMode"/>的数值进行选择的。更详细的说明可以查看<see cref="T:easyar.ARSession.ARCenterMode"/>的描述。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.CenterMode">
            <summary>
            <para xml:lang="en">AR center mode. Modify at any time and takes effect immediately. If the specified mode is not available in a session, it will be change to one of the available mode automatically.</para>
            <para xml:lang="zh">AR中心模式。可随时修改，立即生效。如果指定的模式不可用，它将会被自动修改为可用的模式。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.HorizontalFlipNormal">
            <summary>
            <para xml:lang="en">Horizontal flip rendering mode for normal camera. Modify at any time and takes effect immediately. Only available when using image or object tracking.</para>
            <para xml:lang="zh">正常相机的水平镜像渲染模式。可随时修改，立即生效。仅在使用图像或物体跟踪时可用。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.HorizontalFlipFront">
            <summary>
            <para xml:lang="en">Horizontal flip rendering mode for front camera. Modify at any time and takes effect immediately. Only available when using image or object tracking.</para>
            <para xml:lang="zh">前置相机的水平镜像渲染模式。可随时修改，立即生效。仅在使用图像或物体跟踪时可用。</para>
            </summary>
        </member>
        <member name="T:easyar.ARSession.FrameChangeAction">
            <summary>
            <para xml:lang="en">Output frame change event delegate.</para>
            <para xml:lang="zh">输出帧发生改变的委托。</para>
            </summary>
        </member>
        <member name="E:easyar.ARSession.FrameChange">
            <summary>
            <para xml:lang="en">Output frame change event. It is triggered when the data itself changes, the frequency is affected by <see cref="T:easyar.FrameSource"/> data change (like <see cref="T:easyar.CameraDevice"/> FPS).</para>
            <para xml:lang="zh">输出帧发生改变的事件。该事件会在数据本身产生变化的时候发生，频率受<see cref="T:easyar.FrameSource"/>数据变化（比如<see cref="T:easyar.CameraDevice"/>帧率）影响。</para>
            </summary>
        </member>
        <member name="E:easyar.ARSession.FrameUpdate">
            <summary>
            <para xml:lang="en">Output frame update event. It has the same frequency as MonoBehaviour Update.</para>
            <para xml:lang="zh">输出帧更新事件，该更新频率和MonoBehaviour Update频率相同。</para>
            </summary>
        </member>
        <member name="E:easyar.ARSession.StateChanged">
            <summary>
            <para xml:lang="en"><see cref="P:easyar.ARSession.State"/> change event.</para>
            <para xml:lang="zh">session状态改变的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.ARSession.ARCenterMode">
            <summary>
            <para xml:lang="en">AR center mode.</para>
            <para xml:lang="en">*NOTE: In EasyAR Sense Unity Plugin, there are four different types of center modes. Similar concept may not exist in some other AR frameworks like AR Foundation, and the behavior of object relationships is usually equal to* <see cref="F:easyar.ARSession.ARCenterMode.SessionOrigin"/> *mode here.*</para>
            <para xml:lang="en">Relative transform between <see cref="P:easyar.ARAssembly.Camera"/> and a few AR components are controlled by the session, one of those objects is called <see cref="P:easyar.ARSession.CenterObject"/>, it stays still in the scene, while other objects move relatively to <see cref="P:easyar.ARSession.CenterObject"/>. This object is selected according to the value of <see cref="F:easyar.ARSession.CenterMode"/>.</para>
            <para xml:lang="en"><see cref="P:easyar.ARSession.CenterObject"/> represents an object or parent of object that do not move in Unity space. It can be <see cref="P:easyar.ARSession.Origin"/>, <see cref="P:easyar.ARAssembly.Camera"/> or some `target`. A `target` could be object containing one of the following component: <see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/> or <see cref="T:easyar.SpatialMapRootController"/>. While in the context of sparse spatial map or cloud spatial map, the exact center <see cref="T:UnityEngine.GameObject"/> is the localized map object under the root, and <see cref="P:easyar.ARSession.CenterObject"/> is parent of this object.</para>
            <para xml:lang="en"><see cref="P:easyar.ARSession.CenterObject"/> may change to other `target` in <see cref="F:easyar.ARSession.ARCenterMode.FirstTarget"/> or <see cref="F:easyar.ARSession.ARCenterMode.SpecificTarget"/> mode when `target` is not found or lost in a frame. If no `target` is found in this frame, the <see cref="P:easyar.ARSession.CenterObject"/> will fallback to the center of first available mode in the order of <see cref="F:easyar.ARSession.ARCenterMode.SessionOrigin"/> and <see cref="F:easyar.ARSession.ARCenterMode.Camera"/>.</para>
            <para xml:lang="en">The relative transform between `target` and <see cref="P:easyar.ARAssembly.Camera"/> is controlled by this session according to <see cref="P:easyar.ARAssembly.OutputFrame"/> data every frame. The relative transform between <see cref="P:easyar.ARSession.Origin"/> and <see cref="P:easyar.ARAssembly.Camera"/> is also controlled by this session according to <see cref="P:easyar.ARAssembly.OutputFrame"/> data every frame when <see cref="P:easyar.FrameSource.IsCameraUnderControl"/> is true. When <see cref="P:easyar.FrameSource.IsCameraUnderControl"/> is false, the relative transform between <see cref="P:easyar.ARSession.Origin"/> and <see cref="P:easyar.ARAssembly.Camera"/> is not controlled by this session and is usually controlled by other AR Frameworks like AR Foundation.</para>
            <para xml:lang="zh">AR中心模式。</para>
            <para xml:lang="zh">*注意：在EasyAR Sense Unity Plugin中总共有四种中心模式。在其它AR框架比如AR Foundation中可能并不存在类似的概念，通常它们里面的物体间相对关系的行为与这里的*<see cref="F:easyar.ARSession.ARCenterMode.SessionOrigin"/>*模式一致。*</para>
            <para xml:lang="zh"><see cref="P:easyar.ARAssembly.Camera"/>和一部分AR组件之间的相对transform是受session控制的，其中的一个物体被称为<see cref="P:easyar.ARSession.CenterObject"/>，它在场景中不动，其它物体相对这个<see cref="P:easyar.ARSession.CenterObject"/>运动。这个物体是根据<see cref="F:easyar.ARSession.CenterMode"/>的数值进行选择的。</para>
            <para xml:lang="zh"><see cref="P:easyar.ARSession.CenterObject"/> 表示在Unity空间中不运动的物体或这个物体的父节点。它可能是 <see cref="P:easyar.ARSession.Origin"/>，<see cref="P:easyar.ARAssembly.Camera"/> 或某个 `target` 。 `Target` 可以是包含以下任一组件的物体：<see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/>或<see cref="T:easyar.SpatialMapRootController"/>。在使用稀疏空间地图和云空间地图的时候，实际的中心<see cref="T:UnityEngine.GameObject"/>是root节点下具体定位到的map物体，<see cref="P:easyar.ARSession.CenterObject"/> 是这个物体的父节点。</para>
            <para xml:lang="zh">在<see cref="F:easyar.ARSession.ARCenterMode.FirstTarget"/> 或 <see cref="F:easyar.ARSession.ARCenterMode.SpecificTarget"/>模式下，当 `target` 在某一帧中未被识别到或丢失的时候，<see cref="P:easyar.ARSession.CenterObject"/> 可能会变成其它 `target` ，而如果在帧内找不到 `target` ，<see cref="P:easyar.ARSession.CenterObject"/>会按先后顺序退变为<see cref="F:easyar.ARSession.ARCenterMode.SessionOrigin"/>和<see cref="F:easyar.ARSession.ARCenterMode.Camera"/>里面第一个可用的模式的中心。</para>
            <para xml:lang="zh">`Target` 和<see cref="P:easyar.ARAssembly.Camera"/>的相对位置关系由当前session根据每帧<see cref="P:easyar.ARAssembly.OutputFrame"/>数据控制。<see cref="P:easyar.ARSession.Origin"/> 和<see cref="P:easyar.ARAssembly.Camera"/>的相对位置关系，在<see cref="P:easyar.FrameSource.IsCameraUnderControl"/> 为true的时候，也由当前session根据每帧<see cref="P:easyar.ARAssembly.OutputFrame"/>数据控制，而当<see cref="P:easyar.FrameSource.IsCameraUnderControl"/> 为false的时候，它是不受当前session控制的，通常由其它AR框架比如AR Foundation控制。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARCenterMode.FirstTarget">
            <summary>
            <para xml:lang="en">The session will use the first tracked `target` as center.</para>
            <para xml:lang="en">You can move or rotate the `target` and <see cref="P:easyar.ARAssembly.Camera"/> will follow. You cannot manually change the transform of <see cref="P:easyar.ARAssembly.Camera"/> in this mode. <see cref="P:easyar.ARSession.Origin"/> will also follow if any type of motion tracking is running, and its transform cannot be manually changed.</para>
            <para xml:lang="en">When the `target` is lost, the center object will be recalculated. While in the context of sparse spatial map or cloud spatial map, the exact center <see cref="T:UnityEngine.GameObject"/> is the localized map object under the root. Start localizing another map is treated as lost from localizing the previous one, and the center object will be recalculated.</para>
            <para xml:lang="zh">当前session是以第一个跟踪到的 `target` 为中心的。</para>
            <para xml:lang="zh">你可以移动或旋转 `target` ，<see cref="P:easyar.ARAssembly.Camera"/>会跟着动。在这个模式下你将无法手动控制<see cref="P:easyar.ARAssembly.Camera"/>的transform。如果任意一种运动跟踪在运行，<see cref="P:easyar.ARSession.Origin"/>也会跟着动，它的transform也是不能手动控制的。</para>
            <para xml:lang="zh">当 `target` 丢失之后，中心物体会重新计算。在使用稀疏空间地图和云空间地图的时候，实际的中心<see cref="T:UnityEngine.GameObject"/>是root节点下具体定位到的map物体。并且，定位一张新的地图将会被认作从前一张地图定位过程中的丢失，中心物体会重新计算。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARCenterMode.Camera">
            <summary>
            <para xml:lang="en">The session is <see cref="P:easyar.ARAssembly.Camera"/> centered.</para>
            <para xml:lang="en">You can move or rotate the <see cref="P:easyar.ARAssembly.Camera"/> and `target` will follow. You cannot manually change the transform of `target`. <see cref="P:easyar.ARSession.Origin"/> will also follow if any type of motion tracking is running, and its transform cannot be manually changed.</para>
            <para xml:lang="zh">当前session是以<see cref="P:easyar.ARAssembly.Camera"/>为中心的。</para>
            <para xml:lang="zh">你可以移动或旋转<see cref="P:easyar.ARAssembly.Camera"/>，`target` 会跟着动。在这个模式下你将无法手动控制 `target` 的transform。如果任意一种运动跟踪在运行，<see cref="P:easyar.ARSession.Origin"/>也会跟着动，它的transform也是不能手动控制的。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARCenterMode.SpecificTarget">
            <summary>
            <para xml:lang="en">The session will use <see cref="P:easyar.ARSession.SpecificTargetCenter"/> as center.</para>
            <para xml:lang="en">You can move or rotate the `target` and <see cref="P:easyar.ARAssembly.Camera"/> will follow. You cannot manually change the transform of <see cref="P:easyar.ARAssembly.Camera"/> in this mode. <see cref="P:easyar.ARSession.Origin"/> will also follow if any type of motion tracking is running, and its transform cannot be manually changed.</para>
            <para xml:lang="zh">当前session是以<see cref="P:easyar.ARSession.SpecificTargetCenter"/>为中心的。</para>
            <para xml:lang="zh">你可以移动或旋转 `target` ，<see cref="P:easyar.ARAssembly.Camera"/>会跟着动。在这个模式下你将无法手动控制<see cref="P:easyar.ARAssembly.Camera"/>的transform。如果任意一种运动跟踪在运行，<see cref="P:easyar.ARSession.Origin"/>也会跟着动，它的transform也是不能手动控制的。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARCenterMode.SessionOrigin">
            <summary>
            <para xml:lang="en">The session will use <see cref="P:easyar.ARSession.Origin"/> as center.</para>
            <para xml:lang="en">You can move or rotate the <see cref="P:easyar.ARSession.Origin"/> and the <see cref="P:easyar.ARAssembly.Camera"/> will follow. You cannot manually change the <see cref="P:easyar.ARAssembly.Camera"/>'s transform in this mode. If there are any `target` being tracked, it will also follow, and its transform cannot be manually changed.</para>
            <para xml:lang="zh">当前session是以<see cref="P:easyar.ARSession.Origin"/>为中心的。</para>
            <para xml:lang="zh">你可以移动或旋转<see cref="P:easyar.ARSession.Origin"/>，<see cref="P:easyar.ARAssembly.Camera"/>会跟着动。在这个模式下你将无法手动控制<see cref="P:easyar.ARAssembly.Camera"/>的transform。如果有任何 `target` 正在被跟踪，它也会跟着动，并且它的transform也是不能手动控制的。</para>
            </summary>
        </member>
        <member name="T:easyar.ARSession.ARHorizontalFlipMode">
            <summary>
            <para xml:lang="en">Horizontal flip rendering mode.</para>
            <para xml:lang="en">In a flip rendering mode, the camera image will be mirrored. And to display to tracked objects in the right way, it will affect the 3D object rendering as well, so there are two different ways of doing horizontal flip. Horizontal flip can only work in object sensing like image or object tracking algorithms.</para>
            <para xml:lang="zh">水平镜像渲染模式。</para>
            <para xml:lang="zh">在水平翻转状态下，相机图像将镜像显示，为确保物体跟踪正常，它同时会影响3D物体的渲染，因此提供两种不同的方式。水平翻转只能在物体感知（比如图像跟踪或物体跟踪）算法下工作。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARHorizontalFlipMode.None">
            <summary>
            <para xml:lang="en">No flip.</para>
            <para xml:lang="zh">不翻转。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARHorizontalFlipMode.World">
            <summary>
            <para xml:lang="en">Render with horizontal flip, the camera image will be flipped in rendering, the camera projection matrix will be changed to do flip rendering. Target scale will not change.</para>
            <para xml:lang="zh">水平镜像渲染，camera图像会镜像显示，camera投影矩阵会变化进行镜像渲染，target scale不会改变。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.ARHorizontalFlipMode.Target">
            <summary>
            <para xml:lang="en">Render with horizontal flip, the camera image will be flipped in rendering, the target scale will be changed to do flip rendering. Camera projection matrix will not change.</para>
            <para xml:lang="zh">水平镜像渲染，camera图像会镜像显示，target scale会改变进行镜像渲染，camera投影矩阵不会改变。</para>
            </summary>
        </member>
        <member name="T:easyar.ARSession.SessionState">
            <summary>
            <para xml:lang="en">The state of session.</para>
            <para xml:lang="zh">Session的状态。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.UnInitialized">
            <summary>
            <para xml:lang="en">Initialize is not called or initialize failed.</para>
            <para xml:lang="zh">未初始化或初始化失败。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.Assembling">
            <summary>
            <para xml:lang="en">In the process of assembling.</para>
            <para xml:lang="zh">在组装过程中。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.Broken">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.ARAssembly"/> fail to assemble or broken.</para>
            <para xml:lang="zh"><see cref="T:easyar.ARAssembly"/>组装失败或被破坏。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.Ready">
            <summary>
            <para xml:lang="en">Session is ready.</para>
            <para xml:lang="zh">Session已经准备好。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.Running">
            <summary>
            <para xml:lang="en">Session is running.</para>
            <para xml:lang="zh">Session在运行中。</para>
            </summary>
        </member>
        <member name="F:easyar.ARSession.SessionState.Paused">
            <summary>
            <para xml:lang="en">Session is paused.</para>
            <para xml:lang="en">Session will be paused when <see cref="T:easyar.FrameSource"/> generate empty frames, usually when device stop or application pause.</para>
            <para xml:lang="zh">Session暂停运行。</para>
            <para xml:lang="zh">Session会在<see cref="T:easyar.FrameSource"/>生成空帧数据的时候暂停，通常会发生在设备停止或应用暂停的时候。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.SpecificTargetCenter">
            <summary>
            <para xml:lang="en">Specified AR center object. <see cref="P:easyar.ARSession.CenterObject"/> will be set to this object when <see cref="F:easyar.ARSession.CenterMode"/> == <see cref="F:easyar.ARSession.ARCenterMode.SpecificTarget"/>. Modify at any time and takes effect immediately.</para>
            <para xml:lang="en">The object must contain one of the following component: <see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/> or <see cref="T:easyar.SpatialMapRootController"/>.</para>
            <para xml:lang="zh">手动指定的中心物体。<see cref="F:easyar.ARSession.CenterMode"/> == <see cref="F:easyar.ARSession.ARCenterMode.SpecificTarget"/>时<see cref="P:easyar.ARSession.CenterObject"/>将被设成这个物体。可随时修改，立即生效。</para>
            <para xml:lang="zh">该物体必须包含以下任一组件：<see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/>或<see cref="T:easyar.SpatialMapRootController"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.CenterObject">
            <summary>
            <para xml:lang="en">Center object this session is using in current frame.</para>
            <para xml:lang="en">This object represents an object or parent of object that do not move in Unity space. It can be <see cref="P:easyar.ARSession.Origin"/>, <see cref="P:easyar.ARAssembly.Camera"/> or some `target`. A `target` could be object containing one of the following component: <see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/> or <see cref="T:easyar.SpatialMapRootController"/>. While in the context of sparse spatial map or cloud spatial map, the exact center <see cref="T:UnityEngine.GameObject"/> is the localized map object under the root, and <see cref="P:easyar.ARSession.CenterObject"/> is parent of this object. See description of <see cref="T:easyar.ARSession.ARCenterMode"/> for more details.</para>
            <para xml:lang="zh">这个session在当前帧使用的中心物体。</para>
            <para xml:lang="zh">这个物体表示在Unity空间中不运动的物体或这个物体的父节点。它可能是 <see cref="P:easyar.ARSession.Origin"/>，<see cref="P:easyar.ARAssembly.Camera"/> 或某个 `target` 。 `Target` 可以是包含以下任一组件的物体：<see cref="T:easyar.TargetController"/>, <see cref="T:easyar.SparseSpatialMapRootController"/>或<see cref="T:easyar.SpatialMapRootController"/>。在使用稀疏空间地图和云空间地图的时候，实际的中心<see cref="T:UnityEngine.GameObject"/>是root节点下具体定位到的map物体，<see cref="P:easyar.ARSession.CenterObject"/> 是这个物体的父节点。更详细的说明可以查看<see cref="T:easyar.ARSession.ARCenterMode"/>的描述。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.Assembly">
            <summary>
            <para xml:lang="en">Assembly of AR components.</para>
            <para xml:lang="zh">AR组件的组装体。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.FrameCameraParameters">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.CameraParameters"/> from current frame.</para>
            <para xml:lang="zh">当前帧的<see cref="T:easyar.CameraParameters"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.AvailableCenterMode">
            <summary>
            <para xml:lang="en">Available center mode in the session.</para>
            <para xml:lang="zh">当前session可用的中心模式。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.Origin">
            <summary>
            <para xml:lang="en">Origin of session when one type of motion tracking is running.</para>
            <para xml:lang="zh">在任一运动跟踪功能运行时的session原点。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.TrackingStatus">
            <summary>
            <para xml:lang="en">Tracking status when one type of motion tracking is running.</para>
            <para xml:lang="zh">在任一运动跟踪功能运行时的运动跟踪状态。</para>
            </summary>
        </member>
        <member name="P:easyar.ARSession.State">
            <summary>
            <para xml:lang="en">The state of current session.</para>
            <para xml:lang="zh">当前session的状态。</para>
            </summary>
        </member>
        <member name="M:easyar.ARSession.ImageCoordinatesFromScreenCoordinates(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Transforms points from screen coordinate system ([0, 1]^2) to image coordinate system ([0, 1]^2). <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">从屏幕坐标系（[0, 1]^2）变换到图像坐标系（[0, 1]^2）。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameFilter">
            <summary>
            <para xml:lang="en">Abstracts frame filter, used when assemble, to run algorithms using input frame data.</para>
            <para xml:lang="zh">抽象frame filter，在组装时使用，使用frame输入数据运行算法。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameFilter.BufferRequirement">
            <summary>
            <para xml:lang="en">Camera buffers occupied in this component.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">当前组件占用camera buffer的数量。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.OnAssemble(easyar.ARSession)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.UpdateMotion(System.Double,easyar.MotionTrackingStatus,easyar.Matrix44F)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.TryGetCenter(UnityEngine.GameObject)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.UpdateTransform(UnityEngine.GameObject,UnityEngine.Pose)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.SetHFlip(easyar.ARSession.ARHorizontalFlipMode)">
            <summary>
            <para xml:lang="en">Set horizontal flip when using <see cref="F:easyar.ARSession.ARHorizontalFlipMode.Target"/> mode.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">在<see cref="F:easyar.ARSession.ARHorizontalFlipMode.Target"/>模式下设置镜像翻转。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.OnHFlipChange(System.Boolean)">
            <summary>
            <para xml:lang="en">Horizontal flip response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">水平翻转响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameFilter.IFeedbackFrameSink">
            <summary>
            <para xml:lang="en">Interface for feedback frame input port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">反馈帧输入端口接口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.IFeedbackFrameSink.FeedbackFrameSink">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Feedback frame input port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。反馈帧输入端口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameFilter.IInputFrameSink">
            <summary>
            <para xml:lang="en">Interface for input frame input port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">输入帧输入端口接口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.IInputFrameSink.InputFrameSink">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Input frame input port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。输入帧输入端口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameFilter.IOutputFrameSource">
            <summary>
            <para xml:lang="en">Interface for output frame output port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">输出帧输出端口接口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.IOutputFrameSource.OutputFrameSource">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Output frame output port.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。输出帧输出端口。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.IOutputFrameSource.OnResult(easyar.Optional{easyar.FrameFilterResult})">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Process tracking results.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。处理跟踪结果。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.TryGetCenterTarget(UnityEngine.GameObject)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameFilter.UpdateTargetTransform(UnityEngine.GameObject,UnityEngine.Pose)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.FramePlayer">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.InputFramePlayer"/> in the scene, providing a few extensions in the Unity environment. There is no need to use <see cref="T:easyar.InputFramePlayer"/> directly.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.InputFramePlayer"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。不需要直接使用<see cref="T:easyar.InputFramePlayer"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.FramePlayer.FilePathType">
            <summary>
            <para xml:lang="en">File path type. Set before OnEnable or <see cref="M:easyar.ARSession.Start"/>.</para>
            <para xml:lang="zh">路径类型。可以在OnEnable或<see cref="M:easyar.ARSession.Start"/>之前设置。</para>
            </summary>
        </member>
        <member name="F:easyar.FramePlayer.FilePath">
            <summary>
            <para xml:lang="en">File path. Set before OnEnable or <see cref="M:easyar.ARSession.Start"/>.</para>
            <para xml:lang="zh">文件路径。可以在OnEnable或<see cref="M:easyar.ARSession.Start"/>之前设置。</para>
            </summary>
        </member>
        <member name="F:easyar.FramePlayer.player">
            <senseapi/>
        </member>
        <member name="P:easyar.FramePlayer.IsCompleted">
            <summary>
            <para xml:lang="en"> Whether the playback is completed.</para>
            <para xml:lang="zh"> 是否已完成播放。</para>
            </summary>
        </member>
        <member name="P:easyar.FramePlayer.Length">
            <summary>
            <para xml:lang="en"> Total expected playback time. The unit is second.</para>
            <para xml:lang="zh"> 预期的总播放时间。单位为秒。</para>
            </summary>
        </member>
        <member name="P:easyar.FramePlayer.Time">
            <summary>
            <para xml:lang="en"> Current time played.</para>
            <para xml:lang="zh"> 已经播放的时间。</para>
            </summary>
        </member>
        <member name="P:easyar.FramePlayer.WorldRoot">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
        <member name="M:easyar.FramePlayer.Play">
            <summary>
            <para xml:lang="en">Start eif file playback.</para>
            <para xml:lang="zh">播放eif文件。</para>
            </summary>
        </member>
        <member name="M:easyar.FramePlayer.Stop">
            <summary>
            <para xml:lang="en">Stop eif file playback.</para>
            <para xml:lang="zh">停止播放eif文件。</para>
            </summary>
        </member>
        <member name="M:easyar.FramePlayer.Pause">
            <summary>
            <para xml:lang="en">Pause eif file playback.</para>
            <para xml:lang="zh">暂停播放eif文件。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameRecorder">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.InputFrameRecorder"/> in the scene, providing a few extensions in the Unity environment. There is no need to use <see cref="T:easyar.InputFrameRecorder"/> directly.</para>
            <para xml:lang="en"><see cref="P:UnityEngine.Behaviour.enabled"/> can be used to control record start/stop.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.InputFrameRecorder"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。不需要直接使用<see cref="T:easyar.InputFrameRecorder"/>。</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.Behaviour.enabled"/>可以控制录制开始和结束。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameRecorder.FilePathType">
            <summary>
            <para xml:lang="en">File path type. Set before OnEnable or <see cref="M:easyar.ARSession.Start"/>.</para>
            <para xml:lang="zh">路径类型。可以在OnEnable或<see cref="M:easyar.ARSession.Start"/>之前设置。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameRecorder.FilePath">
            <summary>
            <para xml:lang="en">File path. Set before OnEnable or <see cref="M:easyar.ARSession.Start"/>.</para>
            <para xml:lang="zh">文件路径。可以在OnEnable或<see cref="M:easyar.ARSession.Start"/>之前设置。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameRecorder.recorder">
            <senseapi/>
        </member>
        <member name="P:easyar.FrameRecorder.BufferRequirement">
            <summary>
            <para xml:lang="en">Camera buffers occupied in this component.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">当前组件占用camera buffer的数量。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameRecorder.OnAssemble(easyar.ARSession)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameRecorder.Output">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameRecorder.Input">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.FrameSource">
            <summary>
            <para xml:lang="en">Abstracts frame source, used when assemble, to provide input frame data to the algorithms.</para>
            <para xml:lang="zh">抽象frame源，在组装时使用，提供算法所需的frame输入数据。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameSource.sink">
            <summary>
            <para xml:lang="en">Input port connected.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">连接着的输入端口。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameSource.arSession">
            <summary>
            <para xml:lang="en">Current connected ARSession.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">当前连接的ARSession。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameSource.bufferCapacity">
            <summary>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="F:easyar.FrameSource.allCenterMode">
            <summary>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.IsAvailable">
            <summary>
            <para xml:lang="en">If the frame source is available.</para>
            <para xml:lang="en">If the value equals null, <see cref="M:easyar.FrameSource.CheckAvailability"/> must be called and the value can be accessed after <see cref="T:UnityEngine.Coroutine"/> finish. This property is used by <see cref="T:easyar.ARComponentPicker"/> when picking frame source.</para>
            <para xml:lang="zh">当前frame source是否可用。</para>
            <para xml:lang="zh">如果数值等于null，需要调用<see cref="M:easyar.FrameSource.CheckAvailability"/>，数值将在<see cref="T:UnityEngine.Coroutine"/>结束后可以访问。这个属性会在<see cref="T:easyar.ARComponentPicker"/>选择frame source的时候使用。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.AvailableCenterMode">
            <summary>
            <para xml:lang="en">Available center mode of the frame source.</para>
            <para xml:lang="zh">该frame source可以使用的中心模式。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.IsHMD">
            <summary>
            <para xml:lang="en">If the frame source represent AR Eyewears.</para>
            <para xml:lang="en">Some frame filter may work different on eyewears.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">当前frame source是否是AR眼镜。</para>
            <para xml:lang="zh">部分frame filter在眼镜上运行会有不同。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.BufferCapacity">
            <summary>
            <para xml:lang="en">Device buffer capacity.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">设备缓冲容量。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.Camera">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Camera"/> used by the frame source in an <see cref="T:easyar.ARSession"/>.</para>
            <para xml:lang="en">Each type of frame source has its own method to check if the camera is usable, and will reject value set if the camera is not usable by the frame source. This property is used by <see cref="T:easyar.ARComponentPicker"/> when picking frame source to determine if the frame source is available, and some frame source will automatic pick a usable <see cref="T:UnityEngine.Camera"/> from active objects in the scene in the process if the value is not set. You can set this value to a usable <see cref="T:UnityEngine.Camera"/> before session start. The value cannot be changed after <see cref="T:easyar.ARSession"/> is ready if the frame source is selected in the session.</para>
            <para xml:lang="zh">在一个<see cref="T:easyar.ARSession"/>中被该frame source使用的<see cref="T:UnityEngine.Camera"/>。</para>
            <para xml:lang="zh">每种frame source都有自己的方法来检查camera是否可用，设置不可用的camera将会被拒绝。这个属性会在<see cref="T:easyar.ARComponentPicker"/> 选择frame source时用来判断frame source是否可用。在这个过程中，如果数值没有设置，一些frame source会从场景中active的物体中自动选择可以使用的<see cref="T:UnityEngine.Camera"/>。你可以在session start前设置可用的<see cref="T:UnityEngine.Camera"/>。如果这个frame source被<see cref="T:easyar.ARSession"/>选用，这个数值将在session ready后无法修改。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.IsCameraUnderControl">
            <summary>
            <para xml:lang="en">If <see cref="P:easyar.FrameSource.Camera"/> transform and projection should be controlled by <see cref="T:easyar.ARSession"/> .</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh"><see cref="P:easyar.FrameSource.Camera"/> transform 和投影矩阵是否需要被<see cref="T:easyar.ARSession"/>控制。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="P:easyar.FrameSource.Origin">
            <summary>
            <para xml:lang="en">Origin of <see cref="T:easyar.ARSession"/> if the frame source can output motion tracking data.</para>
            <para xml:lang="en">Each type of motion tracking frame source has its own method to set the origin object containing some specific component. Some frame source will automatic pick a usable object from active objects in the scene or generate an object if the value is not set.</para>
            <para xml:lang="zh"><see cref="T:easyar.ARSession"/>的原点，如果frame source可以输出运动跟踪数据。</para>
            <para xml:lang="zh">每种运动跟踪frame source都有自己的方法来设置包含特定组件的原点物体。如果原点未设置，一些frame source会从场景中active的物体中自动选择可以使用的物体或创建一个新的物体。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameSource.Connect(easyar.InputFrameSink)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Connect input port.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">通常只在内部组装时使用。连接输入端口。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameSource.OnAssemble(easyar.ARSession)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Assemble response.</para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">通常只在内部组装时使用。组装响应方法。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameSource.CheckAvailability">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Coroutine"/> to check frame source availability when <see cref="P:easyar.FrameSource.IsAvailable"/> equals null.</para>
            <para xml:lang="zh"><see cref="P:easyar.FrameSource.IsAvailable"/>等于null时用于检查frame source是否可用的<see cref="T:UnityEngine.Coroutine"/>。</para>
            </summary>
        </member>
        <member name="M:easyar.FrameSource.PickCamera">
            <summary>
            <para xml:lang="en">Pick a usable <see cref="T:UnityEngine.Camera"/>. Used by <see cref="T:easyar.ARComponentPicker"/> when picking frame source </para>
            <para xml:lang="en" access="internal">WARNING: use this member inside frame source only when defining a new custom camera.</para>
            <para xml:lang="zh">选择可以使用的<see cref="T:UnityEngine.Camera"/>。会在<see cref="T:easyar.ARComponentPicker"/> 选择frame source时使用。</para>
            <para xml:lang="zh" access="internal">警告：仅在定义新的自定义相机时在frame source内部使用这个成员。</para>
            </summary>
        </member>
        <member name="T:easyar.RenderCameraController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:UnityEngine.Camera"/> in the scene. The <see cref="T:UnityEngine.Camera"/> projection is set to fit real world <see cref="T:easyar.CameraDevice"/> or other optical device.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:UnityEngine.Camera"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，<see cref="T:UnityEngine.Camera"/> 投影矩阵会反映现实世界中的<see cref="T:easyar.CameraDevice"/>或其它光学设备。</para>
            </summary>
        </member>
        <member name="T:easyar.TargetController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.Target"/> in the scene, providing a few extensions in the Unity environment.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.Target"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。</para>
            </summary>
        </member>
        <member name="F:easyar.TargetController.ActiveControl">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>. If you are willing to control <see cref="P:UnityEngine.GameObject.active"/> or there are other components controlling <see cref="P:UnityEngine.GameObject.active"/>, make sure to set it to <see cref="F:easyar.TargetController.ActiveControlStrategy.None"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。如果你打算自己控制<see cref="P:UnityEngine.GameObject.active"/>或是有其它组件在控制<see cref="P:UnityEngine.GameObject.active"/>，需要设为<see cref="F:easyar.TargetController.ActiveControlStrategy.None"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.TargetController.HorizontalFlip">
            <summary>
            <para xml:lang="en">Horizontal flip control, usually for internal use.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">水平翻转控制，一般为内部使用。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="E:easyar.TargetController.TargetFound">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.Target"/> found event.</para>
            <para xml:lang="zh"><see cref="T:easyar.Target"/>找到的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.TargetController.TargetLost">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.Target"/> lost event.</para>
            <para xml:lang="zh"><see cref="T:easyar.Target"/>丢失的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.TargetController.ActiveControlStrategy">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。</para>
            </summary>
        </member>
        <member name="F:easyar.TargetController.ActiveControlStrategy.HideWhenNotTracking">
            <summary>
            <para xml:lang="en">Active is true when the target is tracked, false when not tracked.</para>
            <para xml:lang="zh">当没有被识别跟踪时Active为false，当被跟踪识别时Active为true。</para>
            </summary>
        </member>
        <member name="F:easyar.TargetController.ActiveControlStrategy.HideBeforeFirstFound">
            <summary>
            <para xml:lang="en">False before the fist <see cref="E:easyar.TargetController.TargetFound"/> event, then true.</para>
            <para xml:lang="zh">在第一次<see cref="E:easyar.TargetController.TargetFound"/>事件之前Active为false，之后为true。</para>
            </summary>
        </member>
        <member name="F:easyar.TargetController.ActiveControlStrategy.None">
            <summary>
            <para xml:lang="en">Do not control <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh">不控制<see cref="P:UnityEngine.GameObject.active"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.TargetController.IsTracked">
            <summary>
            <para xml:lang="en">Is the target being tracked at the moment.</para>
            <para xml:lang="zh">当前target是否被跟踪。</para>
            </summary>
        </member>
        <member name="P:easyar.TargetController.IsLoaded">
            <summary>
            <para xml:lang="en">Is the target loaded by a tracker.</para>
            <para xml:lang="zh">是否被一个trakcer加载。</para>
            </summary>
        </member>
        <member name="M:easyar.TargetController.OnTracking(System.Boolean)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Process tracking event.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。处理跟踪事件。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.TargetController.OnTracking">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Process tracking event.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。处理跟踪事件。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.WorldRootController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls the world root in the scene.</para>
            <para xml:lang="en">The world root is a virtual node, representing the relative node when the camera moves in a motion tracking system. It will be automatically generated to be the origin of the global coordinate system when needed if not manually set in the scene.</para>
            <para xml:lang="zh">在场景中控制世界根节点的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            <para xml:lang="zh">世界根节点是一个虚拟的节点，它表示在运动跟踪的系统中，camera移动的相对节点。如果场景中没有手动设置这个节点，它将在被需要的时候自动被设置为全局坐标系的原点。</para>
            </summary>
        </member>
        <member name="F:easyar.WorldRootController.ActiveControl">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>. If you are willing to control <see cref="P:UnityEngine.GameObject.active"/> or there are other components controlling <see cref="P:UnityEngine.GameObject.active"/>, make sure to set it to <see cref="F:easyar.WorldRootController.ActiveControlStrategy.None"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。如果你打算自己控制<see cref="P:UnityEngine.GameObject.active"/>或是有其它组件在控制<see cref="P:UnityEngine.GameObject.active"/>，需要设为<see cref="F:easyar.WorldRootController.ActiveControlStrategy.None"/>。</para>
            </summary>
        </member>
        <member name="E:easyar.WorldRootController.TrackingStatusChanged">
            <summary>
            <para xml:lang="en">Motion tracking status change event.</para>
            <para xml:lang="zh">跟踪状态改变的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.WorldRootController.ActiveControlStrategy">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。</para>
            </summary>
        </member>
        <member name="F:easyar.WorldRootController.ActiveControlStrategy.HideWhenNotTracking">
            <summary>
            <para xml:lang="en">Active is false when the motion tracking status is not tracking, true otherwise.</para>
            <para xml:lang="zh">当运动跟踪状态是未跟踪时Active为false，其它情况Active为true。</para>
            </summary>
        </member>
        <member name="F:easyar.WorldRootController.ActiveControlStrategy.HideBeforeTrackingStart">
            <summary>
            <para xml:lang="en">False before the motion tracking status turns to a tracking status, then true.</para>
            <para xml:lang="zh">在运动跟踪状态第一次不是未跟踪前Active为false，之后为true。</para>
            </summary>
        </member>
        <member name="F:easyar.WorldRootController.ActiveControlStrategy.None">
            <summary>
            <para xml:lang="en">Do not control <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh">不控制<see cref="P:UnityEngine.GameObject.active"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.WorldRootController.TrackingStatus">
            <summary>
            <para xml:lang="en">Motion tracking status at the moment.</para>
            <para xml:lang="zh">当前运动跟踪状态。</para>
            </summary>
        </member>
        <member name="M:easyar.WorldRootController.OnTracking(easyar.MotionTrackingStatus)">
            <summary>
            <para xml:lang="en">Usually only for internal assemble use. Process tracking event.</para>
            <para xml:lang="en" access="internal">WARNING: Designed for deep customize only. Do not use this interface unless you are writing a customized AR component. Accessibility Level may change in future.</para>
            <para xml:lang="zh">通常只在内部组装时使用。处理跟踪事件。</para>
            <para xml:lang="zh" access="internal">警告：仅为深度定制设计。除非在写自定义AR组件，否则不要使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.CloudSpatialMapLocalizerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.CloudLocalizer"/> in the scene, providing a few extensions in the Unity environment. There is no need to use <see cref="T:easyar.CloudLocalizer"/> directly.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.CloudLocalizer"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。不需要直接使用<see cref="T:easyar.CloudLocalizer"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.CloudSpatialMapLocalizerFrameFilter.Accelerometer">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.UseGlobalServiceConfig">
            <summary>
            <para xml:lang="en">Use global service config or not. The global service config can be changed on the inspector after click Unity menu EasyAR -> Sense -> Configuration.</para>
            <para xml:lang="zh">是否使用全局服务器配置。全局配置可以点击Unity菜单EasyAR -> Sense -> Configuration后在属性面板里面进行填写。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.ServiceConfig">
            <summary>
            <para xml:lang="en">Service config when <see cref="F:easyar.CloudSpatialMapLocalizerFrameFilter.UseGlobalServiceConfig"/> == false, only valid for this object.</para>
            <para xml:lang="zh"><see cref="F:easyar.CloudSpatialMapLocalizerFrameFilter.UseGlobalServiceConfig"/> == false时使用的服务器配置，只对该物体有效。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.cloudLocalizer">
            <senseapi/>
        </member>
        <member name="P:easyar.CloudSpatialMapLocalizerFrameFilter.MapHolder">
            <summary>
            <para xml:lang="en">The map holder which holds and manages maps in the scene.</para>
            <para xml:lang="zh">持有地图的组件，在场景中持有并管理地图。</para>
            </summary>
        </member>
        <member name="P:easyar.CloudSpatialMapLocalizerFrameFilter.LocationManager">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="P:easyar.CloudSpatialMapLocalizerFrameFilter.RealTimeCoordinateTransform">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudSpatialMapLocalizerFrameFilter.ResetRealTimeCoordinateTransform">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudSpatialMapLocalizerFrameFilter.Resolve(easyar.Optional{easyar.CloudSpatialMapLocalizerFrameFilter.Input},System.Action{easyar.InputFrame},System.Action{easyar.CloudLocalizeStatus,System.String})">
            <summary>
            <para xml:lang="en">Send localization request.</para>
            <para xml:lang="zh">发送定位请求。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudSpatialMapLocalizerFrameFilter.ResolveRaw(easyar.Optional{easyar.CloudSpatialMapLocalizerFrameFilter.Input},System.Action{easyar.InputFrame},System.Action{easyar.Optional{easyar.CloudLocalizeResult},System.String})">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudSpatialMapLocalizerFrameFilter.SetMessage(System.String)">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="M:easyar.CloudSpatialMapLocalizerFrameFilter.ResetResolve">
            <summary>
            <para xml:lang="en" access="internal">WARNING: Designed for internal tools only. Do not use this interface in your application. Accessibility Level may change in future.</para>
            <para xml:lang="zh" access="internal">警告：仅用于内部工具。不要在应用开发中使用这个接口。可访问级别可能会在未来产生变化。</para>
            </summary>
        </member>
        <member name="T:easyar.CloudSpatialMapLocalizerFrameFilter.CloudLocalizerServiceConfig">
            <summary>
            <para xml:lang="en">Service config for <see cref="T:easyar.CloudLocalizer"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.CloudLocalizer"/>服务器配置。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.CloudLocalizerServiceConfig.ServerAddress">
            <summary>
            <para xml:lang="en">Server Address, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">服务器地址，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.CloudLocalizerServiceConfig.APIKey">
            <summary>
            <para xml:lang="en">API Key, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Key，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.CloudLocalizerServiceConfig.APISecret">
            <summary>
            <para xml:lang="en">API Secret, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Secret，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.CloudLocalizerServiceConfig.CloudLocalizerAppID">
            <summary>
            <para xml:lang="en">Cloud Localizer AppID, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">云定位AppID，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="T:easyar.CloudSpatialMapLocalizerFrameFilter.Input">
            <summary>
            <para xml:lang="en">Input data for <see cref="M:easyar.CloudSpatialMapLocalizerFrameFilter.Resolve(easyar.Optional{easyar.CloudSpatialMapLocalizerFrameFilter.Input},System.Action{easyar.InputFrame},System.Action{easyar.CloudLocalizeStatus,System.String})"/>.</para>
            <para xml:lang="zh"><see cref="M:easyar.CloudSpatialMapLocalizerFrameFilter.Resolve(easyar.Optional{easyar.CloudSpatialMapLocalizerFrameFilter.Input},System.Action{easyar.InputFrame},System.Action{easyar.CloudLocalizeStatus,System.String})"/>的输入数据。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.Input.LocationProvider">
            <summary>
            <para xml:lang="en">GPS data provider. Optional, <see cref="P:easyar.CloudSpatialMapLocalizerFrameFilter.LocationManager"/> will be used if null. Not required when localize on mobile application. Use this when localize on PC when using eif files.</para>
            <para xml:lang="zh">GPS数据提供函数。可选，如果是null，会使用<see cref="P:easyar.CloudSpatialMapLocalizerFrameFilter.LocationManager"/>。在移动应用上非必须输入。在PC上使用eif数据定位的时候使用。</para>
            </summary>
        </member>
        <member name="F:easyar.CloudSpatialMapLocalizerFrameFilter.Input.AccelerationProvider">
            <summary>
            <para xml:lang="en">Acceleration data provider. Optional, <see cref="P:easyar.CloudSpatialMapLocalizerFrameFilter.Accelerometer"/> will be used if null. Not required when localize on mobile phones or officially supported eyewears. Use this when localize on PC when using eif files, or on some special devices like eyewears where system default accelerometer does not is not accelerometer on device.</para>
            <para xml:lang="zh">加速度计数据提供函数。可选，如果是null，会使用<see cref="P:easyar.CloudSpatialMapLocalizerFrameFilter.Accelerometer"/>。在手机或官方支持的眼镜上非必须输入。在PC上使用eif数据定位的时候使用，或在一些系统默认加速度计不是设备加速度计时，比如眼镜等特殊设备上使用。</para>
            </summary>
        </member>
        <member name="T:easyar.DenseSpatialMapBlockController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls map mesh blocks generated by <see cref="T:easyar.DenseSpatialMap"/> in the scene.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.DenseSpatialMap"/>生成的地图网格块的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapBlockController.Info">
            <summary>
            <para xml:lang="en">Map mesh block information.</para>
            <para xml:lang="zh">地图网格块信息。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="T:easyar.DenseSpatialMapBuilderFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.DenseSpatialMap"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.DenseSpatialMapBuilderFrameFilter.Builder"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.DenseSpatialMap"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.DenseSpatialMapBuilderFrameFilter.Builder"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapBuilderFrameFilter.Builder">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.DenseSpatialMapBuilderFrameFilter.MapMeshMaterial">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Material"/> for map mesh render. Mesh transparency is not enabled in URP by now when using default material.</para>
            <para xml:lang="zh">用于渲染Map网格的<see cref="T:UnityEngine.Material"/>。在当前版本中，使用URP时默认材质的透明显示未开启。</para>
            </summary>
        </member>
        <member name="F:easyar.DenseSpatialMapBuilderFrameFilter.BlockUpdateLimitation">
            <summary>
            <para xml:lang="en">The max number of mesh blocks to be updated each frame. Decrease this value if the mesh update slows rendering.</para>
            <para xml:lang="zh">每帧更新网格块的最大数量。如果网格更新使渲染变慢可以降低这个数值。</para>
            </summary>
        </member>
        <member name="E:easyar.DenseSpatialMapBuilderFrameFilter.MapCreate">
            <summary>
            <para xml:lang="en">Event when a new mesh block created.</para>
            <para xml:lang="zh">新网格块创建的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.DenseSpatialMapBuilderFrameFilter.MapUpdate">
            <summary>
            <para xml:lang="en">Event when mesh block updates.</para>
            <para xml:lang="zh">网格块更新的事件。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapBuilderFrameFilter.RenderMesh">
            <summary>
            <para xml:lang="en">Mesh render on/off.</para>
            <para xml:lang="zh">是否渲染网格。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapBuilderFrameFilter.MeshColor">
            <summary>
            <para xml:lang="en">Mesh color.</para>
            <para xml:lang="zh">网格颜色。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapBuilderFrameFilter.MeshBlocks">
            <summary>
            <para xml:lang="en">All mesh blocks.</para>
            <para xml:lang="zh">当前所有网格块。</para>
            </summary>
        </member>
        <member name="T:easyar.DenseSpatialMapDepthRenderer">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls depth data render <see cref="T:easyar.DenseSpatialMap"/> in the scene. It does not work in URP for now.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.DenseSpatialMap"/>深度数据渲染的<see cref="T:UnityEngine.MonoBehaviour"/>。在当前版本中URP下不工作。</para>
            </summary>
        </member>
        <member name="F:easyar.DenseSpatialMapDepthRenderer.Shader">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Shader"/> to render depth texture.</para>
            <para xml:lang="zh">用于深度渲染的<see cref="T:UnityEngine.Shader"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapDepthRenderer.RenderDepthCamera">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Camera"/> used to render depth texture.</para>
            <para xml:lang="zh">用于深度渲染的<see cref="T:UnityEngine.Camera"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.DenseSpatialMapDepthRenderer.MapMeshMaterial">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.Material"/> used to render mesh.</para>
            <para xml:lang="zh">用于渲染网格的<see cref="T:UnityEngine.Material"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapActiveController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls the sparse spatial map root <see cref="P:UnityEngine.GameObject.active"/> strategy in the scene.</para>
            <para xml:lang="zh">在场景中控制稀疏空间地图根节点<see cref="P:UnityEngine.GameObject.active"/>策略的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapActiveController.ActiveControl">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>. If you are willing to control <see cref="P:UnityEngine.GameObject.active"/> or there are other components controlling <see cref="P:UnityEngine.GameObject.active"/>, make sure to set it to <see cref="F:easyar.SparseSpatialMapActiveController.Strategy.None"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。如果你打算自己控制<see cref="P:UnityEngine.GameObject.active"/>或是有其它组件在控制<see cref="P:UnityEngine.GameObject.active"/>，需要设为<see cref="F:easyar.SparseSpatialMapActiveController.Strategy.None"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapActiveController.Strategy">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapActiveController.Strategy.HideBeforeFound">
            <summary>
            <para xml:lang="en">False before the fist time a map is localized, then true.</para>
            <para xml:lang="zh">在第一次有地图定位到之前Active为false，之后为true。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapActiveController.Strategy.None">
            <summary>
            <para xml:lang="en">Do not control <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh">不控制<see cref="P:UnityEngine.GameObject.active"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls the map generated from <see cref="T:easyar.SparseSpatialMap"/> in the scene.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.SparseSpatialMap"/>生成的地图的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.MapInfo">
            <summary>
            <para xml:lang="en">Map information. Accessible after MapInfoAvailable event.</para>
            <para xml:lang="zh">地图信息。可以在MapInfoAvailable event之后访问。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.PointCloudParticleSystem">
            <summary>
            <para xml:lang="en">The <see cref="T:UnityEngine.ParticleSystem"/> used for point cloud rendering.</para>
            <para xml:lang="zh">渲染点云的<see cref="T:UnityEngine.ParticleSystem"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ActiveControl">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>. If you are willing to control <see cref="P:UnityEngine.GameObject.active"/> or there are other components controlling <see cref="P:UnityEngine.GameObject.active"/>, make sure to set it to <see cref="F:easyar.SparseSpatialMapController.ActiveControlStrategy.None"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。如果你打算自己控制<see cref="P:UnityEngine.GameObject.active"/>或是有其它组件在控制<see cref="P:UnityEngine.GameObject.active"/>，需要设为<see cref="F:easyar.SparseSpatialMapController.ActiveControlStrategy.None"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.SourceType">
            <summary>
            <para xml:lang="en">Map data source.</para>
            <para xml:lang="zh">Map数据来源。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.MapManagerSource">
            <summary>
            <para xml:lang="en">MapManager source for map creation. Valid when <see cref="F:easyar.SparseSpatialMapController.SourceType"/> == <see cref="F:easyar.SparseSpatialMapController.DataSource.MapManager"/>.</para>
            <para xml:lang="zh">创建map的MapManager来源。在<see cref="F:easyar.SparseSpatialMapController.SourceType"/> == <see cref="F:easyar.SparseSpatialMapController.DataSource.MapManager"/>的时候有效。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.MapInfoSource">
            <summary>
            <para xml:lang="en">MapInfo source for map creation. Valid when <see cref="F:easyar.SparseSpatialMapController.SourceType"/> == <see cref="F:easyar.SparseSpatialMapController.DataSource.MapInfo"/>.</para>
            <para xml:lang="zh">创建map的MapInfo来源。在<see cref="F:easyar.SparseSpatialMapController.SourceType"/> == <see cref="F:easyar.SparseSpatialMapController.DataSource.MapInfo"/>的时候有效。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapInfoAvailable">
            <summary>
            <para xml:lang="en">Event when <see cref="P:easyar.SparseSpatialMapController.MapInfo"/> can be used.</para>
            <para xml:lang="zh"><see cref="P:easyar.SparseSpatialMapController.MapInfo"/> 可以使用的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapLocalized">
            <summary>
            <para xml:lang="en">Map localized event.</para>
            <para xml:lang="zh">Map 定位到的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapStopLocalize">
            <summary>
            <para xml:lang="en">Stop map localization event.</para>
            <para xml:lang="zh">Map停止定位的事件。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapLoad">
            <summary>
            <para xml:lang="en">Map load finish event. The bool value indicates the load success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map加载完成的事件。bool值表示加载是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapUnload">
            <summary>
            <para xml:lang="en">Map unload finish event. The bool value indicates the unload success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map卸载完成的事件。bool值表示卸载是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapController.MapHost">
            <summary>
            <para xml:lang="en">Map finish create and upload event. The bool value indicates success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map创建上传完成的事件。bool值表示是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController.ActiveControlStrategy">
            <summary>
            <para xml:lang="en">Strategy to control the <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh"><see cref="P:UnityEngine.GameObject.active"/>的控制策略。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ActiveControlStrategy.HideBeforeLocalized">
            <summary>
            <para xml:lang="en">False before the fist <see cref="E:easyar.SparseSpatialMapController.MapLocalized"/> event, then true.</para>
            <para xml:lang="zh">在第一次<see cref="E:easyar.SparseSpatialMapController.MapLocalized"/>事件之前Active为false，之后为true。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ActiveControlStrategy.HideWhenNotLocalizing">
            <summary>
            <para xml:lang="en">Active is true when the map is localized, false when not localized.</para>
            <para xml:lang="zh">当没有被定位到时Active为false，当被定位到时Active为true。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ActiveControlStrategy.None">
            <summary>
            <para xml:lang="en">Do not control <see cref="P:UnityEngine.GameObject.active"/>.</para>
            <para xml:lang="zh">不控制<see cref="P:UnityEngine.GameObject.active"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController.DataSource">
            <summary>
            <para xml:lang="en">Map data source type.</para>
            <para xml:lang="zh">地图数据来源类型。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.DataSource.MapBuilder">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.SparseSpatialMap"/> MapBuilder.</para>
            <para xml:lang="zh"><see cref="T:easyar.SparseSpatialMap"/> MapBuilder。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.DataSource.MapManager">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.SparseSpatialMapManager"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.SparseSpatialMapManager"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.DataSource.MapInfo">
            <summary>
            <para xml:lang="en"><see cref="T:easyar.SparseSpatialMapController.SparseSpatialMapInfo"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.SparseSpatialMapController.SparseSpatialMapInfo"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.MapWorker">
            <summary>
            <para xml:lang="en">The <see cref="T:easyar.SparseSpatialMapWorkerFrameFilter"/> which loads the map after <see cref="E:easyar.SparseSpatialMapController.MapInfoAvailable"/>. When set to null, the map will be unloaded from MapWorker previously set. Modify at any time and takes effect immediately.</para>
            <para xml:lang="zh">在<see cref="E:easyar.SparseSpatialMapController.MapInfoAvailable"/>之后加载target的<see cref="T:easyar.SparseSpatialMapWorkerFrameFilter"/>。如果设为null，map将会被从之前设置的MapWorker中卸载。可随时修改，立即生效。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.PointCloudParticleParameter">
            <summary>
            <para xml:lang="en">Parameters for point cloud particles rendering.</para>
            <para xml:lang="zh">渲染点云粒子的参数。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.PointCloud">
            <summary>
            <para xml:lang="en">Point cloud data.</para>
            <para xml:lang="zh">点云数据。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.ShowPointCloud">
            <summary>
            <para xml:lang="en">Show or hide point cloud.</para>
            <para xml:lang="zh">显示或隐藏点云。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapController.IsLocalizing">
            <summary>
            <para xml:lang="en">Is the map being localized at the moment.</para>
            <para xml:lang="zh">当前map是否在定位中。</para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapController.HitTest(UnityEngine.Vector2)">
            <summary>
            <para xml:lang="en">Perform hit test against the point cloud. The results are returned sorted by their distance to the camera in ascending order. <paramref name="pointInView"/> should be normalized to [0, 1]^2.</para>
            <para xml:lang="zh">在当前点云中进行Hit Test，得到距离相机从近到远一条射线上的n（n>=0）个位置坐标。<paramref name="pointInView"/> 需要被归一化到[0, 1]^2。</para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapController.Host(System.String,easyar.Optional{easyar.Image})">
            <summary>
            <para xml:lang="en">Create and upload map. <paramref name="name"/> is the map name and <paramref name="preview"/> is the optional map preview image.</para>
            <para xml:lang="zh">创建和上传Map。<paramref name="name"/>为地图的名字，<paramref name="preview"/>是可选的map预览图 。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController.SparseSpatialMapInfo">
            <summary>
            <para xml:lang="en">Sparse map information.</para>
            <para xml:lang="zh">稀疏地图信息。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.SparseSpatialMapInfo.ID">
            <summary>
            <para xml:lang="en">Sparse map ID.</para>
            <para xml:lang="zh">稀疏地图的ID。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.SparseSpatialMapInfo.Name">
            <summary>
            <para xml:lang="en">Sparse map name.</para>
            <para xml:lang="zh">稀疏地图的名字。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController.MapManagerSourceData">
            <summary>
            <para xml:lang="en">MapManager source for map creation.</para>
            <para xml:lang="zh">创建map的MapManager来源。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.MapManagerSourceData.ID">
            <summary>
            <para xml:lang="en">Sparse map ID.</para>
            <para xml:lang="zh">稀疏地图的ID。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.MapManagerSourceData.Name">
            <summary>
            <para xml:lang="en">Sparse map name.</para>
            <para xml:lang="zh">稀疏地图的名字。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapController.ParticleParameter">
            <summary>
            <para xml:lang="en">Parameters for point cloud particles rendering.</para>
            <para xml:lang="zh">渲染点云粒子的参数。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ParticleParameter.StartColor">
            <summary>
            <para xml:lang="en">Particles start color.</para>
            <para xml:lang="zh">粒子初始颜色。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ParticleParameter.StartSize">
            <summary>
            <para xml:lang="en">Particles start size.</para>
            <para xml:lang="zh">粒子初始大小。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ParticleParameter.StartLifetime">
            <summary>
            <para xml:lang="en">Particles start life time.</para>
            <para xml:lang="zh">粒子初始生存时间。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapController.ParticleParameter.RemainingLifetime">
            <summary>
            <para xml:lang="en">Particles remaining life time.</para>
            <para xml:lang="zh">粒子剩余生存时间。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapHolder">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which holds and manages sparse spatial maps generated from <see cref="T:easyar.SparseSpatialMap"/> in the scene.</para>
            <para xml:lang="zh">在场景中持有并管理<see cref="T:easyar.SparseSpatialMap"/>生成的稀疏空间地图的<see cref="T:UnityEngine.MonoBehaviour"/>。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapHolder.SparseSpatialMapRoot">
            <summary>
            <para xml:lang="en">The parent object of all sparse spatial maps, will be generated automatically if not set.</para>
            <para xml:lang="zh">所有稀疏空间地图的父节点，如果没设置，将会自动生成。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapHolder.MapRoot">
            <summary>
            <para xml:lang="en">The parent object of all sparse spatial maps.</para>
            <para xml:lang="zh">所有稀疏空间地图的父节点。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapHolder.Maps">
            <summary>
            <para xml:lang="en">The sparse spatial maps loaded.</para>
            <para xml:lang="zh">所有已经加载的稀疏空间地图。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapRootController">
            <summary>
            <para xml:lang="en">Parent object of all sparse spatial maps generated from <see cref="T:easyar.SparseSpatialMap"/> in the scene.</para>
            <para xml:lang="zh">在场景中<see cref="T:easyar.SparseSpatialMap"/>生成的所有稀疏空间地图的父节点。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapRootController.MapFound">
            <summary>
            <para xml:lang="en">New map localized event.</para>
            <para xml:lang="zh">一个新地图定位到的事件。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapWorkerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.SparseSpatialMap"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Builder"/>, <see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Localizer"/> or <see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Manager"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.SparseSpatialMap"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Builder"/>、<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Localizer"/>或<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.Manager"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.Builder">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible when building map after Awake if available.</para>
            <para xml:lang="en">Use when building a map (<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.WorkingMode"/> == <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Build"/>).</para>
            <para xml:lang="zh">EasyAR Sense API，在地图构建时，如果功能可以使用，可以在Awake之后访问。</para>
            <para xml:lang="zh">在地图构建时（<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.WorkingMode"/> == <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Build"/>）使用。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.Localizer">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="en">Use when localizing a map (<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.WorkingMode"/> == <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Localize"/>).</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            <para xml:lang="zh">在地图定位时（<see cref="P:easyar.SparseSpatialMapWorkerFrameFilter.WorkingMode"/> == <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Localize"/>）使用。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.Manager">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="en">Use when building and uploading a map.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            <para xml:lang="zh">在地图构建和上传时使用。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.LocalizerConfig">
            <summary>
            <para xml:lang="en">Map localizer config used before every start (<see cref="M:easyar.SparseSpatialMapWorkerFrameFilter.OnEnable"/>).</para>
            <para xml:lang="zh">地图定位配置，在每次启动（<see cref="M:easyar.SparseSpatialMapWorkerFrameFilter.OnEnable"/>）前使用。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.UseGlobalServiceConfig">
            <summary>
            <para xml:lang="en">Use global service config or not. The global service config can be changed on the inspector after click Unity menu EasyAR -> Sense -> Configuration.</para>
            <para xml:lang="zh">是否使用全局服务器配置。全局配置可以点击Unity菜单EasyAR -> Sense -> Configuration后在属性面板里面进行填写。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.ServiceConfig">
            <summary>
            <para xml:lang="en">Service config when <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.UseGlobalServiceConfig"/> == false, only valid for this object.</para>
            <para xml:lang="zh"><see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.UseGlobalServiceConfig"/> == false时使用的服务器配置，只对该物体有效。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapWorkerFrameFilter.MapLoad">
            <summary>
            <para xml:lang="en">Map load finish event. The bool value indicates the load success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map加载完成的事件。bool值表示加载是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapWorkerFrameFilter.MapUnload">
            <summary>
            <para xml:lang="en">Map unload finish event. The bool value indicates the unload success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map卸载完成的事件。bool值表示卸载是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="E:easyar.SparseSpatialMapWorkerFrameFilter.MapHost">
            <summary>
            <para xml:lang="en">Map create and upload finish event. The bool value indicates the create and upload success or not. The string value is the error message when fail.</para>
            <para xml:lang="zh">Map创建及上传完成的事件。bool值表示创建及上传是否成功。string值表示出错时的错误信息。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapWorkerFrameFilter.Mode">
            <summary>
            <para xml:lang="en">Working mode.</para>
            <para xml:lang="zh">工作模式。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Build">
            <summary>
            <para xml:lang="en">Map building mode.</para>
            <para xml:lang="zh">建图模式。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Localize">
            <summary>
            <para xml:lang="en">Map localizing mode.</para>
            <para xml:lang="zh">定位模式。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.WorkingMode">
            <summary>
            <para xml:lang="en">Current working mode. The working mode start as <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Build"/> and will change to <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Localize"/> after a map load.</para>
            <para xml:lang="zh">当前工作模式。工作模式启动为<see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Build"/>，会在加载地图之后变成<see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.Mode.Localize"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.LocalizedMap">
            <summary>
            <para xml:lang="en">The map being localized.</para>
            <para xml:lang="zh">当前被定位的地图。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.BuilderMapController">
            <summary>
            <para xml:lang="en">The map controller for map building. To visualize the map building, <see cref="F:easyar.SparseSpatialMapController.SourceType"/> of one <see cref="T:easyar.SparseSpatialMapController"/> should be set to <see cref="F:easyar.SparseSpatialMapController.DataSource.MapBuilder"/> and the map should be loaded before building start.</para>
            <para xml:lang="zh">用于建图的map controller。如果想可视化地查看建图过程，需要在建图开始之前设置一个即将被加载的<see cref="T:easyar.SparseSpatialMapController"/>的<see cref="F:easyar.SparseSpatialMapController.SourceType"/>为<see cref="F:easyar.SparseSpatialMapController.DataSource.MapBuilder"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.MapHolder">
            <summary>
            <para xml:lang="en">The map holder which holds and manages maps in the scene.</para>
            <para xml:lang="zh">持有地图的组件，在场景中持有并管理地图。</para>
            </summary>
        </member>
        <member name="P:easyar.SparseSpatialMapWorkerFrameFilter.EnablePoseStabilizer">
            <summary>
            <para xml:lang="en">Enable pose stabilizer.</para>
            <para xml:lang="zh">开启pose稳定。</para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapWorkerFrameFilter.LoadMap(easyar.SparseSpatialMapController)">
            <summary>
            <para xml:lang="en">Load map.</para>
            <para xml:lang="zh">加载地图。</para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapWorkerFrameFilter.UnloadMap(easyar.SparseSpatialMapController)">
            <summary>
            <para xml:lang="en">Unload map.</para>
            <para xml:lang="zh">卸载地图。</para>
            </summary>
        </member>
        <member name="M:easyar.SparseSpatialMapWorkerFrameFilter.HostMap(easyar.SparseSpatialMapController,System.String,easyar.Optional{easyar.Image})">
            <summary>
            <para xml:lang="en">Create and upload map.</para>
            <para xml:lang="zh">创建并上传地图。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapWorkerFrameFilter.MapLocalizerConfig">
            <summary>
            <para xml:lang="en">Map localizer config.</para>
            <para xml:lang="zh">地图定位配置。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.MapLocalizerConfig.EnablePoseStabilizer">
            <summary>
            <para xml:lang="en">Enable pose stabilizer.</para>
            <para xml:lang="zh">开启pose稳定。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.MapLocalizerConfig.LocalizationMode">
            <summary>
            <para xml:lang="en">Localization mode. Will be forced to <see cref="F:easyar.LocalizationMode.KeepUpdate"/> if <see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.MapLocalizerConfig.EnablePoseStabilizer"/> is true.</para>
            <para xml:lang="zh">定位模式。如果<see cref="F:easyar.SparseSpatialMapWorkerFrameFilter.MapLocalizerConfig.EnablePoseStabilizer"/>是true，会强制为<see cref="F:easyar.LocalizationMode.KeepUpdate"/>。</para>
            </summary>
        </member>
        <member name="T:easyar.SparseSpatialMapWorkerFrameFilter.SpatialMapServiceConfig">
            <summary>
            <para xml:lang="en">Service config for <see cref="T:easyar.SparseSpatialMapManager"/>.</para>
            <para xml:lang="zh"><see cref="T:easyar.SparseSpatialMapManager"/>服务器配置。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.SpatialMapServiceConfig.APIKey">
            <summary>
            <para xml:lang="en">API Key, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Key，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.SpatialMapServiceConfig.APISecret">
            <summary>
            <para xml:lang="en">API Secret, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">API Secret，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="F:easyar.SparseSpatialMapWorkerFrameFilter.SpatialMapServiceConfig.SparseSpatialMapAppID">
            <summary>
            <para xml:lang="en">Spatial Map AppID, go to EasyAR Develop Center (https://www.easyar.com) for details.</para>
            <para xml:lang="zh">Spatial Map AppID，详见EasyAR开发中心（https://www.easyar.cn）。</para>
            </summary>
        </member>
        <member name="T:easyar.SurfaceTargetController">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls surface target in the scene. The surface target is a virtual node, representing the relative node when the camera moves in surface tracking.</para>
            <para xml:lang="zh">在场景中控制surface target的<see cref="T:UnityEngine.MonoBehaviour"/>。surface target是一个虚拟的节点，它表示在表面跟踪中，camera移动的相对节点。</para>
            </summary>
        </member>
        <member name="T:easyar.SurfaceTrackerFrameFilter">
            <summary>
            <para xml:lang="en"><see cref="T:UnityEngine.MonoBehaviour"/> which controls <see cref="T:easyar.SurfaceTracker"/> in the scene, providing a few extensions in the Unity environment. Use <see cref="P:easyar.SurfaceTrackerFrameFilter.Tracker"/> directly when necessary.</para>
            <para xml:lang="zh">在场景中控制<see cref="T:easyar.SurfaceTracker"/>的<see cref="T:UnityEngine.MonoBehaviour"/>，在Unity环境下提供功能扩展。如有需要可以直接使用<see cref="P:easyar.SurfaceTrackerFrameFilter.Tracker"/>。</para>
            </summary>
        </member>
        <member name="P:easyar.SurfaceTrackerFrameFilter.Tracker">
            <summary>
            <para xml:lang="en">EasyAR Sense API. Accessible after Awake if available.</para>
            <para xml:lang="zh">EasyAR Sense API，如果功能可以使用，可以在Awake之后访问。</para>
            </summary>
            <senseapi/>
        </member>
        <member name="P:easyar.SurfaceTrackerFrameFilter.Target">
            <summary>
            <para xml:lang="en">The object Camera move against, will be automatically get from the scene or generate if not set.</para>
            <para xml:lang="zh">相机运动的相对物体，如果没设置，将会自动从场景中获取或生成。</para>
            </summary>
        </member>
    </members>
</doc>
